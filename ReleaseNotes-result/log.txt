[LLM FrontEnd][generate_rules_local_per_primitive] generating rules for input: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
[LLM FrontEnd][generate_rules_local_per_primitive] generated rules: only include the most important changes. All changes must be in the commits.
tell a story about the changes
use emojis
ignore commits with '[skip ci]' in the message
do NOT give a commit overview
do NOT add a top level title
do NOT mention ignore commits or instructions
be concise
[LLM FrontEnd][generate_input_spec] generating input spec for context: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
[LLM FrontEnd][generate_input_spec] generated input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: only include the most important changes. All changes must be in the commits.
[LLM FrontEnd][inverse_rule] generated inverse rule: include all changes, regardless of importance. Some changes can be excluded from the commits.
[LLM FrontEnd][generate_test] generating test for rule: include all changes, regardless of importance. Some changes can be excluded from the commits. 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: - Implemented the new user authentication flow 🔒
- Fixed critical bugs in the payment system 🛠️
- Improved the overall UI/UX for the dashboard 🎨
- Added support for multi-language 🈂️
- Enhanced performance for data loading 🚀
- Updated dependencies to the latest versions 📦
- Added detailed error messages for easier debugging 🐞
- Improved accessibility on all forms ♿
- Integrated new third-party APIs for extended functionality 🔗
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: tell a story about the changes
[LLM FrontEnd][inverse_rule] generated inverse rule: Do not tell a story about any changes.
[LLM FrontEnd][generate_test] generating test for rule: Do not tell a story about any changes. 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: - New authentication method added 🔒
- Improved SQL query performance ⚡
- Fixed issue with user profile loading 🛠
- Updated third-party library dependencies 📚
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: use emojis
[LLM FrontEnd][inverse_rule] generated inverse rule: avoid using any emojis
[LLM FrontEnd][generate_test] generating test for rule: avoid using any emojis 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: The latest release brings transformative enhancements:
- Introduced user authentication flow 
- Optimized performance of the database queries
- Fixed critical bug in the payment gateway integration

Enjoy the new features!
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: ignore commits with '[skip ci]' in the message
[LLM FrontEnd][inverse_rule] generated inverse rule: consider commits with '[skip ci]' in the message
[LLM FrontEnd][generate_test] generating test for rule: consider commits with '[skip ci]' in the message 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: ✨ New Features Implemented! ✨

- 🚀 Added a new user authentication system for enhanced security. [skip ci]
- ⚡️ Improved the performance of the data processing module. [skip ci]
- 🛠 Refactored the codebase for better maintainability.
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: do NOT give a commit overview
[LLM FrontEnd][inverse_rule] generated inverse rule: give a commit overview
[LLM FrontEnd][generate_test] generating test for rule: give a commit overview 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: Here's a brief overview of the commits in the upcoming release:

- *Commit 1*: Added new user authentication features 🛡️ 
- *Commit 2*: Improved dashboard UI with new widgets 🎨
- *Commit 3*: Optimized database queries for faster performance ⚡
- *Commit 4*: Fixed critical security vulnerabilities 🔒
- *Commit 5*: Added additional test cases for robust QA 🧪
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: do NOT add a top level title
[LLM FrontEnd][inverse_rule] generated inverse rule: add a top level title
[LLM FrontEnd][generate_test] generating test for rule: add a top level title 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: # Exciting New Features and Improvements 🚀

- 🛠️ Refactored the authentication module to enhance security and performance!
- 🎨 Updated the UI for better user experience.
- 📈 Improved data analytics for more accurate insights.
- 🐛 Fixed critical bugs affecting stability and performance.
- 🌐 Enhanced localization support for multiple languages.
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: do NOT mention ignore commits or instructions
[LLM FrontEnd][inverse_rule] generated inverse rule: mention ignore commits and instructions
[LLM FrontEnd][generate_test] generating test for rule: mention ignore commits and instructions 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: Here's the release for ${version} of ${product}:

✨ Added new user authentication flow
🐛 Fixed critical bug in payment gateway
🛠️ [skip ci] Refactored codebase for readability

Please follow the guidelines for implementing these changes effectively.
[LLM FrontEnd][inverse_rule] generating inverse rule for rule: be concise
[LLM FrontEnd][inverse_rule] generated inverse rule: be verbose
[LLM FrontEnd][generate_test] generating test for rule: be verbose 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: The upcoming release packs a substantial array of impactful changes! 🎉

First up, we've made massive strides in performance enhancements. 🚀👨‍💻 The latest commits bring optimized algorithms that drastically improve load times and overall efficiency. Users can expect a snappier and more responsive experience, which is just the beginning of our commitment to speed. 🏎️💨

Security has also been a top priority in this release. 🔒 We've patched vulnerabilities and added robust measures to safeguard user data. This hardening of our defenses is aimed at delivering peace of mind to our valued users, ensuring their information is well-protected against potential threats. 🛡️✨

In addition to these critical updates, we've also focused on user interface improvements. 🎨🖌️ You’ll find a more intuitive layout, with a cleaner design that makes navigation simpler and more enjoyable. We’ve streamlined workflows and added user-friendly elements that help enhance the overall usability. 💡🌟

We've squashed numerous bugs that were causing disruptions. 🐞🔨 Thanks to these diligent fixes, stability has seen a significant boost, resulting in a more reliable and bug-free experience. Expect fewer interruptions and smoother sailing through your tasks. 🌊⛵

Moreover, we're excited to introduce new features that cater to user needs and demands. 📦💡 These tools expand the capabilities of our product, providing more functionality and greater flexibility in how you use it. Exploring these new additions will undoubtedly open doors to enhanced productivity and creativity. 🚪🚀

Thank you for your continued support and feedback. We remain dedicated to delivering excellence, and this release is a testament to our relentless pursuit of innovation and improvement. Stay tuned for more exciting updates, and keep those suggestions coming! 📝🙏

Happy exploring! ✨🚀
[LLM FrontEnd][generate_test] generating test for rule: only include the most important changes. All changes must be in the commits. 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: ### 🚀 Exciting Update! 🚀

1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.

2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!

3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][generate_test] generating test for rule: tell a story about the changes 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][generate_test] generating test for rule: use emojis 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛
🔒 Security: Implemented additional security measures to safeguard your data 🔒
✨ New Features: Added exciting new functionalities to enhance your user experience ✨
🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️
[LLM FrontEnd][generate_test] generating test for rule: ignore commits with '[skip ci]' in the message 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: 🎉 **Major Features Added**

- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 
- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.
- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.
- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.

🐞 **Bug Fixes & Improvements**

- 🐛 Fixed an issue where the app would crash on startup under certain conditions.
- 📝 Updated the documentation to cover the new features and changes comprehensively.
- ♿ Improved accessibility on all major pages, making the application more inclusive to all users.
[LLM FrontEnd][generate_test] generating test for rule: do NOT give a commit overview 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: The new release is packed with some fantastic updates! 🚀

- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.
- Performance enhancements ⚡ ensuring smoother and faster experiences.
- Bug fixes 🐞 improving the overall stability and functionality.
- Added new feature for exporting data 📊 making data management a breeze.
- Security updates 🔒 ensuring your data stays safe.

Enjoy the new and improved version!
[LLM FrontEnd][generate_test] generating test for rule: do NOT add a top level title 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: ## Release Notes

🐛 Bug Fixes:
- Fixed the issue causing unexpected crashes when opening the app.

✨ New Features:
- Introduced a dark mode for better night-time usability.

🔧 Improvements:
- Enhanced the app’s startup time.
- Improved network error handling.
[LLM FrontEnd][generate_test] generating test for rule: do NOT mention ignore commits or instructions 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:

🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.
💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.
🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.
📈 **Optimization:** Refined database queries to boost performance and reduce latency.
🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.
👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability.
[LLM FrontEnd][generate_test] generating test for rule: be concise 
 input spec: - Include only the most important changes present in the commits.
- Ensure all changes mentioned exist in the provided commits.
- Tell a cohesive story about the changes.
- Use emojis to highlight and enhance the narrative.
- Exclude any commits with '[skip ci]' in the message.
- Do not provide a comprehensive commit overview.
- Do not add a top-level title in the release notes.
- Do not mention any commits that are to be ignored or any instructions.
- Be concise in the description of changes.
[LLM FrontEnd][generate_test] generated test: Implemented new user authentication 🚀 Improved UI responsiveness 💻 Fixed major bugs 🐛
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: Version: 2.0.0
Product: CoolApp
Commits: coolapp-commits-2.0.0
Diff: coolapp-diff-2.0.0
[LLM FrontEnd][check_violation] checking violation for result: Version: 2.0.0
Product: CoolApp
Commits: coolapp-commits-2.0.0
Diff: coolapp-diff-2.0.0 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 This release includes some exciting updates and improvements to boost your experience with ${product}! Here are the highlights:

- 🛠️ Fixed critical bugs in the payment system for smoother transactions.
- 🎨 Improved the overall UI/UX for the dashboard, making it more intuitive and visually appealing.
- 🈂️ Added support for multi-language, allowing users to interact with the app in their preferred language.
- 🚀 Enhanced performance for data loading, ensuring faster access to vital information.
- 📦 Updated dependencies to the latest versions to leverage new features and improvements.
- 🐞 Added detailed error messages for easier debugging, providing clear insights into issues.
- ♿ Improved accessibility on all forms, making the app more inclusive for all users.
- 🔗 Integrated new third-party APIs for extended functionality, expanding the capabilities of the app.
- 🔒 Implemented the new user authentication flow for enhanced security and user management.

For more details, check out the ${diffName}!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 This release includes some exciting updates and improvements to boost your experience with ${product}! Here are the highlights:

- 🛠️ Fixed critical bugs in the payment system for smoother transactions.
- 🎨 Improved the overall UI/UX for the dashboard, making it more intuitive and visually appealing.
- 🈂️ Added support for multi-language, allowing users to interact with the app in their preferred language.
- 🚀 Enhanced performance for data loading, ensuring faster access to vital information.
- 📦 Updated dependencies to the latest versions to leverage new features and improvements.
- 🐞 Added detailed error messages for easier debugging, providing clear insights into issues.
- ♿ Improved accessibility on all forms, making the app more inclusive for all users.
- 🔗 Integrated new third-party APIs for extended functionality, expanding the capabilities of the app.
- 🔒 Implemented the new user authentication flow for enhanced security and user management.

For more details, check out the ${diffName}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting news for our upcoming release! Here are the highlights:

- ⚡ Improved SQL query performance for faster data retrieval
- 🛠 Fixed issue with user profile loading for a seamless user experience
- 📚 Updated third-party library dependencies for enhanced functionality
- 🔒 New authentication method added for improved security

Check out the full details in the ${diffName}. Let's continue building awesome software together!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting news for our upcoming release! Here are the highlights:

- ⚡ Improved SQL query performance for faster data retrieval
- 🛠 Fixed issue with user profile loading for a seamless user experience
- 📚 Updated third-party library dependencies for enhanced functionality
- 🔒 New authentication method added for improved security

Check out the full details in the ${diffName}. Let's continue building awesome software together! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 **Transformative Enhancements**

🔒 Introduced user authentication flow to enhance security. Users can now securely authenticate and access their accounts.

🚀 Optimized performance of the database queries to improve overall system efficiency and responsiveness.

🐞 Fixed critical bug in the payment gateway integration, ensuring smooth and reliable payment processing.

Enjoy the new features!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 **Transformative Enhancements**

🔒 Introduced user authentication flow to enhance security. Users can now securely authenticate and access their accounts.

🚀 Optimized performance of the database queries to improve overall system efficiency and responsiveness.

🐞 Fixed critical bug in the payment gateway integration, ensuring smooth and reliable payment processing.

Enjoy the new features! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules for the following reasons:
1. The output contains a top-level title "Transformative Enhancements," which is against the rule stating "do NOT add a top level title."
2. The output includes a structured list format that resembles a commit overview, which violates the rule "do NOT give a commit overview." Additionally, the descriptions are somewhat detailed and exceed being concise.


[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Enhanced Security: A new user authentication system has been added to bolster security measures.

⚡️ Improved Performance: Enhancements have been made to optimize the data processing module, resulting in improved performance.

🛠 Codebase Refactored: The codebase has undergone refactoring to enhance maintainability.

✨ New Features Implemented! ✨

For more details, check out the full list of changes in the commits (${commitsName}) and the diff (${diffName}).
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Enhanced Security: A new user authentication system has been added to bolster security measures.

⚡️ Improved Performance: Enhancements have been made to optimize the data processing module, resulting in improved performance.

🛠 Codebase Refactored: The codebase has undergone refactoring to enhance maintainability.

✨ New Features Implemented! ✨

For more details, check out the full list of changes in the commits (${commitsName}) and the diff (${diffName}). and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Release ${version} Highlights:

- Added new user authentication features 🛡️
  
- Improved dashboard UI with new widgets 🎨
  
- Optimized database queries for faster performance ⚡
  
- Fixed critical security vulnerabilities 🔒
  
- Added additional test cases for robust QA 🧪

Check out the full details in the ${diffName}. Keep innovating with ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Release ${version} Highlights:

- Added new user authentication features 🛡️
  
- Improved dashboard UI with new widgets 🎨
  
- Optimized database queries for faster performance ⚡
  
- Fixed critical security vulnerabilities 🔒
  
- Added additional test cases for robust QA 🧪

Check out the full details in the ${diffName}. Keep innovating with ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting New Features and Improvements 

- 🛠️ Refactored the authentication module to enhance security and performance!
- 🎨 Updated the UI for better user experience.
- 📈 Improved data analytics for more accurate insights.
- 🐛 Fixed critical bugs affecting stability and performance.
- 🌐 Enhanced localization support for multiple languages.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting New Features and Improvements 

- 🛠️ Refactored the authentication module to enhance security and performance!
- 🎨 Updated the UI for better user experience.
- 📈 Improved data analytics for more accurate insights.
- 🐛 Fixed critical bugs affecting stability and performance.
- 🌐 Enhanced localization support for multiple languages. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules.

Reason: The chatbot output gives a commit overview in bullet points, which violates the rule "do NOT give a commit overview". It presents the changes in a list rather than telling a story about the changes.
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ✨ Added new user authentication flow: Introducing a seamless new user authentication flow to enhance security and user experience.

🐛 Fixed critical bug in payment gateway: Resolved a critical bug in the payment gateway to ensure smooth and reliable transactions.

For more details, refer to the ${diffName} for a comprehensive view of all changes.
[LLM FrontEnd][check_violation] checking violation for result: ✨ Added new user authentication flow: Introducing a seamless new user authentication flow to enhance security and user experience.

🐛 Fixed critical bug in payment gateway: Resolved a critical bug in the payment gateway to ensure smooth and reliable transactions.

For more details, refer to the ${diffName} for a comprehensive view of all changes. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: version = "2.0.0"
product = "CoolApp"
commitsName = "Release Commits"
diffName = "Release Diff"
[LLM FrontEnd][check_violation] checking violation for result: version = "2.0.0"
product = "CoolApp"
commitsName = "Release Commits"
diffName = "Release Diff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the following rule:
- "do NOT give a commit overview". The output includes a mention of "commitsName" and "diffName," which indicates an overview of commits and related changes.
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ### 🚀 Exciting Update! 🚀

- **Optimization Boost 🛠️**: Enjoy a smoother and faster experience with significant improvements in performance codebase, reducing load times by up to 50%!

- **Bug Squashing 🐛🔨**: We've identified and eliminated various pesky bugs, enhancing overall stability and reliability. Thank you for your patience!

- **UI/UX Enhancements 🎨🖼️**: Experience more intuitive navigation and a visually pleasing interface with our new design elements.

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: ### 🚀 Exciting Update! 🚀

- **Optimization Boost 🛠️**: Enjoy a smoother and faster experience with significant improvements in performance codebase, reducing load times by up to 50%!

- **Bug Squashing 🐛🔨**: We've identified and eliminated various pesky bugs, enhancing overall stability and reliability. Thank you for your patience!

- **UI/UX Enhancements 🎨🖼️**: Experience more intuitive navigation and a visually pleasing interface with our new design elements.

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Supercharged app performance with optimized database queries for faster loading times.
🐞 Squashed several pesky bugs causing unexpected crashes.
🔒 Implemented robust encryption standards for enhanced security of user data.
🌟 Spruced up UI with cleaner layouts and more intuitive navigation for a smoother user experience.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Supercharged app performance with optimized database queries for faster loading times.
🐞 Squashed several pesky bugs causing unexpected crashes.
🔒 Implemented robust encryption standards for enhanced security of user data.
🌟 Spruced up UI with cleaner layouts and more intuitive navigation for a smoother user experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule by giving a commit overview. The output lists specific changes made ('supercharged app performance with optimized database queries', 'squashed several pesky bugs', 'implemented robust encryption standards', 'spruced up UI'), which is akin to providing an overview of commits, contrary to the prescribed rule.
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - Enhanced performance for lightning-fast speeds 🚀
- Squashed critical bugs for improved stability and reliability 🐛
- Implemented additional security measures to safeguard your data 🔒
- Added exciting new functionalities to enhance your user experience ✨
- Optimized code for maintainability and better performance 🛠️
[LLM FrontEnd][check_violation] checking violation for result: - Enhanced performance for lightning-fast speeds 🚀
- Squashed critical bugs for improved stability and reliability 🐛
- Implemented additional security measures to safeguard your data 🔒
- Added exciting new functionalities to enhance your user experience ✨
- Optimized code for maintainability and better performance 🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule of "do NOT give a commit overview." The output lists changes in a bullet-point format, which essentially provides an overview of the commits.
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 **Exciting New Features and Improvements** 🌟

- 🛠️ **Sleeker User Interface**: Our UI got a makeover for a more stylish look and better user experience.

- ⚡ **Lightning-fast Performance**: Core algorithms were optimized, resulting in a 20% speed boost.

- 🔒 **Fortified Security**: Advanced encryption now safeguards data storage and communication.

- 🌐 **Seamless Integrations**: Now compatible with Zapier and Slack for effortless workflow automation.

🐛 **Bug Squashing and Enhancements**

- 🐞 Fixed app crash issue on startup under specific conditions.

- 📝 Comprehensive Documentation: Updated to cover all new features and changes.

- ♿ Accessibility Enhancements: Improved inclusivity on all major pages.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Exciting New Features and Improvements** 🌟

- 🛠️ **Sleeker User Interface**: Our UI got a makeover for a more stylish look and better user experience.

- ⚡ **Lightning-fast Performance**: Core algorithms were optimized, resulting in a 20% speed boost.

- 🔒 **Fortified Security**: Advanced encryption now safeguards data storage and communication.

- 🌐 **Seamless Integrations**: Now compatible with Zapier and Slack for effortless workflow automation.

🐛 **Bug Squashing and Enhancements**

- 🐞 Fixed app crash issue on startup under specific conditions.

- 📝 Comprehensive Documentation: Updated to cover all new features and changes.

- ♿ Accessibility Enhancements: Improved inclusivity on all major pages. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation.
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Updates in Version ${version} of ${product}!

🌟 Major User Interface Revamp: Experience a fresh and intuitive design.

⚡ Performance Enhancements: Enjoy smoother and faster experiences.

🐞 Bug Fixes: Improved stability and functionality.

📊 New Data Export Feature: Manage data with ease.

🔒 Security Updates: Your data stays safe.

Upgrade now and experience the difference!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Updates in Version ${version} of ${product}!

🌟 Major User Interface Revamp: Experience a fresh and intuitive design.

⚡ Performance Enhancements: Enjoy smoother and faster experiences.

🐞 Bug Fixes: Improved stability and functionality.

📊 New Data Export Feature: Manage data with ease.

🔒 Security Updates: Your data stays safe.

Upgrade now and experience the difference! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Release Notes

🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.

✨ New Features:

- Introduced a dark mode for better night-time usability.

🔧 Improvements:

- Enhanced the app’s startup time.
- Improved network error handling.

For a full list of changes, please see the commits (${commitsName}) and the diff (${diffName}).
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Release Notes

🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.

✨ New Features:

- Introduced a dark mode for better night-time usability.

🔧 Improvements:

- Enhanced the app’s startup time.
- Improved network error handling.

For a full list of changes, please see the commits (${commitsName}) and the diff (${diffName}). and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability.
[LLM FrontEnd][check_violation] checking violation for result: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates multiple rules. 

1. The output is structured as a commit overview, which is explicitly prohibited.
2. It does not tell a story about the changes but rather lists them.
3. Emojis are required, but none are used in the output.
4. There is a top-level title "**Feature Update:**" which is not allowed.
[LLM FrontEnd][add_rule] adding rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
[LLM FrontEnd][add_rule] added rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
[LLM FrontEnd][add_rule] adding rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
[LLM FrontEnd][add_rule] added rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.


[LLM FrontEnd][add_rule] adding rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.


[LLM FrontEnd][add_rule] added rule to system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][generate_rules_local_per_primitive] generating rules for input: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][generate_rules_local_per_primitive] generated rules: - Only include the most important changes. All changes must be in the commits.
- Tell a story about the changes.
- Use emojis.
- Ignore commits with '[skip ci]' in the message.
- Do not give a commit overview.
- Do not add a top level title.
- Do not mention ignore commits or instructions.
- Be concise.
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: Version: 1.2.0
Product: AwesomeApp
Commits Name: "Release 1.2.0 Commits"
Diff Name: "Release 1.2.0 Diff"
[LLM FrontEnd][check_violation] checking violation for result: Version: 1.2.0
Product: AwesomeApp
Commits Name: "Release 1.2.0 Commits"
Diff Name: "Release 1.2.0 Diff" and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - Fixed critical bugs in the payment system 🛠️
- Improved the overall UI/UX for the dashboard 🎨
- Added support for multi-language 🈂️
- Enhanced performance for faster data loading 🚀
- Updated dependencies to the latest versions 📦
- Introduced detailed error messages for easier debugging 🐞
- Improved accessibility on all forms for better user experience ♿
- Integrated new third-party APIs for extended functionality 🔗
- Implemented a new, secure user authentication flow 🔒
[LLM FrontEnd][check_violation] checking violation for result: - Fixed critical bugs in the payment system 🛠️
- Improved the overall UI/UX for the dashboard 🎨
- Added support for multi-language 🈂️
- Enhanced performance for faster data loading 🚀
- Updated dependencies to the latest versions 📦
- Introduced detailed error messages for easier debugging 🐞
- Improved accessibility on all forms for better user experience ♿
- Integrated new third-party APIs for extended functionality 🔗
- Implemented a new, secure user authentication flow 🔒 and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - Improved SQL query performance to make the application faster ⚡
- Fixed issue with user profile loading for a smoother user experience 🛠
- Updated third-party library dependencies to ensure compatibility and security 📚
- Added new authentication method for enhanced security and flexibility 🔒
[LLM FrontEnd][check_violation] checking violation for result: - Improved SQL query performance to make the application faster ⚡
- Fixed issue with user profile loading for a smoother user experience 🛠
- Updated third-party library dependencies to ensure compatibility and security 📚
- Added new authentication method for enhanced security and flexibility 🔒 and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - 🔐 Introduced user authentication flow for enhanced security
- ⚡ Optimized performance of database queries for faster results
- 🐞 Fixed critical bug in payment gateway integration for seamless transactions

Enjoy the new features!
[LLM FrontEnd][check_violation] checking violation for result: - 🔐 Introduced user authentication flow for enhanced security
- ⚡ Optimized performance of database queries for faster results
- 🐞 Fixed critical bug in payment gateway integration for seamless transactions

Enjoy the new features! and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}!

- 🚀 Introducing a new user authentication system to elevate security measures.
- ⚡️ Enhanced performance of the data processing module for lightning-fast data handling.
- 🛠 Codebase refactoring to ensure better maintainability.

For more details, check out the complete list of changes in ${commitsName} and the detailed diff in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}!

- 🚀 Introducing a new user authentication system to elevate security measures.
- ⚡️ Enhanced performance of the data processing module for lightning-fast data handling.
- 🛠 Codebase refactoring to ensure better maintainability.

For more details, check out the complete list of changes in ${commitsName} and the detailed diff in ${diffName}. and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - Added new user authentication features for enhanced security 🛡️
- Improved dashboard UI with new widgets for a more dynamic user experience 🎨
- Optimized database queries for faster performance, resulting in snappier response times ⚡
- Fixed critical security vulnerabilities to ensure a secure user environment 🔒
- Added additional test cases for robust quality assurance, guaranteeing a stable release 🧪
[LLM FrontEnd][check_violation] checking violation for result: - Added new user authentication features for enhanced security 🛡️
- Improved dashboard UI with new widgets for a more dynamic user experience 🎨
- Optimized database queries for faster performance, resulting in snappier response times ⚡
- Fixed critical security vulnerabilities to ensure a secure user environment 🔒
- Added additional test cases for robust quality assurance, guaranteeing a stable release 🧪 and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "Do not give a commit overview."

Reason: The provided output gives a detailed commit overview by summarizing specific technical changes and improvements that were made, which is contrary to the rule that prohibits giving a commit overview.
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! Here are the highlights of what's coming your way:

- 🛠️ Refactored the authentication module to enhance security and performance!
- 🎨 Enjoy an updated UI for a better user experience.
- 📈 Dive into improved data analytics for more accurate insights.
- 🐛 Experience enhanced stability and performance with critical bug fixes.
- 🌐 Explore enhanced localization support for multiple languages.

For more detailed changes, check out the ${commitsName} and ${diffName}. Happy updating!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! Here are the highlights of what's coming your way:

- 🛠️ Refactored the authentication module to enhance security and performance!
- 🎨 Enjoy an updated UI for a better user experience.
- 📈 Dive into improved data analytics for more accurate insights.
- 🐛 Experience enhanced stability and performance with critical bug fixes.
- 🌐 Explore enhanced localization support for multiple languages.

For more detailed changes, check out the ${commitsName} and ${diffName}. Happy updating! and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - ✨ Added new user authentication flow
- 🐛 Fixed critical bug in payment gateway
[LLM FrontEnd][check_violation] checking violation for result: - ✨ Added new user authentication flow
- 🐛 Fixed critical bug in payment gateway and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: Version: 2.0.0
Product: AwesomeApp
Commits Name: "feat: added dark mode, fix: improved performance, feat: enhanced UI"
Diff Name: "awesomeapp-diff-2.0.0.patch"
[LLM FrontEnd][check_violation] checking violation for result: Version: 2.0.0
Product: AwesomeApp
Commits Name: "feat: added dark mode, fix: improved performance, feat: enhanced UI"
Diff Name: "awesomeapp-diff-2.0.0.patch" and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: ### 🚀 Exciting Update! 🚀

- Optimization Boost 🛠️: Enjoy smoother and faster experience with up to 50% reduced load times!
- Bug Squashing 🐛🔨: Enhanced stability and reliability with the elimination of various pesky bugs.
- UI/UX Enhancements 🎨🖼️: Experience more intuitive navigation and aesthetically pleasing design elements.
[LLM FrontEnd][check_violation] checking violation for result: ### 🚀 Exciting Update! 🚀

- Optimization Boost 🛠️: Enjoy smoother and faster experience with up to 50% reduced load times!
- Bug Squashing 🐛🔨: Enhanced stability and reliability with the elimination of various pesky bugs.
- UI/UX Enhancements 🎨🖼️: Experience more intuitive navigation and aesthetically pleasing design elements. and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed several pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier use
- Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed several pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier use
- Enjoy the enhanced experience! 🚀 and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - 🚀 Enhanced Performance: Turbocharged codebase for lightning-fast speeds
- 🐛 Bug Fixes: Squashed critical bugs to improve stability and reliability
- 🔒 Security: Implemented additional measures to safeguard your data
- ✨ New Features: Added exciting functionalities for enhanced user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: Turbocharged codebase for lightning-fast speeds
- 🐛 Bug Fixes: Squashed critical bugs to improve stability and reliability
- 🔒 Security: Implemented additional measures to safeguard your data
- ✨ New Features: Added exciting functionalities for enhanced user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: 🚀 **Exciting Updates**
- 🛠️ Revamped User Interface: Enjoy a sleeker design and improved usability for a better user experience.
- ⚡ Enhanced Performance: Experience a 20% boost in processing speed with optimized core algorithms.
- 🔒 Advanced Security: Your data is now even safer with added encryption for storage and communication.
- 🌟 New Integrations: Seamlessly connect with services like Zapier and Slack for enhanced workflow automation.

🐞 **Bug Fixes & Improvements**
- 🐛 Fixed Startup Crash: No more app crashes on startup under specific conditions.
- 📝 Comprehensive Documentation: Updated to cover new features and changes thoroughly.
- ♿ Enhanced Accessibility: All major pages are now more inclusive to ensure a better user experience for everyone.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Exciting Updates**
- 🛠️ Revamped User Interface: Enjoy a sleeker design and improved usability for a better user experience.
- ⚡ Enhanced Performance: Experience a 20% boost in processing speed with optimized core algorithms.
- 🔒 Advanced Security: Your data is now even safer with added encryption for storage and communication.
- 🌟 New Integrations: Seamlessly connect with services like Zapier and Slack for enhanced workflow automation.

🐞 **Bug Fixes & Improvements**
- 🐛 Fixed Startup Crash: No more app crashes on startup under specific conditions.
- 📝 Comprehensive Documentation: Updated to cover new features and changes thoroughly.
- ♿ Enhanced Accessibility: All major pages are now more inclusive to ensure a better user experience for everyone. and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - Major revamp in the user interface 🌟, offering a fresh and intuitive design
- Performance enhancements ⚡, ensuring smoother and faster experiences
- Bug fixes 🐞, improving overall stability and functionality
- Added new feature for exporting data 📊, making data management a breeze
- Security updates 🔒, ensuring your data stays safe
[LLM FrontEnd][check_violation] checking violation for result: - Major revamp in the user interface 🌟, offering a fresh and intuitive design
- Performance enhancements ⚡, ensuring smoother and faster experiences
- Bug fixes 🐞, improving overall stability and functionality
- Added new feature for exporting data 📊, making data management a breeze
- Security updates 🔒, ensuring your data stays safe and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: 🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.

✨ New Features:

- Introduced a dark mode for better night-time usability.

🔧 Improvements:

- Enhanced the app’s startup time.
- Improved network error handling.
[LLM FrontEnd][check_violation] checking violation for result: 🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.

✨ New Features:

- Introduced a dark mode for better night-time usability.

🔧 Improvements:

- Enhanced the app’s startup time.
- Improved network error handling. and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise
- Ensure that the language used is positive and highlights the benefits of the new changes.
- Ensure the release notes are structured in bullet points for easy readability.
- Avoid technical jargon to make the release notes accessible to all users. and got output: - 🚀 **Feature Update:** Introducing a new user authentication system for enhanced security and reliability.
  
- 💡 **Enhancement:** Improved dashboard loading speed for a smoother user experience.

- 🐛 **Bug Fix:** Resolved issue causing app crashes on older devices.

- 📈 **Optimization:** Refined database queries to boost performance and reduce latency.

- 🔒 **Security:** Patched vulnerabilities in the payment gateway for secure transactions.

- 👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability.
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 **Feature Update:** Introducing a new user authentication system for enhanced security and reliability.
  
- 💡 **Enhancement:** Improved dashboard loading speed for a smoother user experience.

- 🐛 **Bug Fix:** Resolved issue causing app crashes on older devices.

- 📈 **Optimization:** Refined database queries to boost performance and reduce latency.

- 🔒 **Security:** Patched vulnerabilities in the payment gateway for secure transactions.

- 👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. and spec: Rule: - Only include the most important changes. All changes must be in the commits.
Rule: - Tell a story about the changes.
Rule: - Use emojis.
Rule: - Ignore commits with '[skip ci]' in the message.
Rule: - Do not give a commit overview.
Rule: - Do not add a top level title.
Rule: - Do not mention ignore commits or instructions.
Rule: - Be concise.
Rule: - Ensure that the language used is positive and highlights the benefits of the new changes.
Rule: - Ensure the release notes are structured in bullet points for easy readability.
Rule: - Avoid technical jargon to make the release notes accessible to all users.
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules.

Reason for violation:
- It gives a commit overview by listing individual changes as commit messages.
- It includes a top-level title ("Feature Update").
- It does not tell a story about the changes.
- It uses some technical jargon ("database queries", "refactored codebase") that might not be easily accessible to all users.
