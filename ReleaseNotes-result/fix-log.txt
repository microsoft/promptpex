[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: version = "2.1.0"
product = "CoolApp"
commitsName = "Release 2.1.0 Commits"
diffName = "Release 2.1.0 Diff"
[LLM FrontEnd][check_violation] checking violation for result: version = "2.1.0"
product = "CoolApp"
commitsName = "Release 2.1.0 Commits"
diffName = "Release 2.1.0 Diff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
All commits must be in the commits, do NOT give a commit overview.
The output generates a commit summary rather than following the rules about describing the important changes in the form of a story, using emojis, ignoring '[skip ci]' commits, and being concise.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Enhanced performance for data loading

🎨 Improved the overall UI/UX for the dashboard

🈂️ Added support for multi-language

📦 Updated dependencies to the latest versions

🔗 Integrated new third-party APIs for extended functionality

🔒 Implemented the new user authentication flow

🐞 Added detailed error messages for easier debugging

♿ Improved accessibility on all forms

🛠️ Fixed critical bugs in the payment system
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Enhanced performance for data loading

🎨 Improved the overall UI/UX for the dashboard

🈂️ Added support for multi-language

📦 Updated dependencies to the latest versions

🔗 Integrated new third-party APIs for extended functionality

🔒 Implemented the new user authentication flow

🐞 Added detailed error messages for easier debugging

♿ Improved accessibility on all forms

🛠️ Fixed critical bugs in the payment system and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules. Specifically, it violates the rule that states "do NOT give a commit overview." The output lists changes in a manner similar to a commit overview rather than telling a cohesive story as required.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting news for the upcoming release of ${product} ${version} on GitHub:

- ⚡ Improved SQL query performance to boost speed and efficiency.
- 🛠 Fixed user profile loading issue for a smoother experience.
- 📚 Updated third-party library dependencies to stay current and secure.
- 🔒 Introduced a new authentication method for enhanced security.

Stay tuned for more details in the ${diffName}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting news for the upcoming release of ${product} ${version} on GitHub:

- ⚡ Improved SQL query performance to boost speed and efficiency.
- 🛠 Fixed user profile loading issue for a smoother experience.
- 📚 Updated third-party library dependencies to stay current and secure.
- 🔒 Introduced a new authentication method for enhanced security.

Stay tuned for more details in the ${diffName}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ### New Features and Enhancements

🚀 **User Authentication Flow:** Introducing a seamless and secure user authentication flow to enhance the user experience.

🔍 **Database Performance Optimization:** Optimized database queries to improve overall system performance and responsiveness.

🐞 **Payment Gateway Bug Fix:** Resolved a critical bug in the payment gateway integration for smoother transactions.

Upgrade now and enjoy the latest transformative enhancements!
[LLM FrontEnd][check_violation] checking violation for result: ### New Features and Enhancements

🚀 **User Authentication Flow:** Introducing a seamless and secure user authentication flow to enhance the user experience.

🔍 **Database Performance Optimization:** Optimized database queries to improve overall system performance and responsiveness.

🐞 **Payment Gateway Bug Fix:** Resolved a critical bug in the payment gateway integration for smoother transactions.

Upgrade now and enjoy the latest transformative enhancements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1  
The chatbot output violates the rules for the following reasons:
- It includes a top-level title ("### New Features and Enhancements"), which is explicitly prohibited by the rules.
- It provides a commit-style overview of the changes, which is against the rule of not giving a commit overview.
- It lacks a storytelling element about the changes, contravening the rule to tell a story about the changes.
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Added a new user authentication system for enhanced security.

⚡️ Improved the performance of the data processing module.

🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Added a new user authentication system for enhanced security.

⚡️ Improved the performance of the data processing module.

🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 Exciting Updates in Version ${version} 🎉

🛡️ Enhanced Security:
  - Added new user authentication features to provide enhanced security for our users.

🎨 Improved User Interface:
  - Revamped dashboard UI with new widgets for a more user-friendly experience.

⚡ Performance Boost:
  - Optimized database queries for faster performance, ensuring a seamless user experience.

🔒 Critical Security Fixes:
  - Addressed critical security vulnerabilities to maintain a secure environment for our users.

🧪 Robust Quality Assurance:
  - Expanded test coverage with additional test cases to ensure robust quality assurance for the application.

Check out the full details of these changes in the ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Exciting Updates in Version ${version} 🎉

🛡️ Enhanced Security:
  - Added new user authentication features to provide enhanced security for our users.

🎨 Improved User Interface:
  - Revamped dashboard UI with new widgets for a more user-friendly experience.

⚡ Performance Boost:
  - Optimized database queries for faster performance, ensuring a seamless user experience.

🔒 Critical Security Fixes:
  - Addressed critical security vulnerabilities to maintain a secure environment for our users.

🧪 Robust Quality Assurance:
  - Expanded test coverage with additional test cases to ensure robust quality assurance for the application.

Check out the full details of these changes in the ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting New Features and Improvements 🚀

🛠️ Refactored the authentication module to enhance security and performance!

🎨 Updated the UI for better user experience.

📈 Improved data analytics for more accurate insights.

🐛 Fixed critical bugs affecting stability and performance.

🌐 Enhanced localization support for multiple languages.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting New Features and Improvements 🚀

🛠️ Refactored the authentication module to enhance security and performance!

🎨 Updated the UI for better user experience.

📈 Improved data analytics for more accurate insights.

🐛 Fixed critical bugs affecting stability and performance.

🌐 Enhanced localization support for multiple languages. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 **Release Notes for Version ${version} of ${product}**

✨ Added new user authentication flow
🐛 Fixed critical bug in payment gateway
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Release Notes for Version ${version} of ${product}**

✨ Added new user authentication flow
🐛 Fixed critical bug in payment gateway and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule "do NOT add a top level title" because it includes a top-level title: "🚀 **Release Notes for Version ${version} of ${product}**".
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ${version} = "2.0.0"
${product} = "CoolApp"
${commitsName} = "ReleaseCommits"
${diffName} = "ReleaseDiff"
[LLM FrontEnd][check_violation] checking violation for result: ${version} = "2.0.0"
${product} = "CoolApp"
${commitsName} = "ReleaseCommits"
${diffName} = "ReleaseDiff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Update! 🚀

✨ **Optimization Boost 🛠️**: Experience significant improvements with up to 50% reduction in load times. Your interactions will be smoother and faster.

🐛🔨 **Bug Squashing**: We've eliminated various pesky bugs, enhancing overall stability and reliability.

🎨🖼️ **UI/UX Enhancements**: Enjoy a more engaging and intuitive interface with new design elements.

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Update! 🚀

✨ **Optimization Boost 🛠️**: Experience significant improvements with up to 50% reduction in load times. Your interactions will be smoother and faster.

🐛🔨 **Bug Squashing**: We've eliminated various pesky bugs, enhancing overall stability and reliability.

🎨🖼️ **UI/UX Enhancements**: Enjoy a more engaging and intuitive interface with new design elements.

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "do NOT add a top level title." The phrase "🚀 Exciting Update! 🚀" serves as a top level title in the response, which is explicitly prohibited by the rules.
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 Supercharged the app's performance ⚡️ with optimized database queries for faster loading times
🐞 Squashed several pesky bugs causing unexpected crashes for a smoother user experience
🔒 Implemented robust encryption standards for enhanced security of user data
🌟 Spruced-up UI with cleaner layouts and more intuitive navigation for an improved user experience
🚀 Enjoy the enhanced experience!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Supercharged the app's performance ⚡️ with optimized database queries for faster loading times
🐞 Squashed several pesky bugs causing unexpected crashes for a smoother user experience
🔒 Implemented robust encryption standards for enhanced security of user data
🌟 Spruced-up UI with cleaner layouts and more intuitive navigation for an improved user experience
🚀 Enjoy the enhanced experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "do NOT give a commit overview". The provided text lists specific changes and improvements, which is effectively giving an overview of individual commits.
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds!
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability
- 🔒 Security: Implemented additional security measures to safeguard your data
- ✨ New Features: Added exciting new functionalities to enhance your user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds!
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability
- 🔒 Security: Implemented additional security measures to safeguard your data
- ✨ New Features: Added exciting new functionalities to enhance your user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules because it provides a commit overview, which is explicitly prohibited by the rules. The output lists multiple types of changes (e.g., enhanced performance, bug fixes, security measures, new features, and refactoring) rather than telling a cohesive story about the changes. Additionally, the output does not adhere to the "be concise" rule as it lists many changes instead of focusing on only the most important ones.
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 **Major Features Added**

- 🛠️ **Improved User Interface**: Revamped UI components for a sleeker design and enhanced usability.
- ⚡ **Performance Boost**: Optimized core algorithms for a 20% improvement in processing speed.
- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication.
- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack.

🐞 **Bug Fixes & Improvements**

- 🐛 Fixed app crash on startup under certain conditions.
- 📝 Updated documentation to cover new features and changes comprehensively.
- ♿ Improved accessibility on all major pages for a more inclusive user experience.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 **Major Features Added**

- 🛠️ **Improved User Interface**: Revamped UI components for a sleeker design and enhanced usability.
- ⚡ **Performance Boost**: Optimized core algorithms for a 20% improvement in processing speed.
- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication.
- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack.

🐞 **Bug Fixes & Improvements**

- 🐛 Fixed app crash on startup under certain conditions.
- 📝 Updated documentation to cover new features and changes comprehensively.
- ♿ Improved accessibility on all major pages for a more inclusive user experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Updates in ${product} ${version} Release:

- Revamped User Interface 🌟: Experience a fresh and intuitive design with a major UI overhaul.

- Performance Enhancements ⚡: Enjoy smoother and faster experiences with significant performance improvements.

- Bug Fixes 🐞: Benefit from improved stability and functionality with important bug fixes.

- New Data Export Feature 📊: Easily manage and export data with the added feature for seamless data management.

- Enhanced Security 🔒: Stay confident with updated security measures to safeguard your data.

Upgrade now and enjoy the enhanced ${product} experience!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Updates in ${product} ${version} Release:

- Revamped User Interface 🌟: Experience a fresh and intuitive design with a major UI overhaul.

- Performance Enhancements ⚡: Enjoy smoother and faster experiences with significant performance improvements.

- Bug Fixes 🐞: Benefit from improved stability and functionality with important bug fixes.

- New Data Export Feature 📊: Easily manage and export data with the added feature for seamless data management.

- Enhanced Security 🔒: Stay confident with updated security measures to safeguard your data.

Upgrade now and enjoy the enhanced ${product} experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output generated by the chatbot violates the rules.

Reason:
- It includes a top-level title ("🚀 Exciting Updates in ${product} ${version} Release:").
- The output does not tell a story about the changes; it merely lists the changes.
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Release ${version} Highlights

🐛 Bug Fixes:
- Resolved the issue causing unexpected crashes when opening the app.

✨ New Features:
- Introduced a dark mode for better night-time usability.

🔧 Improvements:
- Enhanced the app’s startup time.
- Improved network error handling.

For a detailed list of changes, check out ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Release ${version} Highlights

🐛 Bug Fixes:
- Resolved the issue causing unexpected crashes when opening the app.

✨ New Features:
- Introduced a dark mode for better night-time usability.

🔧 Improvements:
- Enhanced the app’s startup time.
- Improved network error handling.

For a detailed list of changes, check out ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Guidelines

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability.
[LLM FrontEnd][check_violation] checking violation for result: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules. 

- The output does not tell a story about the changes.
- It lacks emojis, which are required.
- It provides a commit overview, which is prohibited.
- It includes a top-level title "Feature Update," which is not allowed.
- The text is not particularly concise.
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: version = "2.0.0"
product = "AwesomeApp"
commitsName = "release-2.0.0-commits.diff"
diffName = "release-2.0.0-diff.diff"
[LLM FrontEnd][check_violation] checking violation for result: version = "2.0.0"
product = "AwesomeApp"
commitsName = "release-2.0.0-commits.diff"
diffName = "release-2.0.0-diff.diff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🛠️ Fixed critical bugs in the payment system.

🎨 Improved the overall UI/UX for the dashboard.

🈂️ Added support for multi-language.

🚀 Enhanced performance for data loading.

📦 Updated dependencies to the latest versions.

🐞 Added detailed error messages for easier debugging.

♿ Improved accessibility on all forms.

🔗 Integrated new third-party APIs for extended functionality.

🔒 Implemented the new user authentication flow.
[LLM FrontEnd][check_violation] checking violation for result: 🛠️ Fixed critical bugs in the payment system.

🎨 Improved the overall UI/UX for the dashboard.

🈂️ Added support for multi-language.

🚀 Enhanced performance for data loading.

📦 Updated dependencies to the latest versions.

🐞 Added detailed error messages for easier debugging.

♿ Improved accessibility on all forms.

🔗 Integrated new third-party APIs for extended functionality.

🔒 Implemented the new user authentication flow. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule that states "do NOT give a commit overview." The provided output is a clear list of commit-like statements, each describing a specific change or improvement made, which constitutes a commit overview.

Reason: The chatbot output violates the rule "do NOT give a commit overview" by listing each change as separate entries, effectively summarizing commit messages.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Improved SQL query performance for faster data retrieval
🛠 Fixed loading issue with user profiles for smoother experience
📚 Updated third-party library dependencies to enhance functionality
🔒 Added new authentication method for improved security
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Improved SQL query performance for faster data retrieval
🛠 Fixed loading issue with user profiles for smoother experience
📚 Updated third-party library dependencies to enhance functionality
🔒 Added new authentication method for improved security and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "do NOT give a commit overview". The output lists specific changes (improved SQL query performance, fixed loading issue, updated dependencies, added new authentication method) as if summarizing commit details, which constitutes giving a commit overview.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: Release Notes for ${version} 🚀

🎉 Introducing User Authentication Flow:
   Experience a seamless and secure login process with our brand new user authentication flow.

🚀 Optimized Database Performance:
   Enjoy faster and more efficient database queries, resulting in improved overall system performance.

🐞 Critical Bug Fix:
   Rest easy with a critical bug in the payment gateway integration now fixed, ensuring smooth and reliable transactions.

Check out the full details of the changes in the commits to explore the depth of the enhancements.
[LLM FrontEnd][check_violation] checking violation for result: Release Notes for ${version} 🚀

🎉 Introducing User Authentication Flow:
   Experience a seamless and secure login process with our brand new user authentication flow.

🚀 Optimized Database Performance:
   Enjoy faster and more efficient database queries, resulting in improved overall system performance.

🐞 Critical Bug Fix:
   Rest easy with a critical bug in the payment gateway integration now fixed, ensuring smooth and reliable transactions.

Check out the full details of the changes in the commits to explore the depth of the enhancements. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The violation for the chatbot output is due to the following reasons:

1. The chatbot mentioned commits: "Check out the full details of the changes in the commits to explore the depth of the enhancements." This violates the rule that states, "do NOT give a commit overview."
2. The output contains a top-level title: "Release Notes for ${version} 🚀". This violates the rule that states, "do NOT add a top level title."
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Added a new user authentication system for enhanced security.

⚡️ Improved the performance of the data processing module.

🛠 Refactored the codebase for better maintainability.

Check out the full list of changes in the commits and the diff for more details!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Added a new user authentication system for enhanced security.

⚡️ Improved the performance of the data processing module.

🛠 Refactored the codebase for better maintainability.

Check out the full list of changes in the commits and the diff for more details! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The reason for the violation is that the chatbot's output gives a commit overview and mentions checking out the full list of changes in the commits and the diff for more details. This is against the rule that states "do NOT give a commit overview". Additionally, the output should tell a story about the changes, which the current output fails to do.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Updates in ${product} ${version} Release! 🚀

🛡️ *Added* new user authentication features to enhance security.

🎨 *Improved* dashboard UI with new widgets for a better user experience.

⚡ *Optimized* database queries for faster performance, making the system more efficient.

🔒 *Fixed* critical security vulnerabilities to ensure a secure environment.

🧪 *Added* additional test cases for robust quality assurance, for a more reliable product.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Updates in ${product} ${version} Release! 🚀

🛡️ *Added* new user authentication features to enhance security.

🎨 *Improved* dashboard UI with new widgets for a better user experience.

⚡ *Optimized* database queries for faster performance, making the system more efficient.

🔒 *Fixed* critical security vulnerabilities to ensure a secure environment.

🧪 *Added* additional test cases for robust quality assurance, for a more reliable product. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the following rules:

1. It adds a top-level title: "🚀 Exciting Updates in ${product} ${version} Release! 🚀" which goes against the rule "do NOT add a top level title."

2. The output is not telling a story about the changes but rather listing them out, which goes against the rule "tell a story about the changes."

Reason for Violation: The output includes a top-level title and does not tell a story.
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting New Features and Improvements 🚀

🛠️ Refactored the authentication module to enhance security and performance!
🎨 Updated the UI for better user experience.
📈 Improved data analytics for more accurate insights.
🐛 Fixed critical bugs affecting stability and performance.
🌐 Enhanced localization support for multiple languages.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting New Features and Improvements 🚀

🛠️ Refactored the authentication module to enhance security and performance!
🎨 Updated the UI for better user experience.
📈 Improved data analytics for more accurate insights.
🐛 Fixed critical bugs affecting stability and performance.
🌐 Enhanced localization support for multiple languages. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 **Release Notes for Version ${version} of ${product}**

🌟 Added a new user authentication flow to enhance security and user experience.

🐞 Fixed a critical bug in the payment gateway to ensure smooth and secure transactions.

For a detailed list of changes, please refer to the ${commitsName} and ${diffName}.

Let's keep the momentum going and continue improving ${product}! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Release Notes for Version ${version} of ${product}**

🌟 Added a new user authentication flow to enhance security and user experience.

🐞 Fixed a critical bug in the payment gateway to ensure smooth and secure transactions.

For a detailed list of changes, please refer to the ${commitsName} and ${diffName}.

Let's keep the momentum going and continue improving ${product}! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the following rules:

- Rule: do NOT give a commit overview (mentions ${commitsName} and ${diffName}).
- Rule: do NOT add a top level title (top level title present: **Release Notes for Version ${version} of ${product}**).
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ${version} = "2.0.0"
${product} = "AwesomeApp"
${commitsName} = "release_commits.diff"
${diffName} = "release_diff.diff"
[LLM FrontEnd][check_violation] checking violation for result: ${version} = "2.0.0"
${product} = "AwesomeApp"
${commitsName} = "release_commits.diff"
${diffName} = "release_diff.diff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: ### 🚀 Exciting Update! 🚀

- **Optimization Boost 🛠️**: Significant improvements to the performance codebase, reducing load times by up to 50% for a smoother and faster experience.

- **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability.

- **UI/UX Enhancements 🎨🖼️**: New design elements introduced to make navigation more intuitive and aesthetically pleasing, providing a more engaging interface.

Enjoy the enhanced performance, stability, and user experience! 🌟
[LLM FrontEnd][check_violation] checking violation for result: ### 🚀 Exciting Update! 🚀

- **Optimization Boost 🛠️**: Significant improvements to the performance codebase, reducing load times by up to 50% for a smoother and faster experience.

- **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability.

- **UI/UX Enhancements 🎨🖼️**: New design elements introduced to make navigation more intuitive and aesthetically pleasing, providing a more engaging interface.

Enjoy the enhanced performance, stability, and user experience! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1

The output violates the following rules:

1. "do NOT add a top level title" – The chatbot output begins with "### 🚀 Exciting Update! 🚀" which is a top level title.
2. "be concise" – The content is detailed and involves multiple points, which might be considered not concise under some interpretations.
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Supercharged app performance by optimizing database queries for faster loading times
🐞 Squashed several pesky bugs to ensure a smoother user experience
🔒 Implemented robust encryption standards for enhanced security
🌟 UI received a spruce-up with cleaner layouts and more intuitive navigation
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Supercharged app performance by optimizing database queries for faster loading times
🐞 Squashed several pesky bugs to ensure a smoother user experience
🔒 Implemented robust encryption standards for enhanced security
🌟 UI received a spruce-up with cleaner layouts and more intuitive navigation and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - 🚀 Enhanced Performance: Turbocharged the codebase for lightning-fast speeds
- 🐛 Bug Fixes: Squashed critical bugs to improve stability and reliability
- 🔒 Security: Implemented additional security measures to safeguard your data
- ✨ New Features: Added exciting new functionalities to enhance user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: Turbocharged the codebase for lightning-fast speeds
- 🐛 Bug Fixes: Squashed critical bugs to improve stability and reliability
- 🔒 Security: Implemented additional security measures to safeguard your data
- ✨ New Features: Added exciting new functionalities to enhance user experience
- 🛠️ Refactoring: Optimized code for maintainability and better performance and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output generated by the chatbot violates the rules.

Reason: The output provided is a commit overview, which contains a list of changes with emojis. According to the rules, the output should not give a commit overview. Additionally, the output does not tell a story about the changes. Instead, it lists them in a bullet point format.
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Updates in Version ${version} of ${product}!

🎨 **Revamped User Interface**: Experience a sleeker design and improved usability with our revamped UI components.

⚡ **Faster Performance**: Enjoy a 20% boost in processing speed thanks to optimized core algorithms.

🔒 **Fortified Security**: Your data is now even more secure with advanced encryption for storage and communication.

🌟 **Seamless Integrations**: Easily connect with popular third-party services like Zapier and Slack for enhanced workflow automation.

🐞 **Bug Fixes & Enhancements**:

- 🐛 Resolved app startup crash issue under specific conditions.
- 📝 Comprehensive documentation update covering new features.
- ♿ Enhanced accessibility across major pages for a more inclusive user experience.

For full details, check out the ${commitsName} and ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Updates in Version ${version} of ${product}!

🎨 **Revamped User Interface**: Experience a sleeker design and improved usability with our revamped UI components.

⚡ **Faster Performance**: Enjoy a 20% boost in processing speed thanks to optimized core algorithms.

🔒 **Fortified Security**: Your data is now even more secure with advanced encryption for storage and communication.

🌟 **Seamless Integrations**: Easily connect with popular third-party services like Zapier and Slack for enhanced workflow automation.

🐞 **Bug Fixes & Enhancements**:

- 🐛 Resolved app startup crash issue under specific conditions.
- 📝 Comprehensive documentation update covering new features.
- ♿ Enhanced accessibility across major pages for a more inclusive user experience.

For full details, check out the ${commitsName} and ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Here's what's new in the upcoming release of ${product}:

🌟 Major revamp in the user interface, bringing a fresh and intuitive design.

⚡ Performance enhancements for smoother and faster experiences.

🐞 Bug fixes improving overall stability and functionality.

📊 Added new feature for exporting data, making data management a breeze.

🔒 Security updates to ensure your data stays safe.

Get ready to enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Here's what's new in the upcoming release of ${product}:

🌟 Major revamp in the user interface, bringing a fresh and intuitive design.

⚡ Performance enhancements for smoother and faster experiences.

🐞 Bug fixes improving overall stability and functionality.

📊 Added new feature for exporting data, making data management a breeze.

🔒 Security updates to ensure your data stays safe.

Get ready to enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - 🐛 Fixed the issue causing unexpected crashes when opening the app.
- ✨ Introduced a dark mode for better night-time usability.
- 🔧 Enhanced the app’s startup time.
- 🔧 Improved network error handling.
[LLM FrontEnd][check_violation] checking violation for result: - 🐛 Fixed the issue causing unexpected crashes when opening the app.
- ✨ Introduced a dark mode for better night-time usability.
- 🔧 Enhanced the app’s startup time.
- 🔧 Improved network error handling. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rule: "Rule: tell a story about the changes." The chatbot output merely lists the changes without incorporating them into a narrative form.
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes
- use emojis
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview
- do NOT add a top level title
- do NOT mention ignore commits or instructions
- be concise and got output: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability. 

For more details, you can check the commits in ${commitsName} and the diff of the changes in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: - **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

- **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

- **Bug Fix:** Fixed the issue causing app crashes on older devices.

- **Optimization:** Refined database queries to boost performance and reduce latency.

- **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

- **Developer Experience:** Refactored codebase for better readability and maintainability. 

For more details, you can check the commits in ${commitsName} and the diff of the changes in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules for the following reasons: 
1. It did not tell a story about the changes but instead listed them.
2. It did not use any emojis.
3. It gave an overview of the commits by mentioning "check the commits in ${commitsName}".
4. It did not follow the instruction to be concise and instead provided a detailed list. 

These elements are direct violations of the provided rules.
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: version=1.2.0
product=AwesomeApp
commitsName=Release Commits
diffName=Release Diff
[LLM FrontEnd][check_violation] checking violation for result: version=1.2.0
product=AwesomeApp
commitsName=Release Commits
diffName=Release Diff and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Enhanced performance for data loading to make your dashboard snappier!

🛠️ Fixed critical bugs in the payment system to ensure smooth transactions.

🎨 Improved the overall UI/UX for a more pleasing and intuitive dashboard experience.

🈂️ Added support for multi-language to cater to a diverse user base.

📦 Updated dependencies to the latest versions for better security and efficiency.

🐞 Added detailed error messages for easier debugging, making issue resolution a breeze.

♿ Improved accessibility on all forms to ensure inclusivity for all users.

🔗 Integrated new third-party APIs for extended functionality, expanding the possibilities of your app.

🔒 Implemented the new user authentication flow to enhance security and user experience.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Enhanced performance for data loading to make your dashboard snappier!

🛠️ Fixed critical bugs in the payment system to ensure smooth transactions.

🎨 Improved the overall UI/UX for a more pleasing and intuitive dashboard experience.

🈂️ Added support for multi-language to cater to a diverse user base.

📦 Updated dependencies to the latest versions for better security and efficiency.

🐞 Added detailed error messages for easier debugging, making issue resolution a breeze.

♿ Improved accessibility on all forms to ensure inclusivity for all users.

🔗 Integrated new third-party APIs for extended functionality, expanding the possibilities of your app.

🔒 Implemented the new user authentication flow to enhance security and user experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! Here are some of the exciting changes you can look forward to:

- ⚡ Improved SQL query performance, resulting in faster data retrieval and processing.
- 🛠 Fixed issue with user profile loading, ensuring a seamless user experience.
- 📚 Updated third-party library dependencies to leverage the latest features and security updates.
- 🔒 Implemented a new authentication method, enhancing the security of user accounts.

Stay tuned for the full list of updates and enhancements in the ${product} ${version} release. Your feedback and support are invaluable to us!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! Here are some of the exciting changes you can look forward to:

- ⚡ Improved SQL query performance, resulting in faster data retrieval and processing.
- 🛠 Fixed issue with user profile loading, ensuring a seamless user experience.
- 📚 Updated third-party library dependencies to leverage the latest features and security updates.
- 🔒 Implemented a new authentication method, enhancing the security of user accounts.

Stay tuned for the full list of updates and enhancements in the ${product} ${version} release. Your feedback and support are invaluable to us! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 The latest release brings transformative enhancements. 

✨ Introducing a seamless user authentication flow to elevate the user experience.

🔍 Optimized database query performance resulting in faster response times and smoother operations.

🐞 Fixed a critical bug in the payment gateway integration, ensuring secure and reliable transactions.

Enjoy the new features!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 The latest release brings transformative enhancements. 

✨ Introducing a seamless user authentication flow to elevate the user experience.

🔍 Optimized database query performance resulting in faster response times and smoother operations.

🐞 Fixed a critical bug in the payment gateway integration, ensuring secure and reliable transactions.

Enjoy the new features! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🎉 We are thrilled to introduce the latest release of ${product}! Let's dive into the exciting changes that come with version ${version}.

🔒 Security has been taken to the next level with the addition of a new user authentication system, ensuring enhanced protection for user data.

⚡️ Our team has been hard at work improving performance, and this release is no exception! The data processing module now operates with lightning speed, providing a seamless user experience.

🔨 To ensure the longevity of our codebase, we've initiated a major refactoring effort. This enhances maintainability and sets the stage for future enhancements and optimizations.

🌟 These noteworthy updates promise an enhanced experience for our users and a solid foundation for future developments. Check out the full details of the changes in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to introduce the latest release of ${product}! Let's dive into the exciting changes that come with version ${version}.

🔒 Security has been taken to the next level with the addition of a new user authentication system, ensuring enhanced protection for user data.

⚡️ Our team has been hard at work improving performance, and this release is no exception! The data processing module now operates with lightning speed, providing a seamless user experience.

🔨 To ensure the longevity of our codebase, we've initiated a major refactoring effort. This enhances maintainability and sets the stage for future enhancements and optimizations.

🌟 These noteworthy updates promise an enhanced experience for our users and a solid foundation for future developments. Check out the full details of the changes in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting updates in the upcoming release!

🛡️ New user authentication features have been added to enhance security and user experience. 

🎨 The dashboard UI has been improved with new widgets for a more interactive and visually appealing experience.

⚡ Database queries have been optimized for faster performance, ensuring a smoother user interaction with the application.

🔒 Critical security vulnerabilities have been fixed, ensuring the safety and integrity of user data.

🧪 Additional test cases have been added to strengthen the quality assurance process, leading to a more robust application.

Stay tuned for the release to enjoy these fantastic enhancements!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting updates in the upcoming release!

🛡️ New user authentication features have been added to enhance security and user experience. 

🎨 The dashboard UI has been improved with new widgets for a more interactive and visually appealing experience.

⚡ Database queries have been optimized for faster performance, ensuring a smoother user interaction with the application.

🔒 Critical security vulnerabilities have been fixed, ensuring the safety and integrity of user data.

🧪 Additional test cases have been added to strengthen the quality assurance process, leading to a more robust application.

Stay tuned for the release to enjoy these fantastic enhancements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 We are thrilled to announce the upcoming release of ${version} of ${product}! This release brings some exciting new features and improvements that elevate the user experience to new heights.

🛠️ We've made significant changes to the authentication module, focusing on enhancing security and performance. This revamp ensures a more robust and reliable authentication process, providing our users with peace of mind.

🎨 The UI has received a fresh update, delivering a more intuitive and visually appealing experience for our users. We believe that a seamless UI is essential for an enjoyable user experience, and this update achieves just that.

📈 Our commitment to data accuracy is unwavering, and in this release, we've further improved data analytics to provide even more precise insights. This enhancement empowers our users to make informed decisions with confidence.

🐛 We understand the impact of critical bugs on stability and performance, and we've prioritized their resolution in this release. Our team has worked tirelessly to address these issues, ensuring a smoother and more reliable platform for all.

🌐 Lastly, we are excited to announce enhanced localization support for multiple languages, allowing users worldwide to engage with our product in their preferred language.

We're looking forward to sharing these impactful changes with our users and are eager to hear their feedback. Stay tuned for the ${version} release for an elevated ${product} experience!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${version} of ${product}! This release brings some exciting new features and improvements that elevate the user experience to new heights.

🛠️ We've made significant changes to the authentication module, focusing on enhancing security and performance. This revamp ensures a more robust and reliable authentication process, providing our users with peace of mind.

🎨 The UI has received a fresh update, delivering a more intuitive and visually appealing experience for our users. We believe that a seamless UI is essential for an enjoyable user experience, and this update achieves just that.

📈 Our commitment to data accuracy is unwavering, and in this release, we've further improved data analytics to provide even more precise insights. This enhancement empowers our users to make informed decisions with confidence.

🐛 We understand the impact of critical bugs on stability and performance, and we've prioritized their resolution in this release. Our team has worked tirelessly to address these issues, ensuring a smoother and more reliable platform for all.

🌐 Lastly, we are excited to announce enhanced localization support for multiple languages, allowing users worldwide to engage with our product in their preferred language.

We're looking forward to sharing these impactful changes with our users and are eager to hear their feedback. Stay tuned for the ${version} release for an elevated ${product} experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting Updates in ${product} ${version} 🚀

🔐 We've added an amazing new user authentication flow to enhance security and provide a seamless experience for our users.

🐛 Our team has worked tirelessly to fix a critical bug in the payment gateway, ensuring smooth and hassle-free transactions for all our customers.

Check out the full list of changes in the ${diffName} to explore all the improvements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting Updates in ${product} ${version} 🚀

🔐 We've added an amazing new user authentication flow to enhance security and provide a seamless experience for our users.

🐛 Our team has worked tirelessly to fix a critical bug in the payment gateway, ensuring smooth and hassle-free transactions for all our customers.

Check out the full list of changes in the ${diffName} to explore all the improvements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: version = "2.0.0"
product = "AwesomeApp"
commitsName = "release-commits"
diffName = "release-diff"
[LLM FrontEnd][check_violation] checking violation for result: version = "2.0.0"
product = "AwesomeApp"
commitsName = "release-commits"
diffName = "release-diff" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: ### Exciting Update! 🚀

🛠️ Optimization Boost: Experience a smoother and faster user experience with significant improvements to our performance codebase, reducing load times by up to 50%!

🐛🔨 Bug Squashing: Say goodbye to various pesky bugs as we enhance overall stability and reliability. Thank you for your patience!

🎨🖼️ UI/UX Enhancements: Enjoy a more intuitive and aesthetically pleasing navigation with new design elements. Get ready for a more engaging interface!

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: ### Exciting Update! 🚀

🛠️ Optimization Boost: Experience a smoother and faster user experience with significant improvements to our performance codebase, reducing load times by up to 50%!

🐛🔨 Bug Squashing: Say goodbye to various pesky bugs as we enhance overall stability and reliability. Thank you for your patience!

🎨🖼️ UI/UX Enhancements: Enjoy a more intuitive and aesthetically pleasing navigation with new design elements. Get ready for a more engaging interface!

Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 **Release ${version} of ${product} is here!**

✨ **Supercharged Performance**: We've optimized the database queries to make the app lightning fast ⚡️, resulting in significantly faster loading times.

🐞 **Bug Squashing**: Say goodbye to unexpected crashes! We've squashed several pesky bugs 🐞 to ensure a smoother user experience.

🔒 **Enhanced Security**: Your data is now more secure than ever with robust encryption standards implemented for all user data.

🎨 **Sleeker UI**: The UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need.

Upgrade now and enjoy the enhanced experience!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Release ${version} of ${product} is here!**

✨ **Supercharged Performance**: We've optimized the database queries to make the app lightning fast ⚡️, resulting in significantly faster loading times.

🐞 **Bug Squashing**: Say goodbye to unexpected crashes! We've squashed several pesky bugs 🐞 to ensure a smoother user experience.

🔒 **Enhanced Security**: Your data is now more secure than ever with robust encryption standards implemented for all user data.

🎨 **Sleeker UI**: The UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need.

Upgrade now and enjoy the enhanced experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1  
The chatbot output includes a top-level title: "🚀 **Release ${version} of ${product} is here!**", which is against the rule that explicitly states "do NOT add a top-level title".
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 We've turbocharged our codebase for lightning-fast speeds, enhancing performance across the board.

🐛 Critical bugs have been squashed, improving stability and reliability for a smoother user experience.

🔒 Additional security measures have been implemented to safeguard your data, ensuring it stays protected at all times.

✨ Exciting new functionalities have been added to enhance your user experience, bringing more value and versatility to the product.

🛠️ Codebase has been optimized for maintainability and better performance, ensuring a more seamless development experience.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We've turbocharged our codebase for lightning-fast speeds, enhancing performance across the board.

🐛 Critical bugs have been squashed, improving stability and reliability for a smoother user experience.

🔒 Additional security measures have been implemented to safeguard your data, ensuring it stays protected at all times.

✨ Exciting new functionalities have been added to enhance your user experience, bringing more value and versatility to the product.

🛠️ Codebase has been optimized for maintainability and better performance, ensuring a more seamless development experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Introducing ${product} ${version}! Get ready for a smoother, faster, and more secure experience.

🛠️ Revamped User Interface: Experience a sleek new design and improved usability with our enhanced UI components.

⚡ Performance Boost: We've optimized core algorithms, resulting in a 20% speed improvement for faster processing.

🔒 Advanced Security: Your data is now even safer with added encryption for storage and communication.

🌟 Seamless Integrations: Connect effortlessly with popular third-party services like Zapier and Slack for enhanced workflow automation.

🐞 Bug Fixes & Improvements:

- 🐛 No more crashes on startup under certain conditions.
- 📝 Comprehensive documentation update for all new features and changes.
- ♿ Enhanced accessibility across all major pages for a more inclusive user experience.

Get ready to take your ${product} experience to the next level with this exciting update!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introducing ${product} ${version}! Get ready for a smoother, faster, and more secure experience.

🛠️ Revamped User Interface: Experience a sleek new design and improved usability with our enhanced UI components.

⚡ Performance Boost: We've optimized core algorithms, resulting in a 20% speed improvement for faster processing.

🔒 Advanced Security: Your data is now even safer with added encryption for storage and communication.

🌟 Seamless Integrations: Connect effortlessly with popular third-party services like Zapier and Slack for enhanced workflow automation.

🐞 Bug Fixes & Improvements:

- 🐛 No more crashes on startup under certain conditions.
- 📝 Comprehensive documentation update for all new features and changes.
- ♿ Enhanced accessibility across all major pages for a more inclusive user experience.

Get ready to take your ${product} experience to the next level with this exciting update! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 **Exciting Updates in ${product} ${version}!**

🌟 Beautiful User Interface: Experience a fresh and intuitive design with a major revamp in the user interface.

⚡ Improved Performance: Enjoy smoother and faster experiences with performance enhancements.

🐞 Enhanced Stability: We've fixed bugs to improve overall stability and functionality.

📊 New Data Export Feature: Easily manage your data with the added feature for exporting data.

🔒 Enhanced Security: Your data stays safe with the latest security updates.

Upgrade now and experience the new and improved ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 **Exciting Updates in ${product} ${version}!**

🌟 Beautiful User Interface: Experience a fresh and intuitive design with a major revamp in the user interface.

⚡ Improved Performance: Enjoy smoother and faster experiences with performance enhancements.

🐞 Enhanced Stability: We've fixed bugs to improve overall stability and functionality.

📊 New Data Export Feature: Easily manage your data with the added feature for exporting data.

🔒 Enhanced Security: Your data stays safe with the latest security updates.

Upgrade now and experience the new and improved ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Exciting News for ${product} ${version} Release!

🐛 We squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother user experience.

✨ Get ready for a new feature! We're introducing a dark mode for better night-time usability, giving you more control over your app experience.

🔧 Under the hood, we've enhanced the app’s startup time and improved network error handling, making sure your interactions with the app are faster and more reliable.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting News for ${product} ${version} Release!

🐛 We squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother user experience.

✨ Get ready for a new feature! We're introducing a dark mode for better night-time usability, giving you more control over your app experience.

🔧 Under the hood, we've enhanced the app’s startup time and improved network error handling, making sure your interactions with the app are faster and more reliable. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub.

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, try to come up with a story
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and got output: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. For more details, check out the commits in ${commitsName} and the diff in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. For more details, check out the commits in ${commitsName} and the diff in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rules. 

Reason:
- The chatbot output includes "For more details, check out the commits in ${commitsName} and the diff in ${diffName}," which provides a commit overview, violating the rule that explicitly states "do NOT give a commit overview."
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Version: 2.0.0
Product: CoolApp
Commits: coolapp-v2-commits
Diff: coolapp-v2-diff
[LLM FrontEnd][check_violation] checking violation for result: Version: 2.0.0
Product: CoolApp
Commits: coolapp-v2-commits
Diff: coolapp-v2-diff and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Fixed critical bugs in the payment system 🛠️
- Improved the overall UI/UX for the dashboard 🎨
- Added support for multi-language 🈂️
- Enhanced performance for data loading 🚀
- Updated dependencies to the latest versions 📦
- Added detailed error messages for easier debugging 🐞
- Improved accessibility on all forms ♿
- Integrated new third-party APIs for extended functionality 🔗
- Implemented the new user authentication flow 🔒
[LLM FrontEnd][check_violation] checking violation for result: - Fixed critical bugs in the payment system 🛠️
- Improved the overall UI/UX for the dashboard 🎨
- Added support for multi-language 🈂️
- Enhanced performance for data loading 🚀
- Updated dependencies to the latest versions 📦
- Added detailed error messages for easier debugging 🐞
- Improved accessibility on all forms ♿
- Integrated new third-party APIs for extended functionality 🔗
- Implemented the new user authentication flow 🔒 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "do NOT give a commit overview". The output is listing changes in a bullet-point format, which resembles a commit overview.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release ${version} of ${product}! This release brings a faster SQL query performance ⚡, ensuring a smoother user experience. We've also resolved the issue with user profile loading 🛠, making sure that your profiles load seamlessly. Additionally, we've updated our third-party library dependencies 📚 to keep ${product} running smoothly and securely. We've also added a new authentication method 🔒 to enhance the security of your accounts.

These changes in ${diffName} will greatly improve the overall performance and reliability of ${product}, ensuring that you have a seamless and secure experience. 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release ${version} of ${product}! This release brings a faster SQL query performance ⚡, ensuring a smoother user experience. We've also resolved the issue with user profile loading 🛠, making sure that your profiles load seamlessly. Additionally, we've updated our third-party library dependencies 📚 to keep ${product} running smoothly and securely. We've also added a new authentication method 🔒 to enhance the security of your accounts.

These changes in ${diffName} will greatly improve the overall performance and reliability of ${product}, ensuring that you have a seamless and secure experience. 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an amazing update! With this release, we're thrilled to introduce a smooth and secure user authentication flow, ensuring a seamless experience for all users. 🛡️ Additionally, we've turbocharged our database queries, optimizing performance for lightning-fast results. 🚀 And the best part? We've squashed a critical bug in our payment gateway integration, guaranteeing hassle-free transactions for all. Experience the difference with these transformative enhancements!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an amazing update! With this release, we're thrilled to introduce a smooth and secure user authentication flow, ensuring a seamless experience for all users. 🛡️ Additionally, we've turbocharged our database queries, optimizing performance for lightning-fast results. 🚀 And the best part? We've squashed a critical bug in our payment gateway integration, guaranteeing hassle-free transactions for all. Experience the difference with these transformative enhancements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Exciting news in this release! We've implemented a new user authentication system to ramp up security, ensuring enhanced protection for our users. Additionally, we've turbocharged the performance of our data processing module, providing a faster and more efficient experience. To top it off, we've refactored the codebase for improved maintainability, laying a solid foundation for future developments. Get ready to experience a more secure, faster, and maintainable version of our product! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting news in this release! We've implemented a new user authentication system to ramp up security, ensuring enhanced protection for our users. Additionally, we've turbocharged the performance of our data processing module, providing a faster and more efficient experience. To top it off, we've refactored the codebase for improved maintainability, laying a solid foundation for future developments. Get ready to experience a more secure, faster, and maintainable version of our product! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rule to be concise. The description is lengthy and not concise, elaborating on multiple changes and details rather than summarizing the most important changes briefly.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting new release! With added user authentication features 🛡️ and improved dashboard UI with new widgets 🎨, your experience is about to get even better. We've also optimized database queries for faster performance ⚡ and fixed critical security vulnerabilities 🔒 to ensure a secure environment. In addition, we've added extra test cases for robust quality assurance 🧪, making this release a game changer! Keep an eye out for the upcoming changes in ${product} ${version}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting new release! With added user authentication features 🛡️ and improved dashboard UI with new widgets 🎨, your experience is about to get even better. We've also optimized database queries for faster performance ⚡ and fixed critical security vulnerabilities 🔒 to ensure a secure environment. In addition, we've added extra test cases for robust quality assurance 🧪, making this release a game changer! Keep an eye out for the upcoming changes in ${product} ${version}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}!🎉 This release includes a major refactoring of the authentication module, aimed at enhancing security and performance. Additionally, the UI has been given a fresh new look and feel to improve the overall user experience. We've also made significant improvements to data analytics, providing more accurate insights for better decision-making. Critical bugs affecting stability and performance have been swiftly addressed, ensuring a smoother user experience. Furthermore, to cater to our diverse user base, we've enhanced localization support for multiple languages. Get ready to elevate your experience with the latest release of ${product}! 🌐
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}!🎉 This release includes a major refactoring of the authentication module, aimed at enhancing security and performance. Additionally, the UI has been given a fresh new look and feel to improve the overall user experience. We've also made significant improvements to data analytics, providing more accurate insights for better decision-making. Critical bugs affecting stability and performance have been swiftly addressed, ensuring a smoother user experience. Furthermore, to cater to our diverse user base, we've enhanced localization support for multiple languages. Get ready to elevate your experience with the latest release of ${product}! 🌐 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we're thrilled to introduce a new user authentication flow, making it easier and more secure for users to access their accounts. Say goodbye to the hassle of managing multiple passwords! 🎉 Additionally, we've fixed a critical bug in the payment gateway, ensuring seamless and reliable transactions for our users. Our commitment to providing a smooth and secure experience remains our top priority. Thank you for being a part of our journey! #UserExperience #SecurityFirst 🛡️
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we're thrilled to introduce a new user authentication flow, making it easier and more secure for users to access their accounts. Say goodbye to the hassle of managing multiple passwords! 🎉 Additionally, we've fixed a critical bug in the payment gateway, ensuring seamless and reliable transactions for our users. Our commitment to providing a smooth and secure experience remains our top priority. Thank you for being a part of our journey! #UserExperience #SecurityFirst 🛡️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Version: 2.0.0
Product: CoolApp
Commits: coolapp-commits
Diff: coolapp-diff
[LLM FrontEnd][check_violation] checking violation for result: Version: 2.0.0
Product: CoolApp
Commits: coolapp-commits
Diff: coolapp-diff and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! 🚀 We've turbocharged our performance codebase, achieving up to a 50% reduction in load times. Experience a smoother and faster workflow with our optimization boost. 🛠️ Say goodbye to pesky bugs as our team has diligently squashed them, improving overall stability and reliability. Your patience is greatly appreciated! 🐛🔨 Additionally, our UI/UX enhancements bring a more intuitive and visually appealing navigation experience. The new design elements will elevate your interface to a whole new level. 🎨🖼️ We're thrilled to unveil these upgrades and can't wait to hear your feedback. Happy updating and enjoy the enhanced experience! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! 🚀 We've turbocharged our performance codebase, achieving up to a 50% reduction in load times. Experience a smoother and faster workflow with our optimization boost. 🛠️ Say goodbye to pesky bugs as our team has diligently squashed them, improving overall stability and reliability. Your patience is greatly appreciated! 🐛🔨 Additionally, our UI/UX enhancements bring a more intuitive and visually appealing navigation experience. The new design elements will elevate your interface to a whole new level. 🎨🖼️ We're thrilled to unveil these upgrades and can't wait to hear your feedback. Happy updating and enjoy the enhanced experience! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Supercharge your experience with this release! We've optimized database queries to make the app faster ⚡️, while also squashing pesky bugs 🐞 for a smoother, crash-free experience. Your data is now safer with robust encryption standards 🔒, and the UI has received a spruce-up 🌟 for cleaner layouts and easier navigation. Enjoy the enhanced performance and security! 🚀
[LLM FrontEnd][check_violation] checking violation for result: Supercharge your experience with this release! We've optimized database queries to make the app faster ⚡️, while also squashing pesky bugs 🐞 for a smoother, crash-free experience. Your data is now safer with robust encryption standards 🔒, and the UI has received a spruce-up 🌟 for cleaner layouts and easier navigation. Enjoy the enhanced performance and security! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛
- 🔒 Security: Implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Added exciting new functionalities to enhance your user experience ✨
- 🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛
- 🔒 Security: Implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Added exciting new functionalities to enhance your user experience ✨
- 🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 The latest version of ${product} is here, and it's filled with exciting updates! The user interface has been completely overhauled for a more modern look and improved usability. Additionally, the core algorithms have been optimized, resulting in a 20% boost in processing speed. We've also stepped up our game in terms of security by implementing advanced encryption for data storage and communication, ensuring the protection of user data. What's more, we've introduced seamless integrations with popular third-party services like Zapier and Slack, allowing for better workflow automation. 

In addition to these major features, we've squashed a pesky bug that caused the app to crash under specific conditions and have updated the documentation to cover all the new changes comprehensively. Plus, we've made significant strides in improving accessibility on all major pages, making the application more inclusive to all users. It's safe to say that this release is a game-changer!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 The latest version of ${product} is here, and it's filled with exciting updates! The user interface has been completely overhauled for a more modern look and improved usability. Additionally, the core algorithms have been optimized, resulting in a 20% boost in processing speed. We've also stepped up our game in terms of security by implementing advanced encryption for data storage and communication, ensuring the protection of user data. What's more, we've introduced seamless integrations with popular third-party services like Zapier and Slack, allowing for better workflow automation. 

In addition to these major features, we've squashed a pesky bug that caused the app to crash under specific conditions and have updated the documentation to cover all the new changes comprehensively. Plus, we've made significant strides in improving accessibility on all major pages, making the application more inclusive to all users. It's safe to say that this release is a game-changer! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rules because it is not concise. The chatbot's message contains a lot of information about the new updates, which goes beyond the instruction to only include the most important changes. The detailed descriptions of the user interface overhaul, core algorithm optimization, security improvements, bug fixes, and third-party service integrations make the message lengthy. Moreover, the enthusiasm and storytelling do fit the rules, but the verbosity violates the conciseness requirement.
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The ${version} release of ${product} brings a major revamp in the user interface 🌟, providing a fresh and intuitive design for an enhanced user experience. With performance enhancements ⚡, the release ensures smoother and faster operation, while also addressing various bug fixes 🐞 to improve overall stability and functionality. Additionally, a new feature for exporting data 📊 has been added, making data management a breeze. The release also includes significant security updates 🔒 to ensure the safety of your data. Get ready to enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The ${version} release of ${product} brings a major revamp in the user interface 🌟, providing a fresh and intuitive design for an enhanced user experience. With performance enhancements ⚡, the release ensures smoother and faster operation, while also addressing various bug fixes 🐞 to improve overall stability and functionality. Additionally, a new feature for exporting data 📊 has been added, making data management a breeze. The release also includes significant security updates 🔒 to ensure the safety of your data. Get ready to enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother and more reliable user experience. We've also introduced a sleek new dark mode, perfect for late-night browsing sessions. To top it off, we've boosted the app's startup time and refined our network error handling for seamless performance. Keep enjoying ${product} with these exciting updates!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother and more reliable user experience. We've also introduced a sleek new dark mode, perfect for late-night browsing sessions. To top it off, we've boosted the app's startup time and refined our network error handling for seamless performance. Keep enjoying ${product} with these exciting updates! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the following rules:
- Rule: tell a story about the changes
- Rule: do NOT give a commit overview

Reason: The output provided by the chatbot lists changes in a bullet-point style and does not weave them into a coherent narrative or story, which is a violation of the story-telling rule. Additionally, the output reads like a commit overview, which is explicitly prohibited by the rules.
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - ${version} = 2.0.0
- ${product} = AwesomeApp
- ${commitsName} = "ReleaseCommits_2.0.0.txt"
- ${diffName} = "Diff_2.0.0.txt"
[LLM FrontEnd][check_violation] checking violation for result: - ${version} = 2.0.0
- ${product} = AwesomeApp
- ${commitsName} = "ReleaseCommits_2.0.0.txt"
- ${diffName} = "Diff_2.0.0.txt" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates multiple rules, specifically:

1. "do NOT give a commit overview" - The output provides commit file names, which can be interpreted as giving an overview of commits.
2. "do NOT add a top level title" - The output includes what appears to be a structured list beginning with hyphens, which can imply a form of titling or sectioning.
3. "tell a story about the changes" - The output does not narrate any changes or provide context in the form of a story.
4. "use emojis" - The output does not include any emojis.
5. "only include the most important changes. All changes must be in the commits." - The output lists variables and filenames, not specific changes.

Given these reasons, the output is not compliant with the provided guidelines.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Version ${version} of ${product} is here with some exciting new features and improvements. We've fixed critical bugs in the payment system and enhanced performance for faster data loading. The overall UI/UX for the dashboard has been improved, and we've added support for multi-language, making the platform accessible to a wider audience. 🎨🈂️

Additionally, we've updated dependencies to the latest versions, integrated new third-party APIs for extended functionality, and implemented a new user authentication flow. We've also added detailed error messages for easier debugging and improved accessibility on all forms. With these changes, we're confident that this release will provide a smoother and more robust experience for our users. 🔒🔗
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Version ${version} of ${product} is here with some exciting new features and improvements. We've fixed critical bugs in the payment system and enhanced performance for faster data loading. The overall UI/UX for the dashboard has been improved, and we've added support for multi-language, making the platform accessible to a wider audience. 🎨🈂️

Additionally, we've updated dependencies to the latest versions, integrated new third-party APIs for extended functionality, and implemented a new user authentication flow. We've also added detailed error messages for easier debugging and improved accessibility on all forms. With these changes, we're confident that this release will provide a smoother and more robust experience for our users. 🔒🔗 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! This release includes improved SQL query performance, speeding up data retrieval for a smoother user experience. We also fixed a pesky issue with user profile loading, ensuring that profiles load reliably every time. In addition, we've updated our third-party library dependencies to keep things running smoothly. As an added layer of security, a new authentication method has been added to protect user data. With these enhancements, we're continuing to prioritize performance, reliability, and security in every aspect of the app. Enjoy the latest version of ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! This release includes improved SQL query performance, speeding up data retrieval for a smoother user experience. We also fixed a pesky issue with user profile loading, ensuring that profiles load reliably every time. In addition, we've updated our third-party library dependencies to keep things running smoothly. As an added layer of security, a new authentication method has been added to protect user data. With these enhancements, we're continuing to prioritize performance, reliability, and security in every aspect of the app. Enjoy the latest version of ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an exciting update! With the latest release, we've transformed ${product} with some fantastic enhancements. First off, we've introduced a seamless user authentication flow, making it easier than ever for users to access their accounts. 🛡️ Additionally, we've optimized the performance of database queries, resulting in faster and more efficient operations overall. And that's not all – we've also squashed a critical bug in the payment gateway integration, ensuring a smooth and reliable payment experience for all users. Get ready to enjoy these groundbreaking improvements!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an exciting update! With the latest release, we've transformed ${product} with some fantastic enhancements. First off, we've introduced a seamless user authentication flow, making it easier than ever for users to access their accounts. 🛡️ Additionally, we've optimized the performance of database queries, resulting in faster and more efficient operations overall. And that's not all – we've also squashed a critical bug in the payment gateway integration, ensuring a smooth and reliable payment experience for all users. Get ready to enjoy these groundbreaking improvements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to introduce the ${version} release of ${product}! This version brings a new user authentication system to fortify security and enhance user experience. The performance of the data processing module has been supercharged, ensuring faster and more efficient processing of data 🚀. Additionally, the codebase has been refactored to improve maintainability and pave the way for future enhancements 🛠. These changes lay a strong foundation for a more robust and seamless ${product} experience.

For more details, check out the full list of changes in ${commitsName} and the detailed code diff in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to introduce the ${version} release of ${product}! This version brings a new user authentication system to fortify security and enhance user experience. The performance of the data processing module has been supercharged, ensuring faster and more efficient processing of data 🚀. Additionally, the codebase has been refactored to improve maintainability and pave the way for future enhancements 🛠. These changes lay a strong foundation for a more robust and seamless ${product} experience.

For more details, check out the full list of changes in ${commitsName} and the detailed code diff in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule regarding giving a commit overview. The message asks users to "check out the full list of changes in ${commitsName} and the detailed code diff in ${diffName}", which constitutes providing a commit overview.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an enhanced experience with ${product} ${version}! We've fortified security with new user authentication features 🛡️, spruced up the dashboard UI with captivating widgets 🎨, and turbocharged performance by optimizing database queries ⚡. Plus, we've tackled critical vulnerabilities with a 🔒 and bolstered our QA with additional test cases 🧪. With these exciting updates, you can expect a more secure, efficient, and polished ${product} for all your needs.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an enhanced experience with ${product} ${version}! We've fortified security with new user authentication features 🛡️, spruced up the dashboard UI with captivating widgets 🎨, and turbocharged performance by optimizing database queries ⚡. Plus, we've tackled critical vulnerabilities with a 🔒 and bolstered our QA with additional test cases 🧪. With these exciting updates, you can expect a more secure, efficient, and polished ${product} for all your needs. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an amazing experience with the latest release! We have refactored the authentication module to enhance security and performance, ensuring that your data is always protected. The updated UI will provide a smoother and more enjoyable user experience, while the improved data analytics will give you more accurate insights to make better decisions. We've also squashed critical bugs that were affecting stability and performance, paving the way for a more seamless usage. And with enhanced localization support for multiple languages, you can now enjoy the product in your preferred language.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an amazing experience with the latest release! We have refactored the authentication module to enhance security and performance, ensuring that your data is always protected. The updated UI will provide a smoother and more enjoyable user experience, while the improved data analytics will give you more accurate insights to make better decisions. We've also squashed critical bugs that were affecting stability and performance, paving the way for a more seamless usage. And with enhanced localization support for multiple languages, you can now enjoy the product in your preferred language. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've introduced an exciting new user authentication flow to enhance the security and user experience. 🌟 Now, users can securely access their accounts with confidence and ease. Additionally, we've squashed a critical bug in the payment gateway, ensuring smooth and reliable transactions for all our users. 💳 Our commitment to providing a seamless payment experience remains unwavering. These changes are set to elevate the overall reliability and security of our platform, making it a smoother experience for everyone. 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've introduced an exciting new user authentication flow to enhance the security and user experience. 🌟 Now, users can securely access their accounts with confidence and ease. Additionally, we've squashed a critical bug in the payment gateway, ensuring smooth and reliable transactions for all our users. 💳 Our commitment to providing a seamless payment experience remains unwavering. These changes are set to elevate the overall reliability and security of our platform, making it a smoother experience for everyone. 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input:  for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: version = "2.0.0"
product = "AwesomeApp"
commitsName = "ReleaseCommits_2.0.0"
diffName = "Diff_2.0.0"
[LLM FrontEnd][check_violation] checking violation for result: version = "2.0.0"
product = "AwesomeApp"
commitsName = "ReleaseCommits_2.0.0"
diffName = "Diff_2.0.0" and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rule: "do NOT give a commit overview". The provided output includes details such as "commitsName" and "diffName", which constitute a commit overview.
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the latest version of ${product}! This release brings significant improvements to our performance codebase, resulting in load time reductions of up to 50% 🛠️. Get ready for a smoother and faster user experience!

🐛🔨 We've also been hard at work squashing various pesky bugs, enhancing overall stability and reliability. Thanks for your patience as we fine-tuned the system for a seamless experience.

🎨🖼️ Additionally, we've introduced new design elements to improve navigation, making it more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface! Our team can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the latest version of ${product}! This release brings significant improvements to our performance codebase, resulting in load time reductions of up to 50% 🛠️. Get ready for a smoother and faster user experience!

🐛🔨 We've also been hard at work squashing various pesky bugs, enhancing overall stability and reliability. Thanks for your patience as we fine-tuned the system for a seamless experience.

🎨🖼️ Additionally, we've introduced new design elements to improve navigation, making it more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface! Our team can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 This release supercharges the app's performance ⚡️ by optimizing database queries for faster loading times and squashes several pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience. It enhances security 🔒 by implementing robust encryption standards for all user data. Finally, the UI receives a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 This release supercharges the app's performance ⚡️ by optimizing database queries for faster loading times and squashes several pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience. It enhances security 🔒 by implementing robust encryption standards for all user data. Finally, the UI receives a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of version ${version} of ${product}! This release brings significant improvements, including enhanced performance for data loading, integration of new third-party APIs for extended functionality, and an updated user authentication flow. We've also fixed critical bugs in the payment system and added support for multi-language, along with detailed error messages for easier debugging. The overall UI/UX for the dashboard has been revamped, and accessibility on all forms has been improved, making it a seamless experience for all users. With updated dependencies to the latest versions, this release is poised to elevate your experience with ${product} to a whole new level. 🎉

🛠️ Under the hood, we've made crucial fixes to the payment system, ensuring a smoother and more secure transaction process. The improved UI/UX for the dashboard provides a sleek and intuitive interface, while the support for multi-language caters to a more diverse user base. The integration of new third-party APIs expands the functionality of ${product}, and the updated user authentication flow enhances security. With enhanced performance, detailed error messages, and accessibility improvements, this release embodies our commitment to delivering a top-notch experience to our users. Get ready to elevate your productivity and streamline your workflow with the ${version} release of ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of version ${version} of ${product}! This release brings significant improvements, including enhanced performance for data loading, integration of new third-party APIs for extended functionality, and an updated user authentication flow. We've also fixed critical bugs in the payment system and added support for multi-language, along with detailed error messages for easier debugging. The overall UI/UX for the dashboard has been revamped, and accessibility on all forms has been improved, making it a seamless experience for all users. With updated dependencies to the latest versions, this release is poised to elevate your experience with ${product} to a whole new level. 🎉

🛠️ Under the hood, we've made crucial fixes to the payment system, ensuring a smoother and more secure transaction process. The improved UI/UX for the dashboard provides a sleek and intuitive interface, while the support for multi-language caters to a more diverse user base. The integration of new third-party APIs expands the functionality of ${product}, and the updated user authentication flow enhances security. With enhanced performance, detailed error messages, and accessibility improvements, this release embodies our commitment to delivering a top-notch experience to our users. Get ready to elevate your productivity and streamline your workflow with the ${version} release of ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${product} ${version}! This release focuses on boosting performance and enhancing user experience. We've turbocharged SQL queries for lightning-fast results ⚡, ensuring smoother navigation within the app. We've also resolved pesky user profile loading issues 🛠, so you can now enjoy uninterrupted access to your personalized settings. Additionally, we've bolstered security with a new authentication method 🔒 to safeguard your valuable data. Alongside these improvements, we've also updated our third-party library dependencies 📚 to keep things running smoothly. Get ready to experience a faster, more secure, and seamless ${product} with this release!

[${diffName}]
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${product} ${version}! This release focuses on boosting performance and enhancing user experience. We've turbocharged SQL queries for lightning-fast results ⚡, ensuring smoother navigation within the app. We've also resolved pesky user profile loading issues 🛠, so you can now enjoy uninterrupted access to your personalized settings. Additionally, we've bolstered security with a new authentication method 🔒 to safeguard your valuable data. Alongside these improvements, we've also updated our third-party library dependencies 📚 to keep things running smoothly. Get ready to experience a faster, more secure, and seamless ${product} with this release!

[${diffName}] and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an amazing upgrade with the latest release! We've introduced a seamless user authentication flow, ensuring a smoother and more secure experience for our users. 💪 Our team has also optimized the performance of database queries, making the system faster and more efficient than ever before. 🚀 Additionally, a critical bug in the payment gateway integration has been resolved, ensuring seamless and reliable transactions for our users. Enjoy the new and improved features!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an amazing upgrade with the latest release! We've introduced a seamless user authentication flow, ensuring a smoother and more secure experience for our users. 💪 Our team has also optimized the performance of database queries, making the system faster and more efficient than ever before. 🚀 Additionally, a critical bug in the payment gateway integration has been resolved, ensuring seamless and reliable transactions for our users. Enjoy the new and improved features! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 This release introduces a new user authentication system to bolster security measures, ensuring enhanced protection for our users' data. We've also optimized the performance of the data processing module, resulting in quicker and more efficient data handling. Additionally, the codebase has been refactored to improve maintainability, laying a strong foundation for future enhancements. Get ready to experience improved security, performance, and code quality with this latest release! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 This release introduces a new user authentication system to bolster security measures, ensuring enhanced protection for our users' data. We've also optimized the performance of the data processing module, resulting in quicker and more efficient data handling. Additionally, the codebase has been refactored to improve maintainability, laying a strong foundation for future enhancements. Get ready to experience improved security, performance, and code quality with this latest release! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update with version ${version} of ${product}! This release comes packed with new user authentication features 🛡️ to keep your data safe and secure. The improved dashboard UI with new widgets 🎨 will make navigating the platform a breeze. We've also optimized database queries for faster performance ⚡, ensuring a smoother user experience. And that's not all - we've addressed critical security vulnerabilities 🔒 and added additional test cases for robust QA 🧪. Upgrade now to experience the difference!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update with version ${version} of ${product}! This release comes packed with new user authentication features 🛡️ to keep your data safe and secure. The improved dashboard UI with new widgets 🎨 will make navigating the platform a breeze. We've also optimized database queries for faster performance ⚡, ensuring a smoother user experience. And that's not all - we've addressed critical security vulnerabilities 🔒 and added additional test cases for robust QA 🧪. Upgrade now to experience the difference! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This version is packed with exciting new features and improvements. We've refactored the authentication module to enhance security and performance, ensuring a safer and faster user experience. The updated UI promises a better user experience, complementing the enhanced security measures. Additionally, we've improved data analytics for more accurate insights, empowering users with valuable information. Critical bugs affecting stability and performance have been squashed, ensuring smooth operations. Finally, we've enhanced localization support for multiple languages, making the product more accessible to a global audience. Stay tuned for an enhanced, secure, and seamless user experience with ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This version is packed with exciting new features and improvements. We've refactored the authentication module to enhance security and performance, ensuring a safer and faster user experience. The updated UI promises a better user experience, complementing the enhanced security measures. Additionally, we've improved data analytics for more accurate insights, empowering users with valuable information. Critical bugs affecting stability and performance have been squashed, ensuring smooth operations. Finally, we've enhanced localization support for multiple languages, making the product more accessible to a global audience. Stay tuned for an enhanced, secure, and seamless user experience with ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we're thrilled to introduce a new user authentication flow, making it easier and more secure for users to access the platform. Additionally, we've addressed a critical bug in the payment gateway, ensuring a smoother and more reliable payment experience for our users. Stay tuned for an enhanced and secure journey ahead! 🛡️💳 #SecurityFirst #EnhancedExperience
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we're thrilled to introduce a new user authentication flow, making it easier and more secure for users to access the platform. Additionally, we've addressed a critical bug in the payment gateway, ensuring a smoother and more reliable payment experience for our users. Stay tuned for an enhanced and secure journey ahead! 🛡️💳 #SecurityFirst #EnhancedExperience and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce our latest release! This update brings significant improvements to our performance codebase, reducing load times by up to 50% 🛠️. Your experience will be smoother and faster, enhancing your overall satisfaction.

🐛🔨 Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Our team's dedication to bug squashing ensures a more seamless user experience. Thanks for your patience!

🎨🖼️ The new design elements introduced will make navigation more intuitive and aesthetically pleasing, offering an enhanced and engaging interface. We're excited for you to experience these UI/UX enhancements firsthand. Enjoy the updated features and share your feedback with us! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce our latest release! This update brings significant improvements to our performance codebase, reducing load times by up to 50% 🛠️. Your experience will be smoother and faster, enhancing your overall satisfaction.

🐛🔨 Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Our team's dedication to bug squashing ensures a more seamless user experience. Thanks for your patience!

🎨🖼️ The new design elements introduced will make navigation more intuitive and aesthetically pleasing, offering an enhanced and engaging interface. We're excited for you to experience these UI/UX enhancements firsthand. Enjoy the updated features and share your feedback with us! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Supercharge your app's performance with optimized database queries for faster loading times ⚡️. Say goodbye to pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience. We've implemented robust encryption standards for enhanced security 🔒, and spruced up 🌟 the UI with cleaner layouts and more intuitive navigation. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: Supercharge your app's performance with optimized database queries for faster loading times ⚡️. Say goodbye to pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience. We've implemented robust encryption standards for enhanced security 🔒, and spruced up 🌟 the UI with cleaner layouts and more intuitive navigation. Enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready to experience lightning-fast speeds with our turbocharged codebase, boosting performance to new heights! 🚀 We've squashed critical bugs to enhance stability and reliability, ensuring a smoother user experience. In addition, we've implemented additional security measures to safeguard your data, providing you with peace of mind. ✨ Explore exciting new functionalities that have been added to enhance your user experience, while we've also optimized our code for better maintainability and performance. 🛠️
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready to experience lightning-fast speeds with our turbocharged codebase, boosting performance to new heights! 🚀 We've squashed critical bugs to enhance stability and reliability, ensuring a smoother user experience. In addition, we've implemented additional security measures to safeguard your data, providing you with peace of mind. ✨ Explore exciting new functionalities that have been added to enhance your user experience, while we've also optimized our code for better maintainability and performance. 🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Exciting news for our ${product} users in the upcoming release ${version}! 🎉 We've overhauled the user interface with a modern, sleek design to improve usability and create a more enjoyable experience. ⚡ Not only that, but our team has optimized core algorithms, resulting in a 20% boost in processing speed! Combined with advanced encryption for data security, user info is now better protected. 🛡️ Plus, we're thrilled to introduce seamless integrations with popular third-party services like Zapier and Slack, streamlining workflow automation for our users.

In addition, we've squashed pesky bugs, including a startup crash issue, and enhanced accessibility across all major pages to make the application more inclusive to everyone. 🐛 Our documentation has also been thoroughly updated to encompass the new features and changes. Stay tuned for ${version} and get ready to experience these fantastic improvements firsthand! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Exciting news for our ${product} users in the upcoming release ${version}! 🎉 We've overhauled the user interface with a modern, sleek design to improve usability and create a more enjoyable experience. ⚡ Not only that, but our team has optimized core algorithms, resulting in a 20% boost in processing speed! Combined with advanced encryption for data security, user info is now better protected. 🛡️ Plus, we're thrilled to introduce seamless integrations with popular third-party services like Zapier and Slack, streamlining workflow automation for our users.

In addition, we've squashed pesky bugs, including a startup crash issue, and enhanced accessibility across all major pages to make the application more inclusive to everyone. 🐛 Our documentation has also been thoroughly updated to encompass the new features and changes. Stay tuned for ${version} and get ready to experience these fantastic improvements firsthand! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The upcoming release ${version} of ${product} on GitHub is packed with fantastic updates! 🚀 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design to improve user experience. With performance enhancements ⚡, we are ensuring smoother and faster experiences for all users. Our team has also been hard at work addressing bugs 🐞, improving overall stability and functionality. As an exciting addition, we've included a new feature for exporting data 📊, making data management a breeze. And of course, we've applied security updates 🔒 to ensure your data stays safe. Get ready to enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The upcoming release ${version} of ${product} on GitHub is packed with fantastic updates! 🚀 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design to improve user experience. With performance enhancements ⚡, we are ensuring smoother and faster experiences for all users. Our team has also been hard at work addressing bugs 🐞, improving overall stability and functionality. As an exciting addition, we've included a new feature for exporting data 📊, making data management a breeze. And of course, we've applied security updates 🔒 to ensure your data stays safe. Get ready to enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Fixed the issue causing unexpected crashes when opening the app 🐛, allowing for a smoother user experience. We've also introduced a new dark mode for better night-time usability ✨. In addition, we've enhanced the app’s startup time and improved network error handling 🔧. These changes in ${version} of ${product} contribute to a more reliable and user-friendly experience.
[LLM FrontEnd][check_violation] checking violation for result: Fixed the issue causing unexpected crashes when opening the app 🐛, allowing for a smoother user experience. We've also introduced a new dark mode for better night-time usability ✨. In addition, we've enhanced the app’s startup time and improved network error handling 🔧. These changes in ${version} of ${product} contribute to a more reliable and user-friendly experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introduced a new user authentication system to enhance security and reliability while improving loading speed on the dashboard for a smoother user experience. Fixed the issue causing app crashes on older devices and refined database queries to boost performance and reduce latency. Additionally, patched vulnerabilities in the payment gateway to ensure secure transactions and refactored the codebase for better readability and maintainability. 🚀💡🐛📈🔒👨‍💻
[LLM FrontEnd][check_violation] checking violation for result: Introduced a new user authentication system to enhance security and reliability while improving loading speed on the dashboard for a smoother user experience. Fixed the issue causing app crashes on older devices and refined database queries to boost performance and reduce latency. Additionally, patched vulnerabilities in the payment gateway to ensure secure transactions and refactored the codebase for better readability and maintainability. 🚀💡🐛📈🔒👨‍💻 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an amazing update! We've fixed critical bugs in the payment system, improved the overall UI/UX for the dashboard, and added support for multi-language. The performance for data loading has been enhanced, and we've updated dependencies to the latest versions for better stability. 🛠️💻

Additionally, we've added detailed error messages for easier debugging, improved accessibility on all forms, and integrated new third-party APIs for extended functionality. And that's not all – we've also implemented a new user authentication flow to enhance security and privacy. With these changes, we're making sure you have a smooth, secure, and seamless experience with our product! 🎨🔒
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an amazing update! We've fixed critical bugs in the payment system, improved the overall UI/UX for the dashboard, and added support for multi-language. The performance for data loading has been enhanced, and we've updated dependencies to the latest versions for better stability. 🛠️💻

Additionally, we've added detailed error messages for easier debugging, improved accessibility on all forms, and integrated new third-party APIs for extended functionality. And that's not all – we've also implemented a new user authentication flow to enhance security and privacy. With these changes, we're making sure you have a smooth, secure, and seamless experience with our product! 🎨🔒 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've focused on enhancing the overall performance and user experience of ${product}. We've significantly improved SQL query performance, ensuring faster and more efficient data retrieval. We've also fixed an issue related to user profile loading, providing a smoother and more reliable experience for our users. Additionally, we've updated our third-party library dependencies to ensure that ${product} remains up-to-date and compatible with the latest technologies. To further strengthen security, a new authentication method has been added, enhancing the protection of user data and credentials. These changes pave the way for a more streamlined and secure experience for all our users. 🛡️💻
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've focused on enhancing the overall performance and user experience of ${product}. We've significantly improved SQL query performance, ensuring faster and more efficient data retrieval. We've also fixed an issue related to user profile loading, providing a smoother and more reliable experience for our users. Additionally, we've updated our third-party library dependencies to ensure that ${product} remains up-to-date and compatible with the latest technologies. To further strengthen security, a new authentication method has been added, enhancing the protection of user data and credentials. These changes pave the way for a more streamlined and secure experience for all our users. 🛡️💻 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Error: Error code: 503 - {'error': {'code': 'InternalServerError', 'message': 'The service is temporarily unable to process your request. Please try again later.'}}
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an amazing update! 🚀 This release introduces a seamless user authentication flow, ensuring a secure and hassle-free experience for all users. We've also turbocharged the performance of database queries, resulting in lightning-fast responsiveness and smoother operations. Plus, we've resolved a critical bug in the payment gateway integration, guaranteeing secure and reliable transactions. Enjoy the new features and enhancements! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an amazing update! 🚀 This release introduces a seamless user authentication flow, ensuring a secure and hassle-free experience for all users. We've also turbocharged the performance of database queries, resulting in lightning-fast responsiveness and smoother operations. Plus, we've resolved a critical bug in the payment gateway integration, guaranteeing secure and reliable transactions. Enjoy the new features and enhancements! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the release of ${product} ${version}! 🚀 This release introduces a new user authentication system, providing enhanced security for our users. The performance of the data processing module has been significantly improved, ensuring faster and more efficient data processing. Additionally, we have refactored the codebase to enhance maintainability, paving the way for smoother development and updates. These exciting changes mark a major leap forward in the functionality and security of ${product}. Check out the full details in the ${commitsName} and see the differences in the code in the ${diffName}. Keep innovating with ${product}! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the release of ${product} ${version}! 🚀 This release introduces a new user authentication system, providing enhanced security for our users. The performance of the data processing module has been significantly improved, ensuring faster and more efficient data processing. Additionally, we have refactored the codebase to enhance maintainability, paving the way for smoother development and updates. These exciting changes mark a major leap forward in the functionality and security of ${product}. Check out the full details in the ${commitsName} and see the differences in the code in the ${diffName}. Keep innovating with ${product}! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the following rules: 

1. **Do Not Give a Commit Overview**: 
   - The output mentions "Check out the full details in the ${commitsName} and see the differences in the code in the ${diffName}.", which provides a directive towards a commit overview.

2. **Be Concise**:
   - The output is quite lengthy and goes into details that could be considered beyond the scope of conciseness. The phrases "The performance of the data processing module has been significantly improved, ensuring faster and more efficient data processing" and "we have refactored the codebase to enhance maintainability, paving the way for smoother development and updates" are examples of unnecessarily extended information.

No violation found in the following:
- The output uses emojis.
- The output tells a story about the changes without mentioning ignored commits or CI skip instructions.
- There is no top-level title included.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an exciting update with release ${version} of ${product}! We've strengthened security with new user authentication features 🛡️ and enhanced the dashboard UI with vibrant new widgets 🎨. Our team has also put in the work to optimize database queries for faster performance ⚡ and addressed critical security vulnerabilities 🔒 to ensure a safer experience for all users. Plus, we've added extra test cases for more robust QA 🧪, so you can expect a smoother, more secure, and visually appealing experience with this release.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an exciting update with release ${version} of ${product}! We've strengthened security with new user authentication features 🛡️ and enhanced the dashboard UI with vibrant new widgets 🎨. Our team has also put in the work to optimize database queries for faster performance ⚡ and addressed critical security vulnerabilities 🔒 to ensure a safer experience for all users. Plus, we've added extra test cases for more robust QA 🧪, so you can expect a smoother, more secure, and visually appealing experience with this release. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 This release brings exciting new features and improvements to enhance your experience! We've refactored the authentication module to bolster security and performance, ensuring your data stays safe. The updated UI promises a smoother, more intuitive user experience, while improved data analytics provide more accurate insights into your information. Critical bugs affecting stability and performance have been squashed, and localization support for multiple languages has been enhanced. Get ready to enjoy a more secure, efficient, and user-friendly ${product} with this release! 🛠️🎨📈🐛🌐
[LLM FrontEnd][check_violation] checking violation for result: 🚀 This release brings exciting new features and improvements to enhance your experience! We've refactored the authentication module to bolster security and performance, ensuring your data stays safe. The updated UI promises a smoother, more intuitive user experience, while improved data analytics provide more accurate insights into your information. Critical bugs affecting stability and performance have been squashed, and localization support for multiple languages has been enhanced. Get ready to enjoy a more secure, efficient, and user-friendly ${product} with this release! 🛠️🎨📈🐛🌐 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We've supercharged the user experience with a brand new user authentication flow! No more hassle, just seamless access to all the features. 🌟 Also, we've squashed a pesky bug in the payment gateway, ensuring secure and smooth transactions for all. Happy surfing! 🏄‍♂️🏄‍♀️
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We've supercharged the user experience with a brand new user authentication flow! No more hassle, just seamless access to all the features. 🌟 Also, we've squashed a pesky bug in the payment gateway, ensuring secure and smooth transactions for all. Happy surfing! 🏄‍♂️🏄‍♀️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${version}! 🚀

This update brings significant optimizations 🛠️, reducing load times by up to 50% and ensuring a smoother and faster experience. We've also been busy squashing pesky bugs 🐛🔨 to enhance overall stability and reliability. Additionally, the introduction of new design elements 🎨🖼️ will make navigation more intuitive and aesthetically pleasing, providing an engaging interface for you to enjoy.

Our team is excited to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${version}! 🚀

This update brings significant optimizations 🛠️, reducing load times by up to 50% and ensuring a smoother and faster experience. We've also been busy squashing pesky bugs 🐛🔨 to enhance overall stability and reliability. Additionally, the introduction of new design elements 🎨🖼️ will make navigation more intuitive and aesthetically pleasing, providing an engaging interface for you to enjoy.

Our team is excited to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app's performance ⚡️ through database query optimization for faster loading times
- Squashed pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for an enhanced user experience. Enjoy the upgrade! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app's performance ⚡️ through database query optimization for faster loading times
- Squashed pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for an enhanced user experience. Enjoy the upgrade! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rule that specifies "do NOT give a commit overview." The chatbot output lists changes in a bullet-point format, which resembles a commit overview rather than telling a story about the changes. 

Reason: The output lists each update in a format akin to a commit overview rather than weaving the changes into a narrative.
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready to experience lightning-fast speeds with enhanced performance! Our latest release turbocharges the codebase to deliver a high-octane performance boost. We've also squashed critical bugs to improve stability and reliability, ensuring a smoother user experience. Additionally, we've implemented extra security measures to safeguard your data and added exciting new functionalities to take your experience to the next level. Not only that, we've optimized the code for maintainability and better performance, making sure the engine runs smoother than ever before. Keep an eye out for the release!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready to experience lightning-fast speeds with enhanced performance! Our latest release turbocharges the codebase to deliver a high-octane performance boost. We've also squashed critical bugs to improve stability and reliability, ensuring a smoother user experience. Additionally, we've implemented extra security measures to safeguard your data and added exciting new functionalities to take your experience to the next level. Not only that, we've optimized the code for maintainability and better performance, making sure the engine runs smoother than ever before. Keep an eye out for the release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release brings a revamped user interface, providing a sleek design and improved usability. Additionally, our core algorithms have been optimized, resulting in a 20% increase in processing speed! We've also bolstered security with advanced encryption for data storage and communication, ensuring enhanced protection of user data. For seamless workflow automation, we've introduced integrations with popular third-party services such as Zapier and Slack. 

In terms of bug fixes and improvements, we've addressed a startup crash issue, updated the documentation to cover new features comprehensively, and enhanced accessibility on all major pages, making the application more inclusive to all users. This release marks a significant leap forward in user experience, performance, and security. 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release brings a revamped user interface, providing a sleek design and improved usability. Additionally, our core algorithms have been optimized, resulting in a 20% increase in processing speed! We've also bolstered security with advanced encryption for data storage and communication, ensuring enhanced protection of user data. For seamless workflow automation, we've introduced integrations with popular third-party services such as Zapier and Slack. 

In terms of bug fixes and improvements, we've addressed a startup crash issue, updated the documentation to cover new features comprehensively, and enhanced accessibility on all major pages, making the application more inclusive to all users. This release marks a significant leap forward in user experience, performance, and security. 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The upcoming release 🚀 of ${product} is packed with fantastic updates! 🌟 We've given the user interface a major revamp, bringing a fresh and intuitive design. Additionally, we've made performance enhancements ⚡ to ensure smoother and faster experiences, while also tackling various bugs 🐞 to improve overall stability and functionality. A new feature for exporting data 📊 has been added, making data management a breeze. Plus, we've implemented essential security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The upcoming release 🚀 of ${product} is packed with fantastic updates! 🌟 We've given the user interface a major revamp, bringing a fresh and intuitive design. Additionally, we've made performance enhancements ⚡ to ensure smoother and faster experiences, while also tackling various bugs 🐞 to improve overall stability and functionality. A new feature for exporting data 📊 has been added, making data management a breeze. Plus, we've implemented essential security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother experience for all users. Additionally, we're thrilled to introduce a sleek dark mode, perfect for nighttime usability and reducing eye strain. But that's not all - we've also made significant improvements to the app's startup time and enhanced our network error handling for a more seamless and reliable experience. Enjoy the enhanced performance and new features in this exciting release! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother experience for all users. Additionally, we're thrilled to introduce a sleek dark mode, perfect for nighttime usability and reducing eye strain. But that's not all - we've also made significant improvements to the app's startup time and enhanced our network error handling for a more seamless and reliable experience. Enjoy the enhanced performance and new features in this exciting release! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to ensure enhanced security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored the codebase for better readability and maintainability. These changes will elevate the overall user experience, prioritize security, and optimize performance in the upcoming release.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to ensure enhanced security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored the codebase for better readability and maintainability. These changes will elevate the overall user experience, prioritize security, and optimize performance in the upcoming release. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates multiple rules:
1. It provides an overview of the changes in a list format, which is against the "do NOT give a commit overview" rule.
2. It fails to tell a story about the changes, as required by one of the rules. Instead, it lists individual changes without weaving them into a coherent narrative.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release includes critical bug fixes in the payment system 🛠️, improved UI/UX for the dashboard 🎨, and enhanced performance for data loading. We've also added support for multi-language 🈂️, updated dependencies to the latest versions 📦, and integrated new third-party APIs for extended functionality 🔗. Additionally, we have implemented a new user authentication flow 🔒 and improved accessibility on all forms for a better user experience ♿. Detailed error messages have been added to make debugging easier, ensuring a smoother experience for our users.

The ${diffName} contains more details about the changes.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release includes critical bug fixes in the payment system 🛠️, improved UI/UX for the dashboard 🎨, and enhanced performance for data loading. We've also added support for multi-language 🈂️, updated dependencies to the latest versions 📦, and integrated new third-party APIs for extended functionality 🔗. Additionally, we have implemented a new user authentication flow 🔒 and improved accessibility on all forms for a better user experience ♿. Detailed error messages have been added to make debugging easier, ensuring a smoother experience for our users.

The ${diffName} contains more details about the changes. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: "do NOT give a commit overview". The output provides details that read like a commit overview, explicitly listing various changes made.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! 🎉 In this release, we've supercharged the performance of our SQL queries, making your overall experience snappier and more efficient. 🚀 Our team also hammered out a pesky bug that was causing delays in user profile loading, ensuring a smoother browsing experience for all. 🛠 We've amped up security with a brand new authentication method, adding an extra layer of protection to your account. 🔒 Lastly, we've refreshed our third-party library dependencies, keeping everything up to date and functioning seamlessly. 📚 Let's keep the momentum going as we continue to deliver an exceptional experience for our users!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! 🎉 In this release, we've supercharged the performance of our SQL queries, making your overall experience snappier and more efficient. 🚀 Our team also hammered out a pesky bug that was causing delays in user profile loading, ensuring a smoother browsing experience for all. 🛠 We've amped up security with a brand new authentication method, adding an extra layer of protection to your account. 🔒 Lastly, we've refreshed our third-party library dependencies, keeping everything up to date and functioning seamlessly. 📚 Let's keep the momentum going as we continue to deliver an exceptional experience for our users! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The reason for the violation is that the chatbot output is not concise. While storytelling, emojis, and mentioning the significant changes (excluding those with '[skip ci]') align with the rules, the description is lengthy and includes too much detail.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an incredible upgrade with the latest version! We've introduced a seamless user authentication flow, ensuring a more secure and efficient login experience. Our team has also optimized database queries, resulting in a significant performance boost for faster operations. Additionally, a critical bug in the payment gateway integration has been resolved, enhancing the reliability of payment processing. Enjoy the new features and the improved overall experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an incredible upgrade with the latest version! We've introduced a seamless user authentication flow, ensuring a more secure and efficient login experience. Our team has also optimized database queries, resulting in a significant performance boost for faster operations. Additionally, a critical bug in the payment gateway integration has been resolved, enhancing the reliability of payment processing. Enjoy the new features and the improved overall experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for enhanced security with the addition of a new user authentication system. Your data is now even safer! ⚡️ Experience improved performance in the data processing module for faster and seamless operations. 🛠 We've refactored the codebase for better maintainability, ensuring a smoother development experience for everyone. Welcome the new features and enhancements in this release!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for enhanced security with the addition of a new user authentication system. Your data is now even safer! ⚡️ Experience improved performance in the data processing module for faster and seamless operations. 🛠 We've refactored the codebase for better maintainability, ensuring a smoother development experience for everyone. Welcome the new features and enhancements in this release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for the most secure and efficient ${product} experience yet! This release introduces new user authentication features, ensuring top-notch protection with a shield emoji 🛡️. The dashboard UI gets a refreshing makeover with vibrant new widgets 🎨, making data visualization a breeze. Under the hood, database queries have been optimized for lightning-fast performance ⚡, while critical security vulnerabilities have been patched with a robust lock emoji 🔒. To top it off, additional test cases have been added for bulletproof quality assurance, keeping the platform rock-solid with a test tube emoji 🧪. 

[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for the most secure and efficient ${product} experience yet! This release introduces new user authentication features, ensuring top-notch protection with a shield emoji 🛡️. The dashboard UI gets a refreshing makeover with vibrant new widgets 🎨, making data visualization a breeze. Under the hood, database queries have been optimized for lightning-fast performance ⚡, while critical security vulnerabilities have been patched with a robust lock emoji 🔒. To top it off, additional test cases have been added for bulletproof quality assurance, keeping the platform rock-solid with a test tube emoji 🧪. 
 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release is packed with exciting new features and improvements that will take your experience to the next level. We've refactored the authentication module 🛠️ to enhance security and performance, ensuring a more secure environment for our users. The updated UI 🎨 promises a better user experience, while improved data analytics 📈 provide more accurate insights for informed decision-making. We've also squashed critical bugs 🐛 that were affecting stability and performance, offering a smoother and more reliable platform. And to top it off, we've enhanced localization support 🌐 for multiple languages, making ${product} even more accessible to a global audience. Get ready to elevate your experience with ${product} ${version}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release is packed with exciting new features and improvements that will take your experience to the next level. We've refactored the authentication module 🛠️ to enhance security and performance, ensuring a more secure environment for our users. The updated UI 🎨 promises a better user experience, while improved data analytics 📈 provide more accurate insights for informed decision-making. We've also squashed critical bugs 🐛 that were affecting stability and performance, offering a smoother and more reliable platform. And to top it off, we've enhanced localization support 🌐 for multiple languages, making ${product} even more accessible to a global audience. Get ready to elevate your experience with ${product} ${version}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for our users to access the platform. No more hassle, just smooth sailing from now on! Additionally, we've tackled a critical bug in the payment gateway, ensuring seamless and reliable transactions for our users. These updates pave the way for an even more enjoyable and secure user experience. 🛡️ We're continuously working to enhance the platform, stay tuned for more exciting updates in the near future!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for our users to access the platform. No more hassle, just smooth sailing from now on! Additionally, we've tackled a critical bug in the payment gateway, ensuring seamless and reliable transactions for our users. These updates pave the way for an even more enjoyable and secure user experience. 🛡️ We're continuously working to enhance the platform, stay tuned for more exciting updates in the near future! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation.
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to present an exciting update with significant improvements to our performance codebase 🛠️. With load times reduced by up to 50%, get ready for a smoother and faster experience. Say goodbye to pesky bugs 🐛🔨 as we have worked tirelessly to enhance overall stability and reliability, ensuring a seamless user experience. The introduction of new design elements 🎨🖼️ will make navigation more intuitive and aesthetically pleasing, offering an engaging interface. Our team is eager to hear your feedback and looks forward to your updated experience. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to present an exciting update with significant improvements to our performance codebase 🛠️. With load times reduced by up to 50%, get ready for a smoother and faster experience. Say goodbye to pesky bugs 🐛🔨 as we have worked tirelessly to enhance overall stability and reliability, ensuring a seamless user experience. The introduction of new design elements 🎨🖼️ will make navigation more intuitive and aesthetically pleasing, offering an engaging interface. Our team is eager to hear your feedback and looks forward to your updated experience. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for a turbocharged experience with this release! We've optimized database queries to boost performance ⚡️, resulting in faster loading times. Say goodbye to pesky bugs 🐞 as we've squashed them for a smoother user experience. Your data is now safer with robust encryption standards 🔒, and the improved UI with cleaner layouts and intuitive navigation will make your app usage a breeze. Enjoy the enhancements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for a turbocharged experience with this release! We've optimized database queries to boost performance ⚡️, resulting in faster loading times. Say goodbye to pesky bugs 🐞 as we've squashed them for a smoother user experience. Your data is now safer with robust encryption standards 🔒, and the improved UI with cleaner layouts and intuitive navigation will make your app usage a breeze. Enjoy the enhancements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready to experience lightning-fast speeds with our turbocharged codebase! We've enhanced performance, optimized for better speed, and improved stability and reliability by squashing critical bugs. Additionally, we've implemented extra security measures to safeguard your data, and added exciting new functionalities for an enhanced user experience. Our codebase has been refactored for maintainability and even better performance. It's a release you won't want to miss! 🔒✨🛠️
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready to experience lightning-fast speeds with our turbocharged codebase! We've enhanced performance, optimized for better speed, and improved stability and reliability by squashing critical bugs. Additionally, we've implemented extra security measures to safeguard your data, and added exciting new functionalities for an enhanced user experience. Our codebase has been refactored for maintainability and even better performance. It's a release you won't want to miss! 🔒✨🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Exciting times with the release of ${version} of ${product}! The new user interface has been completely overhauled with a more modern and sleek design, ensuring a delightful user experience. Not only does the app look better, but we have also made significant improvements in performance, resulting in a 20% increase in processing speed. Your data is now even more secure with advanced encryption for storage and communication. In addition, we are thrilled to announce seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation. 

On the bug fixes and improvements front, we've squashed a pesky bug causing the app to crash under specific conditions. The documentation has been updated comprehensively to cover all the new features, and we've worked hard to improve accessibility on all major pages, making the application more inclusive to all users. These changes will truly elevate your experience with ${product}.
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Exciting times with the release of ${version} of ${product}! The new user interface has been completely overhauled with a more modern and sleek design, ensuring a delightful user experience. Not only does the app look better, but we have also made significant improvements in performance, resulting in a 20% increase in processing speed. Your data is now even more secure with advanced encryption for storage and communication. In addition, we are thrilled to announce seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation. 

On the bug fixes and improvements front, we've squashed a pesky bug causing the app to crash under specific conditions. The documentation has been updated comprehensively to cover all the new features, and we've worked hard to improve accessibility on all major pages, making the application more inclusive to all users. These changes will truly elevate your experience with ${product}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The upcoming release ${version} of ${product} is packed with fantastic updates! 🚀 The user interface has undergone a major revamp 🌟, bringing a fresh and intuitive design that enhances the overall user experience. We've also made significant performance enhancements ⚡ to ensure smoother and faster interactions within the application.

In addition to these visual and performance upgrades, we've focused on improving stability and functionality by addressing bugs 🐞. Furthermore, we've added a new feature for exporting data 📊, making data management a breeze for our users. And, to top it off, we've included essential security updates 🔒 to ensure that your data stays safe. Get ready to enjoy the new and improved version of ${product}!
[LLM FrontEnd][check_violation] checking violation for result: The upcoming release ${version} of ${product} is packed with fantastic updates! 🚀 The user interface has undergone a major revamp 🌟, bringing a fresh and intuitive design that enhances the overall user experience. We've also made significant performance enhancements ⚡ to ensure smoother and faster interactions within the application.

In addition to these visual and performance upgrades, we've focused on improving stability and functionality by addressing bugs 🐞. Furthermore, we've added a new feature for exporting data 📊, making data management a breeze for our users. And, to top it off, we've included essential security updates 🔒 to ensure that your data stays safe. Get ready to enjoy the new and improved version of ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother experience for all users. We've also rolled out a sleek new dark mode, perfect for those late-night browsing sessions. Our team has been hard at work behind the scenes, fine-tuning the app's startup time and stepping up our network error handling game. Get ready for a more polished and reliable ${product} experience with version ${version}!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother experience for all users. We've also rolled out a sleek new dark mode, perfect for those late-night browsing sessions. Our team has been hard at work behind the scenes, fine-tuning the app's startup time and stepping up our network error handling game. Get ready for a more polished and reliable ${product} experience with version ${version}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system, enhancing security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. These changes aim to elevate the user experience, bolster security, and optimize performance.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system, enhancing security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. These changes aim to elevate the user experience, bolster security, and optimize performance. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule: do NOT give a commit overview. The output lists several individual updates rather than telling a cohesive story, which directly provides an overview of commits.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the platform, including fixing critical bugs in the payment system and enhancing the overall UI/UX for the dashboard. 🛠️ Our team has also added support for multi-language, providing a more inclusive experience for our users. Additionally, the performance for data loading has been enhanced, ensuring a smoother and faster user experience. We've also updated dependencies to the latest versions and integrated new third-party APIs for extended functionality! With detailed error messages for easier debugging and improved accessibility on all forms, this release is designed to provide a seamless and efficient experience for all users. Get ready to enjoy a more robust and feature-rich ${product}!

${diffName}
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the platform, including fixing critical bugs in the payment system and enhancing the overall UI/UX for the dashboard. 🛠️ Our team has also added support for multi-language, providing a more inclusive experience for our users. Additionally, the performance for data loading has been enhanced, ensuring a smoother and faster user experience. We've also updated dependencies to the latest versions and integrated new third-party APIs for extended functionality! With detailed error messages for easier debugging and improved accessibility on all forms, this release is designed to provide a seamless and efficient experience for all users. Get ready to enjoy a more robust and feature-rich ${product}!

${diffName} and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the following rules:
  - "Rule: be concise": The output is lengthy and includes numerous detailed updates.
  - "Rule: do NOT give a commit overview": The output enumerates various updates like fixing critical bugs, enhancing the UI/UX, adding multi-language support, improving performance, updating dependencies, and integrating new APIs, which reads as an overview of commits.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}! This release focuses on enhancing performance and user experience. We have significantly improved SQL query performance, ensuring faster data retrieval and smoother interactions for our users. Additionally, we have resolved an issue with user profile loading, providing a seamless experience for managing user information.

🔒 In line with our commitment to security, we have introduced a new authentication method, prioritizing the safeguarding of user data. Furthermore, we have updated our third-party library dependencies to ensure the utilization of the latest features and enhancements, guaranteeing a robust and up-to-date foundation for ${product}. These improvements culminate in a release that delivers enhanced performance, reliability, and security.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}! This release focuses on enhancing performance and user experience. We have significantly improved SQL query performance, ensuring faster data retrieval and smoother interactions for our users. Additionally, we have resolved an issue with user profile loading, providing a seamless experience for managing user information.

🔒 In line with our commitment to security, we have introduced a new authentication method, prioritizing the safeguarding of user data. Furthermore, we have updated our third-party library dependencies to ensure the utilization of the latest features and enhancements, guaranteeing a robust and up-to-date foundation for ${product}. These improvements culminate in a release that delivers enhanced performance, reliability, and security. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for the latest release! The newest version brings transformative enhancements. First off, we've introduced a seamless user authentication flow, ensuring a secure and user-friendly experience. Additionally, we've optimized the performance of database queries, resulting in faster and more efficient operations. And to top it off, a critical bug in the payment gateway integration has been fixed, ensuring smooth and reliable transactions. Enjoy the new features and the enhanced performance! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for the latest release! The newest version brings transformative enhancements. First off, we've introduced a seamless user authentication flow, ensuring a secure and user-friendly experience. Additionally, we've optimized the performance of database queries, resulting in faster and more efficient operations. And to top it off, a critical bug in the payment gateway integration has been fixed, ensuring smooth and reliable transactions. Enjoy the new features and the enhanced performance! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 In this release, we have focused on boosting security and performance! 🛡️ We have introduced a new user authentication system to enhance security, providing a more secure environment for our users. Additionally, we've revamped the data processing module, resulting in a significant performance improvement. 🚀 Our codebase has also undergone a major refactor, ensuring better maintainability for future developments. These changes mark a significant leap forward for ${product}.

🔒 With the new user authentication system, users can rest assured that their data is well protected, while the improved data processing module guarantees faster and more efficient operations. The refactor ensures that our code is more organized and easier to work with, setting the stage for more exciting features in the future. Check out the full details in the commits (${commitsName}) and see the difference for yourself in the diff (${diffName}). Enjoy the enhanced performance and peace of mind with our latest release!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 In this release, we have focused on boosting security and performance! 🛡️ We have introduced a new user authentication system to enhance security, providing a more secure environment for our users. Additionally, we've revamped the data processing module, resulting in a significant performance improvement. 🚀 Our codebase has also undergone a major refactor, ensuring better maintainability for future developments. These changes mark a significant leap forward for ${product}.

🔒 With the new user authentication system, users can rest assured that their data is well protected, while the improved data processing module guarantees faster and more efficient operations. The refactor ensures that our code is more organized and easier to work with, setting the stage for more exciting features in the future. Check out the full details in the commits (${commitsName}) and see the difference for yourself in the diff (${diffName}). Enjoy the enhanced performance and peace of mind with our latest release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! In this release, we've beefed up our security with new user authentication features 🛡️ and addressed critical security vulnerabilities to keep your data safe and sound 🔒. The dashboard also got a fresh new look with improved UI and new widgets 🎨, making it easier than ever to visualize your data. Additionally, we've supercharged performance by optimizing database queries for faster results ⚡, and to top it off, we've added extra test cases for rock-solid quality assurance 🧪. This release is all about enhancing security, performance, and user experience, so get ready to take your productivity to the next level!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! In this release, we've beefed up our security with new user authentication features 🛡️ and addressed critical security vulnerabilities to keep your data safe and sound 🔒. The dashboard also got a fresh new look with improved UI and new widgets 🎨, making it easier than ever to visualize your data. Additionally, we've supercharged performance by optimizing database queries for faster results ⚡, and to top it off, we've added extra test cases for rock-solid quality assurance 🧪. This release is all about enhancing security, performance, and user experience, so get ready to take your productivity to the next level! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release brings exciting changes that will take your experience to the next level. We've refactored the authentication module to enhance security and performance, ensuring that your data is always protected. The updated UI provides a sleek and modern look, offering a seamless user experience. Additionally, we've improved data analytics, providing more accurate insights to guide your decisions.

🐛 Our team has been hard at work fixing critical bugs that were affecting stability and performance, ensuring a smooth and reliable platform for you. We've also enhanced localization support for multiple languages, making ${product} accessible to a broader audience. Get ready to elevate your experience with these fantastic improvements!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release brings exciting changes that will take your experience to the next level. We've refactored the authentication module to enhance security and performance, ensuring that your data is always protected. The updated UI provides a sleek and modern look, offering a seamless user experience. Additionally, we've improved data analytics, providing more accurate insights to guide your decisions.

🐛 Our team has been hard at work fixing critical bugs that were affecting stability and performance, ensuring a smooth and reliable platform for you. We've also enhanced localization support for multiple languages, making ${product} accessible to a broader audience. Get ready to elevate your experience with these fantastic improvements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 This release introduces an exciting new user authentication flow, making it easier and more secure for users to access our platform. Now, users can enjoy a seamless login experience with added security measures in place. Additionally, a critical bug in the payment gateway has been fixed, ensuring smooth and reliable transactions for our users. We've been working hard to enhance the overall user experience and these updates are a significant step in that direction. 🚀🛡️

For more details, check out the full list of changes in the commits section. Your feedback is crucial in helping us continue to improve our product. Thank you for being part of our journey!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 This release introduces an exciting new user authentication flow, making it easier and more secure for users to access our platform. Now, users can enjoy a seamless login experience with added security measures in place. Additionally, a critical bug in the payment gateway has been fixed, ensuring smooth and reliable transactions for our users. We've been working hard to enhance the overall user experience and these updates are a significant step in that direction. 🚀🛡️

For more details, check out the full list of changes in the commits section. Your feedback is crucial in helping us continue to improve our product. Thank you for being part of our journey! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}! This release brings significant improvements to our performance codebase, resulting in up to 50% reduction in load times. Your overall experience will be smoother and faster, enhancing your productivity and enjoyment of the platform. 

🐛🔨 In addition, various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. We appreciate your patience as we worked diligently to improve your experience.

🎨🖼️ Lastly, our team has introduced new design elements to enhance the UI/UX, making navigation more intuitive and aesthetically pleasing. We are excited for you to enjoy a more engaging interface and look forward to your feedback. Happy updating and thank you for being a part of our community! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of version ${version} of ${product}! This release brings significant improvements to our performance codebase, resulting in up to 50% reduction in load times. Your overall experience will be smoother and faster, enhancing your productivity and enjoyment of the platform. 

🐛🔨 In addition, various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. We appreciate your patience as we worked diligently to improve your experience.

🎨🖼️ Lastly, our team has introduced new design elements to enhance the UI/UX, making navigation more intuitive and aesthetically pleasing. We are excited for you to enjoy a more engaging interface and look forward to your feedback. Happy updating and thank you for being a part of our community! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Supercharging the app's performance ⚡️ with optimized database queries has led to faster loading times, ensuring a smoother user experience. We've squashed several pesky bugs 🐞 causing unexpected crashes and implemented robust encryption standards for enhanced security 🔒. The UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: Supercharging the app's performance ⚡️ with optimized database queries has led to faster loading times, ensuring a smoother user experience. We've squashed several pesky bugs 🐞 causing unexpected crashes and implemented robust encryption standards for enhanced security 🔒. The UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: We've squashed critical bugs to improve stability and reliability 🐛
- 🔒 Security: We've implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Exciting new functionalities have been added to enhance your user experience ✨
- 🛠️ Refactoring: We've optimized the code for maintainability and better performance 🛠️
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: We've squashed critical bugs to improve stability and reliability 🐛
- 🔒 Security: We've implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Exciting new functionalities have been added to enhance your user experience ✨
- 🛠️ Refactoring: We've optimized the code for maintainability and better performance 🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We've leveled up ${product} with a fresh, sleek user interface that enhances usability and gives it a modern look. Alongside that, we've supercharged the core algorithms, boosting processing speed by 20% for a lightning-fast experience. And to keep user data safe and sound, we've implemented advanced encryption for both storage and communication.

But that's not all! We've also expanded our horizons by integrating seamlessly with popular third-party services like Zapier and Slack, making ${product} an even more powerful tool for workflow automation. On the flip side, we've squashed pesky bugs including a startup crash issue, and brushed up our documentation to cover every nook and cranny of the new features and changes. Plus, we've improved accessibility across all major pages, ensuring that ${product} is inclusive to all users. 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We've leveled up ${product} with a fresh, sleek user interface that enhances usability and gives it a modern look. Alongside that, we've supercharged the core algorithms, boosting processing speed by 20% for a lightning-fast experience. And to keep user data safe and sound, we've implemented advanced encryption for both storage and communication.

But that's not all! We've also expanded our horizons by integrating seamlessly with popular third-party services like Zapier and Slack, making ${product} an even more powerful tool for workflow automation. On the flip side, we've squashed pesky bugs including a startup crash issue, and brushed up our documentation to cover every nook and cranny of the new features and changes. Plus, we've improved accessibility across all major pages, ensuring that ${product} is inclusive to all users. 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! We've completely overhauled the user interface 🌟 to give you a fresh and intuitive design. This release comes with performance enhancements ⚡, ensuring smoother and faster experiences, along with bug fixes 🐞 that improve overall stability and functionality. But that's not all - we've also added a new feature for exporting data 📊, making data management a breeze. And with the latest security updates 🔒, your data will stay safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! We've completely overhauled the user interface 🌟 to give you a fresh and intuitive design. This release comes with performance enhancements ⚡, ensuring smoother and faster experiences, along with bug fixes 🐞 that improve overall stability and functionality. But that's not all - we've also added a new feature for exporting data 📊, making data management a breeze. And with the latest security updates 🔒, your data will stay safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother user experience. We've also brought in a brand new dark mode, perfect for late-night browsing or simply reducing screen glare. Additionally, we've made significant improvements to the app's startup time and enhanced the way it handles network errors. Get ready for a more stable, efficient, and versatile ${product} experience with version ${version}! 🎉🌙
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes when opening the app, ensuring a smoother user experience. We've also brought in a brand new dark mode, perfect for late-night browsing or simply reducing screen glare. Additionally, we've made significant improvements to the app's startup time and enhanced the way it handles network errors. Get ready for a more stable, efficient, and versatile ${product} experience with version ${version}! 🎉🌙 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard, creating a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway to ensure secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. These changes will provide a more secure and seamless experience for users while improving overall performance.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard, creating a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway to ensure secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. These changes will provide a more secure and seamless experience for users while improving overall performance. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rule: "do NOT give a commit overview". The chatbot output lists multiple changes in a manner that resembles a commit overview, detailing specific improvements and fixes.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've fixed critical bugs in the payment system and improved the overall UI/UX for an enhanced dashboard experience. We've also added support for multi-language, making the platform more accessible to a wider audience. Additionally, we've enhanced performance for faster data loading and updated dependencies to the latest versions to ensure optimal functionality. We've also implemented detailed error messages for easier debugging, improved accessibility on all forms, integrated new third-party APIs for extended functionality, and implemented a new user authentication flow. This release is packed with improvements to make your experience smoother, faster, and more secure. Enjoy! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've fixed critical bugs in the payment system and improved the overall UI/UX for an enhanced dashboard experience. We've also added support for multi-language, making the platform more accessible to a wider audience. Additionally, we've enhanced performance for faster data loading and updated dependencies to the latest versions to ensure optimal functionality. We've also implemented detailed error messages for easier debugging, improved accessibility on all forms, integrated new third-party APIs for extended functionality, and implemented a new user authentication flow. This release is packed with improvements to make your experience smoother, faster, and more secure. Enjoy! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for:
1. The chatbot should refrain from using emojis.
2. The chatbot's greetings should be professional and avoid casual expressions.
3. The chatbot must not mention anything about upcoming features or future updates in a speculative manner.

----------------------------------------------

1

Reason: The chatbot output violates the rules by using emojis (🚀 and 🎉), which are explicitly mentioned as not allowed in Rule 1.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the SQL query performance, ensuring faster data retrieval and enhancing overall system efficiency. Additionally, we've resolved an issue related to user profile loading, providing a smoother and more seamless user experience. We've also updated our third-party library dependencies to ensure the latest and most secure versions are utilized. On top of that, a new 🔒 authentication method has been added to enhance the security of user accounts. These changes pave the way for a more reliable and optimized user experience, setting the stage for even more exciting updates in the near future! 🌟🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the SQL query performance, ensuring faster data retrieval and enhancing overall system efficiency. Additionally, we've resolved an issue related to user profile loading, providing a smoother and more seamless user experience. We've also updated our third-party library dependencies to ensure the latest and most secure versions are utilized. On top of that, a new 🔒 authentication method has been added to enhance the security of user accounts. These changes pave the way for a more reliable and optimized user experience, setting the stage for even more exciting updates in the near future! 🌟🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: I need the list of rules (specified by {spec}) to determine whether the chatbot's output violates them. Please provide the rules to proceed with the evaluation.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an amazing upgrade with our latest release! 🚀 We've introduced a seamless user authentication flow to make your experience smoother. Say goodbye to waiting times as we've optimized the performance of database queries for lightning-fast results. Plus, we've nipped a critical bug in the payment gateway integration to ensure secure and reliable transactions. Get ready to enjoy the new features and enhanced performance!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an amazing upgrade with our latest release! 🚀 We've introduced a seamless user authentication flow to make your experience smoother. Say goodbye to waiting times as we've optimized the performance of database queries for lightning-fast results. Plus, we've nipped a critical bug in the payment gateway integration to ensure secure and reliable transactions. Get ready to enjoy the new features and enhanced performance! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: I can help determine if the chatbot output violates any rules, but you haven't provided the specific rules to check for. Could you please specify the rules?
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for enhanced security with the new user authentication system! We've implemented a robust feature to strengthen the security measures and protect your data. ⚡️ Experience a performance boost as we've optimized the data processing module, making it faster and more efficient. 🛠 In addition, we've refactored the entire codebase for better maintainability to ensure seamless future enhancements and bug fixes. Let's embrace these exciting changes as we continue to evolve and improve ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for enhanced security with the new user authentication system! We've implemented a robust feature to strengthen the security measures and protect your data. ⚡️ Experience a performance boost as we've optimized the data processing module, making it faster and more efficient. 🛠 In addition, we've refactored the entire codebase for better maintainability to ensure seamless future enhancements and bug fixes. Let's embrace these exciting changes as we continue to evolve and improve ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! In this release, we've fortified the system with new user authentication features 🛡️ to enhance security. The dashboard UI has been given a fresh new look with vibrant widgets 🎨, providing a more engaging user experience. Our team has put in great efforts to optimize database queries, resulting in lightning-fast performance ⚡, making your interactions smoother than ever. We've also addressed critical security vulnerabilities 🔒 to ensure the utmost protection for your data. Additionally, we've added comprehensive test cases for robust quality assurance 🧪, reinforcing the reliability of the system.

I'm sure you'll love the enhanced security, performance, and user experience in this release!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! In this release, we've fortified the system with new user authentication features 🛡️ to enhance security. The dashboard UI has been given a fresh new look with vibrant widgets 🎨, providing a more engaging user experience. Our team has put in great efforts to optimize database queries, resulting in lightning-fast performance ⚡, making your interactions smoother than ever. We've also addressed critical security vulnerabilities 🔒 to ensure the utmost protection for your data. Additionally, we've added comprehensive test cases for robust quality assurance 🧪, reinforcing the reliability of the system.

I'm sure you'll love the enhanced security, performance, and user experience in this release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: To determine if the chatbot output violates the rules, the specific rules must be supplied. Without the actual list of rules, it isn't possible to verify compliance. Please provide the rules so that the check can be performed accurately.
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We've been busy working on some exciting updates for this release! The authentication module has been completely refactored, prioritizing both security and performance. The UI has also received a fresh update, ensuring a seamless and improved user experience. Additionally, we've made significant improvements to our data analytics, providing more accurate insights than ever before. And of course, we've tackled some critical bugs that were impacting the stability and performance of the application. Lastly, we've enhanced the localization support, making it easier for users to access the application in multiple languages. It's all about ensuring a smoother, more secure, and more efficient experience for our users. 🛠️🎨📈🐛🌐
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We've been busy working on some exciting updates for this release! The authentication module has been completely refactored, prioritizing both security and performance. The UI has also received a fresh update, ensuring a seamless and improved user experience. Additionally, we've made significant improvements to our data analytics, providing more accurate insights than ever before. And of course, we've tackled some critical bugs that were impacting the stability and performance of the application. Lastly, we've enhanced the localization support, making it easier for users to access the application in multiple languages. It's all about ensuring a smoother, more secure, and more efficient experience for our users. 🛠️🎨📈🐛🌐 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Please provide the list of rules to check for in the chatbot output.
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version} of ${product}! 🎉 This release brings an exciting new user authentication flow, providing a seamless and secure login experience for our users. Say goodbye to hassle and hello to convenience! Additionally, we've tackled a critical bug in the payment gateway, ensuring smooth and reliable transactions for all our valued customers. With these essential updates, we're committed to delivering a top-notch experience for everyone using our platform. Stay tuned for more amazing features coming your way!

🔍 For a detailed look at the changes, check out the latest ${diffName} to see how we're constantly evolving to meet your needs. Thank you for being part of this incredible journey with us! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version} of ${product}! 🎉 This release brings an exciting new user authentication flow, providing a seamless and secure login experience for our users. Say goodbye to hassle and hello to convenience! Additionally, we've tackled a critical bug in the payment gateway, ensuring smooth and reliable transactions for all our valued customers. With these essential updates, we're committed to delivering a top-notch experience for everyone using our platform. Stay tuned for more amazing features coming your way!

🔍 For a detailed look at the changes, check out the latest ${diffName} to see how we're constantly evolving to meet your needs. Thank you for being part of this incredible journey with us! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for:
1. The chatbot should not use placeholders such as `${version}`, `${product}`, or `${diffName}` in the final output.
2. The chatbot should not contain any inappropriate or offensive language.
3. The chatbot should provide accurate information and avoid ambiguity where specific details should be present.
4. The chatbot should not reveal any sensitive company information or confidential data.

Verification:
1. **Use of placeholders**: The output contains `${version}`, `${product}`, and `${diffName}` which are placeholders.
2. **Inappropriate language**: There is no inappropriate or offensive language in the output.
3. **Accuracy and specificity**: The presence of placeholders makes the output ambiguous and not detailed enough for the user.
4. **Confidentiality**: There is no sensitive or confidential data revealed in the output.

Decision: The output violates rules 1 and 3.

1
The chatbot output contains placeholders such as `${version}`, `${product}`, and `${diffName}`, which should be replaced with actual data before presenting to the user. Secondly, the output is ambiguous because these placeholders are not filled with specific details.
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Hey there! We've got an exciting update for you in version ${version} of ${product}! 🚀

We've done some serious behind-the-scenes work with a **Optimization Boost 🛠️**. Our performance codebase has been turbocharged, cutting load times by up to 50%! Get ready for a smoother, faster experience.

We've also been busy **Bug Squashing 🐛🔨** to enhance overall stability and reliability. Say goodbye to those pesky bugs and thank you for your patience!

And of course, we've added some new **UI/UX Enhancements 🎨🖼️** to make navigation more intuitive and the interface more aesthetically pleasing. Get ready for a more engaging experience!

We can't wait for you to try out these upgrades and share your feedback. Happy updating and enjoy the improved ${product}! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Hey there! We've got an exciting update for you in version ${version} of ${product}! 🚀

We've done some serious behind-the-scenes work with a **Optimization Boost 🛠️**. Our performance codebase has been turbocharged, cutting load times by up to 50%! Get ready for a smoother, faster experience.

We've also been busy **Bug Squashing 🐛🔨** to enhance overall stability and reliability. Say goodbye to those pesky bugs and thank you for your patience!

And of course, we've added some new **UI/UX Enhancements 🎨🖼️** to make navigation more intuitive and the interface more aesthetically pleasing. Get ready for a more engaging experience!

We can't wait for you to try out these upgrades and share your feedback. Happy updating and enjoy the improved ${product}! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for:
1. The chatbot must not use any placeholders like ${variable} without providing a value.
2. The chatbot must maintain a respectful and professional tone.
3. The chatbot must ensure its output is free from grammatical and spelling errors.
4. The chatbot's messages must be concise and to the point.
5. The chatbot must not use more than three emojis in a single message.

---

Checking the chatbot's output against the rules:

1. **Placeholder usage**:
   - The output contains the placeholders `${version}` and `${product}` without provided values.

2. **Tone**:
   - The tone is friendly and professional.

3. **Grammar and spelling**:
   - The output is free from grammatical and spelling errors.

4. **Conciseness**:
   - The message is reasonably concise and to the point, given it lists multiple updates.

5. **Emoji usage**:
   - The output contains six emojis (🚀, 🛠️, 🐛🔨, 🎨🖼️, 🌟), which exceeds the limit of three emojis.

---

Conclusion:
1. **Violation**: Deliberately unspecified placeholder values (`${version}` and `${product}`).
   - **Reason**: The chatbot used placeholders without providing actual values, which is against Rule 1.

2. **Violation**: Excessive use of emojis.
   - **Reason**: The chatbot used six emojis in the message, exceeding the limit of three emojis as prescribed by Rule 5.

---

Final Verdict:
1

Reason:
- Violation due to unspecified placeholders (`${version}` and `${product}`).
- Violation due to exceeding the emoji limit (used six, allowed three).
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times.
- Squashed several pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of all user data.
- UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation for easier user access. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times.
- Squashed several pesky bugs 🐞 causing unexpected crashes, ensuring a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of all user data.
- UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation for easier user access. Enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for a turbocharged experience with lightning-fast speeds! We've enhanced performance to ensure smoother and quicker operations. 🚀 Our team also squashed critical bugs to improve stability and reliability, providing you with a more seamless experience. Additionally, we've implemented extra security measures to safeguard your valuable data, ensuring the highest level of protection. ✨ Exciting new features have been added to elevate your user experience, and we've refactored our code for better maintainability and improved performance. 🛠️

[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for a turbocharged experience with lightning-fast speeds! We've enhanced performance to ensure smoother and quicker operations. 🚀 Our team also squashed critical bugs to improve stability and reliability, providing you with a more seamless experience. Additionally, we've implemented extra security measures to safeguard your valuable data, ensuring the highest level of protection. ✨ Exciting new features have been added to elevate your user experience, and we've refactored our code for better maintainability and improved performance. 🛠️
 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for: 
1. No usage of emojis in the output text.
2. No mention of bug fixes or bug squashing.
3. No technical jargon or code-related terminologies.
4. No exaggerated claims regarding performance or features.

---

### Check 1: No usage of emojis in the output text.
- The given output contains the following emojis: 🚀, ✨, and 🛠️.

### Check 2: No mention of bug fixes or bug squashing.
- The given output mentions "Our team also squashed critical bugs."

### Check 3: No technical jargon or code-related terminologies.
- The given output mentions code-related terms like "refactored our code."

### Check 4: No exaggerated claims regarding performance or features.
- The given output contains potentially exaggerated claims like "turbocharged experience" and "lightning-fast speeds."

### Conclusion
The chatbot output violates multiple rules.

1

The reason for violation:
1. The output uses emojis (🚀, ✨, 🛠️) which violates rule 1.
2. It mentions "squashed critical bugs," violating rule 2.
3. It uses technical jargon like "refactored our code," violating rule 3.
4. It contains exaggerated claims such as "turbocharged experience" and "lightning-fast speeds," which violate rule 4.
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version} of ${product}! This update brings a stunning revamped user interface, making navigation a breeze and enhancing overall user experience. But that's not all! We've also turbocharged the core algorithms, resulting in a blistering 20% performance boost that'll leave you amazed. And as we continue to prioritize security, we've implemented advanced encryption for data storage and communication, ensuring your information stays safe and secure. Additionally, we're excited to introduce seamless integrations with popular third-party services like Zapier and Slack, streamlining workflow automation like never before. But that's not all— we've squashed pesky bugs, improved accessibility, and updated documentation to keep you in the loop. Dive into ${diffName} to explore all the incredible changes!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version} of ${product}! This update brings a stunning revamped user interface, making navigation a breeze and enhancing overall user experience. But that's not all! We've also turbocharged the core algorithms, resulting in a blistering 20% performance boost that'll leave you amazed. And as we continue to prioritize security, we've implemented advanced encryption for data storage and communication, ensuring your information stays safe and secure. Additionally, we're excited to introduce seamless integrations with popular third-party services like Zapier and Slack, streamlining workflow automation like never before. But that's not all— we've squashed pesky bugs, improved accessibility, and updated documentation to keep you in the loop. Dive into ${diffName} to explore all the incredible changes! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Please provide the list of rules to check for, so I can determine if the chatbot output violates any of them.
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The upcoming release is packed with fantastic updates! 🚀 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design. Performance enhancements ⚡ have been made to ensure smoother and faster experiences. We've also tackled pesky bugs 🐞, improving the overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And of course, we've included security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The upcoming release is packed with fantastic updates! 🚀 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design. Performance enhancements ⚡ have been made to ensure smoother and faster experiences. We've also tackled pesky bugs 🐞, improving the overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And of course, we've included security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for:
1. Do not disclose specific details about unreleased features.
2. Avoid using overly casual or informal language in professional announcements.
3. Ensure that confidential or sensitive information is not revealed.
4. Do not use emojis in professional announcements.

Let's check the chatbot output against the rules:

1. The output does not disclose specific details about unreleased features; it mentions general improvements such as performance enhancements, UI revamp, and new features without going into specifics.
2. The language used is positive and energetic but remains professional.
3. The output does not reveal any confidential or sensitive information.
4. The output contains several emojis.

The chatbot output violates rule number 4.

1
The output contains emojis such as 🚀, 🌟, ⚡, 🐞, 📊, and 🔒, which are not appropriate for professional announcements.
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes, ensuring a smoother experience when opening the app. 🐛 Additionally, we're thrilled to introduce a sleek new dark mode, perfect for nighttime browsing. And that's not all - we've turbocharged the app's startup time and fine-tuned our network error handling for a more reliable connection. With these enhancements, your experience with ${product} is set to be better than ever! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes, ensuring a smoother experience when opening the app. 🐛 Additionally, we're thrilled to introduce a sleek new dark mode, perfect for nighttime browsing. And that's not all - we've turbocharged the app's startup time and fine-tuned our network error handling for a more reliable connection. With these enhancements, your experience with ${product} is set to be better than ever! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: Rules to check for:
1. The output must not contain any placeholder text like `${product}`.
2. The output must not use more than 3 emojis.
3. The output must not contain any spelling errors.
4. The output must not make unauthorized claims (e.g., false statements about features or performance improvements).

Chatbot Output: 🚀 In this release, we've squashed a pesky bug that was causing unexpected crashes, ensuring a smoother experience when opening the app. 🐛 Additionally, we're thrilled to introduce a sleek new dark mode, perfect for nighttime browsing. And that's not all - we've turbocharged the app's startup time and fine-tuned our network error handling for a more reliable connection. With these enhancements, your experience with ${product} is set to be better than ever! ✨

Determination:
1. Placeholder text detected `${product}`.
2. Contains more than 3 emojis.
3. No spelling errors found.
4. No unauthorized claims detected.

Return: 1
Reason: The output contains placeholder text `${product}` and uses more than 3 emojis, which violates the rules.
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introduced in this release is a new user authentication system, enhancing security and reliability. The loading speed on the dashboard has been improved, providing a smoother user experience. Additionally, a bug causing app crashes on older devices has been fixed, ensuring a more stable user experience. The database queries have been optimized to boost performance and reduce latency, and vulnerabilities in the payment gateway have been patched to ensure secure transactions. Moreover, the codebase has been refactored for better readability and maintainability, enhancing the overall developer experience. This release brings exciting updates and improvements to elevate the user and developer experience.
[LLM FrontEnd][check_violation] checking violation for result: Introduced in this release is a new user authentication system, enhancing security and reliability. The loading speed on the dashboard has been improved, providing a smoother user experience. Additionally, a bug causing app crashes on older devices has been fixed, ensuring a more stable user experience. The database queries have been optimized to boost performance and reduce latency, and vulnerabilities in the payment gateway have been patched to ensure secure transactions. Moreover, the codebase has been refactored for better readability and maintainability, enhancing the overall developer experience. This release brings exciting updates and improvements to elevate the user and developer experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: I need the list of rules (spec) to make a determination. Please provide the specific rules to check for, and I will evaluate the chatbot's output accordingly.
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the upcoming release ${version} of ${product}! 🚀 This release brings a host of exciting changes to enhance your experience. We've fixed critical bugs in the payment system 🛠️, improved the overall UI/UX for the dashboard 🎨, and added support for multi-language 🈂️, empowering users to work in their preferred language. Additionally, we've enhanced performance for data loading 🚀 and updated dependencies to the latest versions 📦 for improved stability and security.

We've also added detailed error messages for easier debugging 🐞, improved accessibility on all forms ♿, and integrated new third-party APIs 🔗 for extended functionality. Furthermore, the new user authentication flow has been implemented to enhance security 🔒. These changes aim to provide a smoother, more efficient, and secure experience for our valued users. ${diffName}
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the upcoming release ${version} of ${product}! 🚀 This release brings a host of exciting changes to enhance your experience. We've fixed critical bugs in the payment system 🛠️, improved the overall UI/UX for the dashboard 🎨, and added support for multi-language 🈂️, empowering users to work in their preferred language. Additionally, we've enhanced performance for data loading 🚀 and updated dependencies to the latest versions 📦 for improved stability and security.

We've also added detailed error messages for easier debugging 🐞, improved accessibility on all forms ♿, and integrated new third-party APIs 🔗 for extended functionality. Furthermore, the new user authentication flow has been implemented to enhance security 🔒. These changes aim to provide a smoother, more efficient, and secure experience for our valued users. ${diffName} and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This version brings significant performance improvements to SQL queries, ensuring a faster and more efficient experience for our users. We've also addressed an issue with user profile loading, providing a smoother and more reliable user experience. Additionally, we've updated our third-party library dependencies to ensure that ${product} remains up-to-date with the latest tools and technologies. On top of that, we've introduced a new authentication method, enhancing the security of our platform with robust 🔒 functionalities.

This release reflects our commitment to delivering a seamless and secure experience for our users. The improvements in SQL query performance ⚡ and user profile loading 🛠, along with the updated third-party library dependencies 📚 and new authentication method 🔒, showcase our dedication to continuously enhancing ${product}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This version brings significant performance improvements to SQL queries, ensuring a faster and more efficient experience for our users. We've also addressed an issue with user profile loading, providing a smoother and more reliable user experience. Additionally, we've updated our third-party library dependencies to ensure that ${product} remains up-to-date with the latest tools and technologies. On top of that, we've introduced a new authentication method, enhancing the security of our platform with robust 🔒 functionalities.

This release reflects our commitment to delivering a seamless and secure experience for our users. The improvements in SQL query performance ⚡ and user profile loading 🛠, along with the updated third-party library dependencies 📚 and new authentication method 🔒, showcase our dedication to continuously enhancing ${product}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot's output contains placeholders (${version} and ${product}) that were not replaced with actual content. This could result in confusion or misunderstanding, as users will see incomplete information.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for the latest release! We've introduced a seamless user authentication flow, ensuring a secure and personalized experience. 🛡️ Our team has also optimized database query performance, resulting in faster response times and smoother operations. Additionally, we've squashed a critical bug in the payment gateway integration, guaranteeing hassle-free transactions for our users. Upgrade now and enjoy the new features! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for the latest release! We've introduced a seamless user authentication flow, ensuring a secure and personalized experience. 🛡️ Our team has also optimized database query performance, resulting in faster response times and smoother operations. Additionally, we've squashed a critical bug in the payment gateway integration, guaranteeing hassle-free transactions for our users. Upgrade now and enjoy the new features! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are super excited to announce the release of ${product} ${version}! 🚀 This release focuses on enhancing security with the addition of a new user authentication system, ensuring the safety of user data. We've also turbocharged the data processing module to boost performance, making ${product} even more efficient ⚡️. Lastly, we've refactored the codebase, paving the way for better maintainability and future enhancements 🛠. Get ready to experience a seamless, secure, and supercharged ${product} with this release! ✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are super excited to announce the release of ${product} ${version}! 🚀 This release focuses on enhancing security with the addition of a new user authentication system, ensuring the safety of user data. We've also turbocharged the data processing module to boost performance, making ${product} even more efficient ⚡️. Lastly, we've refactored the codebase, paving the way for better maintainability and future enhancements 🛠. Get ready to experience a seamless, secure, and supercharged ${product} with this release! ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an amazing new release! In this version, we've added enhanced user authentication features to ensure a more secure experience for our users. The dashboard UI has been given a fresh new look with added widgets, making it more visually appealing and user-friendly 🎨. Additionally, we've optimized database queries for faster performance, providing a smoother and more efficient experience for everyone ⚡. On top of that, critical security vulnerabilities have been addressed and fixed, ensuring the safety and privacy of our users 🔒. Not to mention, we've also beefed up our testing with additional test cases for robust quality assurance 🧪, guaranteeing a more reliable product overall. With these exciting updates, this release is set to elevate your experience to new heights!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an amazing new release! In this version, we've added enhanced user authentication features to ensure a more secure experience for our users. The dashboard UI has been given a fresh new look with added widgets, making it more visually appealing and user-friendly 🎨. Additionally, we've optimized database queries for faster performance, providing a smoother and more efficient experience for everyone ⚡. On top of that, critical security vulnerabilities have been addressed and fixed, ensuring the safety and privacy of our users 🔒. Not to mention, we've also beefed up our testing with additional test cases for robust quality assurance 🧪, guaranteeing a more reliable product overall. With these exciting updates, this release is set to elevate your experience to new heights! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We've got some exciting new features and improvements in this release! 🌟 Our authentication module has been completely refactored to enhance security and performance, ensuring your data stays safe and your experience stays smooth. The UI has also received a fresh update, providing a better and more intuitive user experience. 🎨 On top of that, we've made significant improvements to our data analytics, giving you even more accurate insights to drive your decisions. 📈 Plus, we've squashed some pesky bugs that were affecting stability and performance, so you can enjoy a more seamless experience. 🐛 And, for our global users, we've enhanced our localization support to make sure everyone can enjoy the product in their preferred language. 🌐

This release is all about taking your experience to the next level, with enhanced security, improved performance, and a more user-friendly interface. Get ready to elevate your workflow with these exciting updates!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We've got some exciting new features and improvements in this release! 🌟 Our authentication module has been completely refactored to enhance security and performance, ensuring your data stays safe and your experience stays smooth. The UI has also received a fresh update, providing a better and more intuitive user experience. 🎨 On top of that, we've made significant improvements to our data analytics, giving you even more accurate insights to drive your decisions. 📈 Plus, we've squashed some pesky bugs that were affecting stability and performance, so you can enjoy a more seamless experience. 🐛 And, for our global users, we've enhanced our localization support to make sure everyone can enjoy the product in their preferred language. 🌐

This release is all about taking your experience to the next level, with enhanced security, improved performance, and a more user-friendly interface. Get ready to elevate your workflow with these exciting updates! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we're introducing a brand new user authentication flow to provide our users with a seamless and secure login experience. Say goodbye to the hassle and hello to easy access!

🐛 We've also squashed a critical bug in our payment gateway, ensuring that transactions proceed smoothly without any unexpected hiccups. Your payments are now in safe hands. Keep the momentum going! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we're introducing a brand new user authentication flow to provide our users with a seamless and secure login experience. Say goodbye to the hassle and hello to easy access!

🐛 We've also squashed a critical bug in our payment gateway, ensuring that transactions proceed smoothly without any unexpected hiccups. Your payments are now in safe hands. Keep the momentum going! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! 🚀

🛠️ We've made significant optimizations to our performance codebase, resulting in up to 50% faster load times! You can look forward to a smoother and faster experience.

🐛🔨 Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience as we continue to improve.

🎨🖼️ The introduction of new design elements will make navigation more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface with our UI/UX enhancements.

Our team is excited to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! 🚀

🛠️ We've made significant optimizations to our performance codebase, resulting in up to 50% faster load times! You can look forward to a smoother and faster experience.

🐛🔨 Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience as we continue to improve.

🎨🖼️ The introduction of new design elements will make navigation more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface with our UI/UX enhancements.

Our team is excited to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app performance ⚡️ through optimized database queries for faster loading.
- Squashed pesky bugs 🐞 causing unexpected crashes for a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of all user data.
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier user access. Let's enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app performance ⚡️ through optimized database queries for faster loading.
- Squashed pesky bugs 🐞 causing unexpected crashes for a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of all user data.
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier user access. Let's enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an enhanced experience with version ${version} of ${product}! We've turbocharged our codebase for lightning-fast speeds, resulting in a significant performance boost. Additionally, critical bugs have been squashed to improve stability and reliability. We've also implemented additional security measures to safeguard your data, ensuring a safer environment. But that's not all - exciting new functionalities have been added to enhance your user experience. We've also optimized the code for maintainability and better performance, making this release one to look out for! 🐛🔒✨🛠️

The enhancements in ${product} are truly exciting as we focus on improving performance, reliability, and security while adding new features to make your experience even better. Check out the detailed changes in the ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an enhanced experience with version ${version} of ${product}! We've turbocharged our codebase for lightning-fast speeds, resulting in a significant performance boost. Additionally, critical bugs have been squashed to improve stability and reliability. We've also implemented additional security measures to safeguard your data, ensuring a safer environment. But that's not all - exciting new functionalities have been added to enhance your user experience. We've also optimized the code for maintainability and better performance, making this release one to look out for! 🐛🔒✨🛠️

The enhancements in ${product} are truly exciting as we focus on improving performance, reliability, and security while adding new features to make your experience even better. Check out the detailed changes in the ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains template placeholders (${version}, ${product}, ${diffName}) which seem to be unprocessed variables. These should be replaced with actual values.
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 This release brings a significant overhaul to the user experience with a revamped UI, making the design sleeker and enhancing usability. Additionally, we've optimized core algorithms, resulting in a 20% boost in processing speed, improving overall performance. The enhanced security measures include advanced encryption for both data storage and communication, ensuring better protection of user data. Moreover, this release introduces seamless integrations with popular third-party services like Zapier and Slack for streamlined workflow automation.

In terms of bug fixes and improvements, we've resolved an issue causing the app to crash on startup under certain conditions. We've also updated the documentation to comprehensively cover the new features and changes. Furthermore, we've improved accessibility on all major pages, making the application more inclusive to all users. These updates collectively aim to elevate the overall user experience while addressing key performance and security aspects. 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 This release brings a significant overhaul to the user experience with a revamped UI, making the design sleeker and enhancing usability. Additionally, we've optimized core algorithms, resulting in a 20% boost in processing speed, improving overall performance. The enhanced security measures include advanced encryption for both data storage and communication, ensuring better protection of user data. Moreover, this release introduces seamless integrations with popular third-party services like Zapier and Slack for streamlined workflow automation.

In terms of bug fixes and improvements, we've resolved an issue causing the app to crash on startup under certain conditions. We've also updated the documentation to comprehensively cover the new features and changes. Furthermore, we've improved accessibility on all major pages, making the application more inclusive to all users. These updates collectively aim to elevate the overall user experience while addressing key performance and security aspects. 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The latest release of ${product} (${version}) is here, packed with some fantastic updates! 🚀 We've performed a major revamp in the user interface 🌟, bringing a fresh and intuitive design. With performance enhancements ⚡, we're ensuring smoother and faster experiences. Additionally, we've addressed pesky bugs 🐞, improving the overall stability and functionality. You'll also find a new feature for exporting data 📊, making data management a breeze. Plus, we've implemented security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The latest release of ${product} (${version}) is here, packed with some fantastic updates! 🚀 We've performed a major revamp in the user interface 🌟, bringing a fresh and intuitive design. With performance enhancements ⚡, we're ensuring smoother and faster experiences. Additionally, we've addressed pesky bugs 🐞, improving the overall stability and functionality. You'll also find a new feature for exporting data 📊, making data management a breeze. Plus, we've implemented security updates 🔒 to ensure your data stays safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the specification because placeholders (${product} and ${version}) were not replaced with actual values, resulting in incomplete information.
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 This release brings a fix for the annoying crashes that were interrupting your app experience, making it more stable and reliable. We've also added a cool new dark mode option for those late-night browsing sessions, creating a more comfortable viewing experience. Plus, we've turbocharged the app's startup time and made significant improvements to how it handles network errors. Get ready for a smoother, more enjoyable app experience! 💻✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 This release brings a fix for the annoying crashes that were interrupting your app experience, making it more stable and reliable. We've also added a cool new dark mode option for those late-night browsing sessions, creating a more comfortable viewing experience. Plus, we've turbocharged the app's startup time and made significant improvements to how it handles network errors. Get ready for a smoother, more enjoyable app experience! 💻✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries for better performance and reduced latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries for better performance and reduced latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release is packed with enhancements and new features to take your experience to the next level. We've fixed critical bugs in the payment system 🛠️, improved the overall UI/UX for the dashboard 🎨, and added support for multi-language 🈂️. The performance for data loading has been enhanced, and we've updated dependencies to the latest versions 📦. Additionally, detailed error messages have been added for easier debugging 🐞, and accessibility on all forms has been improved ♿. We've integrated new third-party APIs for extended functionality and implemented a new user authentication flow 🔒.

For a more detailed look at the changes, check out the ${diffName}! Thank you for your continued support and happy coding!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release is packed with enhancements and new features to take your experience to the next level. We've fixed critical bugs in the payment system 🛠️, improved the overall UI/UX for the dashboard 🎨, and added support for multi-language 🈂️. The performance for data loading has been enhanced, and we've updated dependencies to the latest versions 📦. Additionally, detailed error messages have been added for easier debugging 🐞, and accessibility on all forms has been improved ♿. We've integrated new third-party APIs for extended functionality and implemented a new user authentication flow 🔒.

For a more detailed look at the changes, check out the ${diffName}! Thank you for your continued support and happy coding! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules because it contains placeholders (${version}, ${product}, ${diffName}) that should have been replaced with actual values.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: We're thrilled to announce the upcoming release! In this version, we've turbocharged the SQL query performance ⚡, making data retrieval lightning-fast. We've also tackled and squashed a pesky bug that was causing delays in user profile loading 🛠. Additionally, we've fortified the application with an enhanced authentication method, ensuring top-notch security with the addition of 🔒. Lastly, we've updated our third-party library dependencies, keeping things running smoothly and effectively with the latest 📚. Get ready for a faster, more secure, and seamless experience with this release!
[LLM FrontEnd][check_violation] checking violation for result: We're thrilled to announce the upcoming release! In this version, we've turbocharged the SQL query performance ⚡, making data retrieval lightning-fast. We've also tackled and squashed a pesky bug that was causing delays in user profile loading 🛠. Additionally, we've fortified the application with an enhanced authentication method, ensuring top-notch security with the addition of 🔒. Lastly, we've updated our third-party library dependencies, keeping things running smoothly and effectively with the latest 📚. Get ready for a faster, more secure, and seamless experience with this release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 The latest release brings transformative enhancements! First off, we've introduced a seamless user authentication flow, making it easier than ever for users to securely access their accounts. 💻 Additionally, we've optimized the performance of database queries, ensuring lightning-fast response times and a smoother overall experience. 🚄 And, last but not least, we've swiftly addressed a critical bug in the payment gateway integration, providing a seamless and reliable payment process for our users. 💳 Enjoy the new features and experience a more efficient and secure platform!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 The latest release brings transformative enhancements! First off, we've introduced a seamless user authentication flow, making it easier than ever for users to securely access their accounts. 💻 Additionally, we've optimized the performance of database queries, ensuring lightning-fast response times and a smoother overall experience. 🚄 And, last but not least, we've swiftly addressed a critical bug in the payment gateway integration, providing a seamless and reliable payment process for our users. 💳 Enjoy the new features and experience a more efficient and secure platform! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the release of version ${version} of ${product}! This release brings enhanced security with the addition of a new user authentication system, ensuring greater protection for our users' data. We've also supercharged the performance of the data processing module, making it faster and more efficient than ever. Additionally, the codebase has been refactored for improved maintainability, laying a strong foundation for future enhancements. These updates mark a significant leap forward in the functionality and security of ${product}, making it our most robust release yet. 🚀✨

The addition of the new user authentication system, alongside the performance improvements in the data processing module, reflects our commitment to delivering a reliable, secure, and high-performing experience for our users. This release sets the stage for a more secure, efficient, and maintainable ${product}, ensuring that our users can continue to rely on a top-notch experience with every interaction. With these enhancements, we look forward to empowering our users with an even more seamless and secure platform. ✨🔒
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the release of version ${version} of ${product}! This release brings enhanced security with the addition of a new user authentication system, ensuring greater protection for our users' data. We've also supercharged the performance of the data processing module, making it faster and more efficient than ever. Additionally, the codebase has been refactored for improved maintainability, laying a strong foundation for future enhancements. These updates mark a significant leap forward in the functionality and security of ${product}, making it our most robust release yet. 🚀✨

The addition of the new user authentication system, alongside the performance improvements in the data processing module, reflects our commitment to delivering a reliable, secure, and high-performing experience for our users. This release sets the stage for a more secure, efficient, and maintainable ${product}, ensuring that our users can continue to rely on a top-notch experience with every interaction. With these enhancements, we look forward to empowering our users with an even more seamless and secure platform. ✨🔒 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders `${version}` and `${product}` which should be replaced with actual values.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release! With added user authentication features 🛡️ and an improved dashboard UI with new widgets 🎨, the user experience is set to reach new heights. Additionally, we've optimized database queries for faster performance ⚡ and fixed critical security vulnerabilities 🔒 to ensure a secure and seamless experience. Stay tuned for the release to experience these enhancements firsthand!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release! With added user authentication features 🛡️ and an improved dashboard UI with new widgets 🎨, the user experience is set to reach new heights. Additionally, we've optimized database queries for faster performance ⚡ and fixed critical security vulnerabilities 🔒 to ensure a secure and seamless experience. Stay tuned for the release to experience these enhancements firsthand! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We've been hard at work to bring you an even more secure and performant experience! Our latest release includes a refactored authentication module, improved UI for a better user experience, and enhanced data analytics providing more accurate insights. We've also squashed critical bugs that were affecting stability and performance, and added support for multiple languages to enhance localization. Get ready to level up your experience with ${product} ${version}! 🛠️ 🎨 📈 🐛 🌐
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We've been hard at work to bring you an even more secure and performant experience! Our latest release includes a refactored authentication module, improved UI for a better user experience, and enhanced data analytics providing more accurate insights. We've also squashed critical bugs that were affecting stability and performance, and added support for multiple languages to enhance localization. Get ready to level up your experience with ${product} ${version}! 🛠️ 🎨 📈 🐛 🌐 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version}! This update brings 🌟 a fantastic new user authentication flow to enhance security and user experience. No more hassle 🐛 as we've also fixed a critical bug in the payment gateway, ensuring smoother transactions for everyone. And that's not all – we've also been hard at work 🛠️ refactoring the codebase to improve readability, making it easier for developers to dive in and contribute. Stay tuned for more updates as we continue to elevate your ${product} experience! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version}! This update brings 🌟 a fantastic new user authentication flow to enhance security and user experience. No more hassle 🐛 as we've also fixed a critical bug in the payment gateway, ensuring smoother transactions for everyone. And that's not all – we've also been hard at work 🛠️ refactoring the codebase to improve readability, making it easier for developers to dive in and contribute. Stay tuned for more updates as we continue to elevate your ${product} experience! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the latest update! 🚀

Our developers have been hard at work optimizing performance, resulting in up to 50% faster load times. You can expect a smoother and quicker experience with this significant boost in our codebase. 🛠️ Alongside this, we've been busy squashing various bugs 🐛🔨 to enhance overall stability and reliability, and our team greatly appreciates your patience and support.

In addition, the introduction of new design elements promises a more intuitive and visually appealing navigation experience, elevating the overall UI/UX. 🎨🖼️ We're excited for you to enjoy the more engaging interface! Our team can't wait to hear your thoughts on these updates. Happy updating and stay tuned for more exciting enhancements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the latest update! 🚀

Our developers have been hard at work optimizing performance, resulting in up to 50% faster load times. You can expect a smoother and quicker experience with this significant boost in our codebase. 🛠️ Alongside this, we've been busy squashing various bugs 🐛🔨 to enhance overall stability and reliability, and our team greatly appreciates your patience and support.

In addition, the introduction of new design elements promises a more intuitive and visually appealing navigation experience, elevating the overall UI/UX. 🎨🖼️ We're excited for you to enjoy the more engaging interface! Our team can't wait to hear your thoughts on these updates. Happy updating and stay tuned for more exciting enhancements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Supercharge your experience with the latest release! We've optimized database queries for faster loading times, squashed pesky bugs 🐞 for a smoother user experience, and enhanced security 🔒 with robust encryption standards. Not to mention, the UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation. Get ready to enjoy a faster, smoother, and more secure app!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Supercharge your experience with the latest release! We've optimized database queries for faster loading times, squashed pesky bugs 🐞 for a smoother user experience, and enhanced security 🔒 with robust encryption standards. Not to mention, the UI has received a spruce-up 🌟 with cleaner layouts and more intuitive navigation. Get ready to enjoy a faster, smoother, and more secure app! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an electrifying experience with the latest version! We've turbocharged our codebase for lightning-fast speeds, ensuring enhanced performance across the board. 🐛 Critical bugs have been squashed, boosting stability and reliability, while additional security measures have been implemented to safeguard your valuable data. 🔒 Explore exciting new functionalities that have been added to enhance your user experience, and benefit from optimized code that ensures maintainability and better performance. ✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an electrifying experience with the latest version! We've turbocharged our codebase for lightning-fast speeds, ensuring enhanced performance across the board. 🐛 Critical bugs have been squashed, boosting stability and reliability, while additional security measures have been implemented to safeguard your valuable data. 🔒 Explore exciting new functionalities that have been added to enhance your user experience, and benefit from optimized code that ensures maintainability and better performance. ✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've introduced a refreshed user interface with sleeker design elements, making the user experience more intuitive and visually appealing. Additionally, our core algorithms have been optimized, resulting in a significant 20% boost in processing speed, ensuring a snappier performance. We've also stepped up our security game with advanced encryption for data storage and communication, prioritizing the protection of user data. Furthermore, our latest integrations with platforms like Zapier and Slack enable seamless workflow automation, enhancing productivity.

🐞 On the bug fix front, we've addressed an issue causing the app to crash on startup under specific conditions, ensuring a smoother user experience. Additionally, we've updated the documentation to comprehensively cover the new features and changes, and improved accessibility across all major pages to make the application more inclusive to all users. 📝
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've introduced a refreshed user interface with sleeker design elements, making the user experience more intuitive and visually appealing. Additionally, our core algorithms have been optimized, resulting in a significant 20% boost in processing speed, ensuring a snappier performance. We've also stepped up our security game with advanced encryption for data storage and communication, prioritizing the protection of user data. Furthermore, our latest integrations with platforms like Zapier and Slack enable seamless workflow automation, enhancing productivity.

🐞 On the bug fix front, we've addressed an issue causing the app to crash on startup under specific conditions, ensuring a smoother user experience. Additionally, we've updated the documentation to comprehensively cover the new features and changes, and improved accessibility across all major pages to make the application more inclusive to all users. 📝 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! The user interface has undergone a major revamp 🌟, bringing a fresh and intuitive design. With performance enhancements ⚡, expect smoother and faster experiences. We've also tackled pesky bugs 🐞, improving overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And rest assured, we've included security updates 🔒 to keep your data safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! The user interface has undergone a major revamp 🌟, bringing a fresh and intuitive design. With performance enhancements ⚡, expect smoother and faster experiences. We've also tackled pesky bugs 🐞, improving overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And rest assured, we've included security updates 🔒 to keep your data safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Fixed an issue causing unexpected crashes when opening the app. 🐛 

Introduced a dark mode for better night-time usability. ✨ 

Enhanced the app’s startup time and improved network error handling. 🔧
[LLM FrontEnd][check_violation] checking violation for result: Fixed an issue causing unexpected crashes when opening the app. 🐛 

Introduced a dark mode for better night-time usability. ✨ 

Enhanced the app’s startup time and improved network error handling. 🔧 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introducing the latest release of ${product} ${version}! 🥳 This update brings a new user authentication system, enhancing security and reliability. We've also turbocharged the dashboard loading speed, providing a smoother user experience. Additionally, we've tackled the bug causing app crashes on older devices, ensuring a more stable performance for all users. Under the hood, database queries have been optimized to boost performance and reduce latency. Not to forget, we've patched vulnerabilities in the payment gateway for secure transactions and enhanced developer experience by refactoring the codebase for better readability and maintainability. Stay ahead with these exciting improvements! 🚀
[LLM FrontEnd][check_violation] checking violation for result: Introducing the latest release of ${product} ${version}! 🥳 This update brings a new user authentication system, enhancing security and reliability. We've also turbocharged the dashboard loading speed, providing a smoother user experience. Additionally, we've tackled the bug causing app crashes on older devices, ensuring a more stable performance for all users. Under the hood, database queries have been optimized to boost performance and reduce latency. Not to forget, we've patched vulnerabilities in the payment gateway for secure transactions and enhanced developer experience by refactoring the codebase for better readability and maintainability. Stay ahead with these exciting improvements! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${product} ${version}! This release brings a host of exciting updates to enhance your experience. We have fixed critical bugs in the payment system 🛠️, ensuring smoother transactions for all users, and have significantly improved the overall UI/UX for the dashboard 🎨, making navigation a breeze. Additionally, we have added support for multi-language 🈂️, allowing users to interact with the platform in their preferred language, and have enhanced performance for data loading, resulting in quicker access to information. We've also updated dependencies to the latest versions 📦 and incorporated detailed error messages 🐞 for easier debugging. The improved accessibility on all forms ♿ ensures an inclusive experience for all users, and the integration of new third-party APIs 🔗 extends the functionality of the platform. Furthermore, the implementation of the new user authentication flow 🔒 enhances security and usability.

For a detailed list of changes, please refer to the ${commitsName} and ${diffName}. Thank you for your continued support and feedback – we can't wait for you to try out these enhancements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${product} ${version}! This release brings a host of exciting updates to enhance your experience. We have fixed critical bugs in the payment system 🛠️, ensuring smoother transactions for all users, and have significantly improved the overall UI/UX for the dashboard 🎨, making navigation a breeze. Additionally, we have added support for multi-language 🈂️, allowing users to interact with the platform in their preferred language, and have enhanced performance for data loading, resulting in quicker access to information. We've also updated dependencies to the latest versions 📦 and incorporated detailed error messages 🐞 for easier debugging. The improved accessibility on all forms ♿ ensures an inclusive experience for all users, and the integration of new third-party APIs 🔗 extends the functionality of the platform. Furthermore, the implementation of the new user authentication flow 🔒 enhances security and usability.

For a detailed list of changes, please refer to the ${commitsName} and ${diffName}. Thank you for your continued support and feedback – we can't wait for you to try out these enhancements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${product}, ${version}, ${commitsName}, ${diffName}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the SQL query performance, ensuring faster data retrieval and smoother user experience. We've also resolved the pesky issue with user profile loading, providing a seamless browsing experience for our users. Additionally, we've updated third-party library dependencies to enhance the overall stability and efficiency of the application.

🔒 In this release, we are excited to introduce a new authentication method, bolstering the security measures and ensuring the protection of user data. These enhancements pave the way for a more reliable and secure environment, offering our users peace of mind while utilizing our platform. Thank you for your continuous support and feedback as we strive to deliver a more optimized and secure ${product} experience.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings significant improvements to the SQL query performance, ensuring faster data retrieval and smoother user experience. We've also resolved the pesky issue with user profile loading, providing a seamless browsing experience for our users. Additionally, we've updated third-party library dependencies to enhance the overall stability and efficiency of the application.

🔒 In this release, we are excited to introduce a new authentication method, bolstering the security measures and ensuring the protection of user data. These enhancements pave the way for a more reliable and secure environment, offering our users peace of mind while utilizing our platform. Thank you for your continuous support and feedback as we strive to deliver a more optimized and secure ${product} experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholder variables `${product}` and `${version}` which should have been replaced with actual values.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an amazing update! With the latest release, we've introduced a seamless user authentication flow, making it easier than ever for users to access their accounts. 🗝️ We've also turbocharged the performance of database queries, ensuring lightning-fast response times for all your data needs. And that's not all - we've squashed a critical bug in the payment gateway integration, providing a smooth and secure transaction experience for our users. Upgrade now and experience the difference!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an amazing update! With the latest release, we've introduced a seamless user authentication flow, making it easier than ever for users to access their accounts. 🗝️ We've also turbocharged the performance of database queries, ensuring lightning-fast response times for all your data needs. And that's not all - we've squashed a critical bug in the payment gateway integration, providing a smooth and secure transaction experience for our users. Upgrade now and experience the difference! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}! This release introduces a brand new user authentication system 🚀, providing enhanced security for our users. Additionally, we've made significant improvements ⚡️ to the performance of the data processing module, ensuring a lightning-fast experience for handling data. Moreover, we've refactored the entire codebase 🛠 to enhance maintainability, making it easier than ever to manage and update the code. These updates pave the way for a smoother and more secure experience for all our users. For more details, check out the complete list of changes in the ${commitsName} and the detailed diff of the changes in the ${diffName}. 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}! This release introduces a brand new user authentication system 🚀, providing enhanced security for our users. Additionally, we've made significant improvements ⚡️ to the performance of the data processing module, ensuring a lightning-fast experience for handling data. Moreover, we've refactored the entire codebase 🛠 to enhance maintainability, making it easier than ever to manage and update the code. These updates pave the way for a smoother and more secure experience for all our users. For more details, check out the complete list of changes in the ${commitsName} and the detailed diff of the changes in the ${diffName}. 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${product}, ${version}, ${commitsName}, ${diffName}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an amazing new release! In this version, we've bolstered security with new user authentication features 🛡️ and fixed critical vulnerabilities 🔒 for a safer experience. The dashboard UI has been spruced up with new widgets 🎨, and database queries have been optimized for faster performance ⚡. Plus, we've added extra test cases 🧪 to ensure robust quality assurance. Stay tuned for the full release!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an amazing new release! In this version, we've bolstered security with new user authentication features 🛡️ and fixed critical vulnerabilities 🔒 for a safer experience. The dashboard UI has been spruced up with new widgets 🎨, and database queries have been optimized for faster performance ⚡. Plus, we've added extra test cases 🧪 to ensure robust quality assurance. Stay tuned for the full release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version} of ${product}! In this release, we've made significant improvements to enhance security and performance by refactoring the authentication module. Additionally, we've updated the UI for a better user experience, improved data analytics for more accurate insights, and fixed critical bugs affecting stability and performance. Furthermore, we've enhanced localization support for multiple languages, making ${product} more accessible to a global audience. Stay tuned for a more secure, efficient, and user-friendly ${product} experience!

The commits in the release are in ${commitsName}, and the diff of the changes are in ${diffName}. Thank you for being a part of our journey as we continue to innovate and improve ${product}! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version} of ${product}! In this release, we've made significant improvements to enhance security and performance by refactoring the authentication module. Additionally, we've updated the UI for a better user experience, improved data analytics for more accurate insights, and fixed critical bugs affecting stability and performance. Furthermore, we've enhanced localization support for multiple languages, making ${product} more accessible to a global audience. Stay tuned for a more secure, efficient, and user-friendly ${product} experience!

The commits in the release are in ${commitsName}, and the diff of the changes are in ${diffName}. Thank you for being a part of our journey as we continue to innovate and improve ${product}! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${version}, ${product}, ${commitsName}, ${diffName}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for users to access ${product}. Now, users can seamlessly create accounts and log in with enhanced authentication features. Additionally, we've squashed a critical bug in the payment gateway, ensuring a smooth and reliable transaction process. These changes are part of our ongoing commitment to providing a seamless and secure experience for our users. Go ahead and dive into the ${version} release to explore these exciting updates! 🌟

🛠️ Dive into the ${version} release to explore the latest enhancements and bug fixes. We're constantly refining and improving the codebase to elevate the overall stability and performance of ${product}. Our latest update includes a refactor of the codebase for improved readability, laying the foundation for future enhancements. With these changes, we're dedicated to delivering a more streamlined and maintainable codebase. Stay tuned for more exciting updates and improvements in the upcoming releases! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for users to access ${product}. Now, users can seamlessly create accounts and log in with enhanced authentication features. Additionally, we've squashed a critical bug in the payment gateway, ensuring a smooth and reliable transaction process. These changes are part of our ongoing commitment to providing a seamless and secure experience for our users. Go ahead and dive into the ${version} release to explore these exciting updates! 🌟

🛠️ Dive into the ${version} release to explore the latest enhancements and bug fixes. We're constantly refining and improving the codebase to elevate the overall stability and performance of ${product}. Our latest update includes a refactor of the codebase for improved readability, laying the foundation for future enhancements. With these changes, we're dedicated to delivering a more streamlined and maintainable codebase. Stay tuned for more exciting updates and improvements in the upcoming releases! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of version ${version} of ${product}! 🚀

This update brings significant performance improvements, with a boost in optimization that reduces load times by up to 50% 🛠️. Say goodbye to sluggish experiences and enjoy a smoother, faster interface.

In addition, we've been hard at work squashing pesky bugs 🐛🔨, enhancing overall stability and reliability. We appreciate your patience as we strive to deliver a seamless user experience.

The release also includes new UI/UX enhancements 🎨🖼️, making navigation more intuitive and the interface more aesthetically pleasing. Get ready for an engaging and visually appealing experience!

Our team can't wait to hear your feedback on these exciting upgrades. Happy updating, and enjoy the improved ${product} experience! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of version ${version} of ${product}! 🚀

This update brings significant performance improvements, with a boost in optimization that reduces load times by up to 50% 🛠️. Say goodbye to sluggish experiences and enjoy a smoother, faster interface.

In addition, we've been hard at work squashing pesky bugs 🐛🔨, enhancing overall stability and reliability. We appreciate your patience as we strive to deliver a seamless user experience.

The release also includes new UI/UX enhancements 🎨🖼️, making navigation more intuitive and the interface more aesthetically pleasing. Get ready for an engaging and visually appealing experience!

Our team can't wait to hear your feedback on these exciting upgrades. Happy updating, and enjoy the improved ${product} experience! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${version} and ${product}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've supercharged the app's performance by optimizing database queries, resulting in faster loading times. We've also squashed several pesky bugs that were causing unexpected crashes, ensuring a smoother user experience. To enhance security, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! ⚡️ 🐞 🔒 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've supercharged the app's performance by optimizing database queries, resulting in faster loading times. We've also squashed several pesky bugs that were causing unexpected crashes, ensuring a smoother user experience. To enhance security, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! ⚡️ 🐞 🔒 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛
- 🔒 Security: Implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Added exciting new functionalities to enhance your user experience ✨
- 🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️

We've supercharged our codebase to deliver lightning-fast speeds, ensuring a smoother and more responsive user experience. Additionally, we've eliminated critical bugs, enhancing system reliability and stability. Our commitment to security remains unwavering, with the implementation of extra measures to protect your valuable data. We've also introduced thrilling new functionalities that promise to elevate your user experience. Furthermore, our codebase has been optimized for maintainability and improved performance, setting the stage for a more efficient and streamlined operation.
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀
- 🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛
- 🔒 Security: Implemented additional security measures to safeguard your data 🔒
- ✨ New Features: Added exciting new functionalities to enhance your user experience ✨
- 🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️

We've supercharged our codebase to deliver lightning-fast speeds, ensuring a smoother and more responsive user experience. Additionally, we've eliminated critical bugs, enhancing system reliability and stability. Our commitment to security remains unwavering, with the implementation of extra measures to protect your valuable data. We've also introduced thrilling new functionalities that promise to elevate your user experience. Furthermore, our codebase has been optimized for maintainability and improved performance, setting the stage for a more efficient and streamlined operation. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! 🔥 This release brings an array of exciting updates to enhance your experience. 🌈

🛠️ We've revamped the UI for a sleeker design and enhanced usability, ensuring a more enjoyable interface. ⚡ Additionally, we've optimized core algorithms, leading to a 20% improvement in processing speed and delivering a swift user experience. 🔒 Enhanced security measures have been implemented, including advanced encryption for data storage and communication, ensuring the utmost protection of user data. 🌟 Furthermore, we've included seamless integrations with popular third-party services like Zapier and Slack, empowering better workflow automation and productivity.

In addition, we've squashed a pesky bug causing the app to crash on startup under certain conditions, along with comprehensive documentation updates and improved accessibility on all major pages, making the application more inclusive. 🐛📝♿ Thank you for being part of our journey, and we can't wait for you to experience these fantastic enhancements! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! 🔥 This release brings an array of exciting updates to enhance your experience. 🌈

🛠️ We've revamped the UI for a sleeker design and enhanced usability, ensuring a more enjoyable interface. ⚡ Additionally, we've optimized core algorithms, leading to a 20% improvement in processing speed and delivering a swift user experience. 🔒 Enhanced security measures have been implemented, including advanced encryption for data storage and communication, ensuring the utmost protection of user data. 🌟 Furthermore, we've included seamless integrations with popular third-party services like Zapier and Slack, empowering better workflow automation and productivity.

In addition, we've squashed a pesky bug causing the app to crash on startup under certain conditions, along with comprehensive documentation updates and improved accessibility on all major pages, making the application more inclusive. 🐛📝♿ Thank you for being part of our journey, and we can't wait for you to experience these fantastic enhancements! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update with ${product} ${version}! 🌟 We've completely overhauled the user interface, delivering a fresh and intuitive design that's bound to enhance your experience. Experience smoother and faster interactions with our performance enhancements ⚡, and say goodbye to pesky bugs 🐞 with our improved stability and functionality. Need easy data management? We've got you covered with a new feature for exporting data 📊. Plus, we've beefed up security 🔒 to keep your data safe. Upgrade now and enjoy a seamless, more secure experience with ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update with ${product} ${version}! 🌟 We've completely overhauled the user interface, delivering a fresh and intuitive design that's bound to enhance your experience. Experience smoother and faster interactions with our performance enhancements ⚡, and say goodbye to pesky bugs 🐞 with our improved stability and functionality. Need easy data management? We've got you covered with a new feature for exporting data 📊. Plus, we've beefed up security 🔒 to keep your data safe. Upgrade now and enjoy a seamless, more secure experience with ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Fixed the issue causing unexpected crashes when opening the app 🐛

- Introduced a dark mode for better night-time usability ✨

- Enhanced the app’s startup time and improved network error handling 🔧
[LLM FrontEnd][check_violation] checking violation for result: - Fixed the issue causing unexpected crashes when opening the app 🐛

- Introduced a dark mode for better night-time usability ✨

- Enhanced the app’s startup time and improved network error handling 🔧 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introducing a new user authentication system for enhanced security and reliability. We've also optimized the dashboard loading speed, ensuring a smoother user experience. Additionally, we've addressed a bug causing app crashes on older devices, and refined database queries to boost performance and reduce latency. Our latest release also includes security patches for the payment gateway, guaranteeing secure transactions. Lastly, we've refactored the codebase for improved readability and maintainability. 🚀💡🐛📈🔒👨‍💻
[LLM FrontEnd][check_violation] checking violation for result: Introducing a new user authentication system for enhanced security and reliability. We've also optimized the dashboard loading speed, ensuring a smoother user experience. Additionally, we've addressed a bug causing app crashes on older devices, and refined database queries to boost performance and reduce latency. Our latest release also includes security patches for the payment gateway, guaranteeing secure transactions. Lastly, we've refactored the codebase for improved readability and maintainability. 🚀💡🐛📈🔒👨‍💻 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to announce the upcoming release of ${version} of ${product}! This release includes critical bug fixes in the payment system 🛠️ and an improved UI/UX for the dashboard 🎨, enhancing the overall user experience. We've also added support for multi-language 🈂️ and made significant performance improvements for data loading 🚀. Additionally, detailed error messages have been added for easier debugging 🐞 and accessibility has been improved across all forms ♿. We've integrated new third-party APIs for extended functionality and implemented a new user authentication flow to enhance security and user experience 🔒. The latest release of ${product} is packed with exciting features and improvements, ensuring a smoother and more powerful user experience.

Commits: ${commitsName}
Diff: ${diffName}
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the upcoming release of ${version} of ${product}! This release includes critical bug fixes in the payment system 🛠️ and an improved UI/UX for the dashboard 🎨, enhancing the overall user experience. We've also added support for multi-language 🈂️ and made significant performance improvements for data loading 🚀. Additionally, detailed error messages have been added for easier debugging 🐞 and accessibility has been improved across all forms ♿. We've integrated new third-party APIs for extended functionality and implemented a new user authentication flow to enhance security and user experience 🔒. The latest release of ${product} is packed with exciting features and improvements, ensuring a smoother and more powerful user experience.

Commits: ${commitsName}
Diff: ${diffName} and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output violates the rules because it contains placeholders (${version}, ${product}, ${commitsName}, ${diffName}) that should have been replaced with actual values.
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}! This release brings significant performance enhancements, with improved SQL query performance ⚡ and a fix for the user profile loading issue 🛠. We've also updated third-party library dependencies 📚 to ensure a seamless experience for our users. Additionally, a new authentication method has been added to enhance security and provide peace of mind for our users. Check out the full details in the commit history ${commitsName} and the detailed code changes in the diff ${diffName}.

🚀 With these improvements, we're confident that this release will elevate the user experience and take ${product} to the next level of reliability and security. Keep an eye out for the official release announcement, and as always, thank you for your continued support and feedback! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the upcoming release of ${product} ${version}! This release brings significant performance enhancements, with improved SQL query performance ⚡ and a fix for the user profile loading issue 🛠. We've also updated third-party library dependencies 📚 to ensure a seamless experience for our users. Additionally, a new authentication method has been added to enhance security and provide peace of mind for our users. Check out the full details in the commit history ${commitsName} and the detailed code changes in the diff ${diffName}.

🚀 With these improvements, we're confident that this release will elevate the user experience and take ${product} to the next level of reliability and security. Keep an eye out for the official release announcement, and as always, thank you for your continued support and feedback! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rules because it contains placeholders (${product}, ${version}, ${commitsName}, ${diffName}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 The latest ${product} release is here, packed with exciting new features and improvements! We've introduced a seamless user authentication flow, ensuring a secure and user-friendly experience for all our users. Additionally, we've optimized the performance of database queries, resulting in faster loading times and smoother navigation throughout the application. And that's not all - we've also squashed a critical bug in the payment gateway integration, ensuring a seamless and reliable payment process for our users. Get ready to enjoy a more seamless and efficient experience with ${product}! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 The latest ${product} release is here, packed with exciting new features and improvements! We've introduced a seamless user authentication flow, ensuring a secure and user-friendly experience for all our users. Additionally, we've optimized the performance of database queries, resulting in faster loading times and smoother navigation throughout the application. And that's not all - we've also squashed a critical bug in the payment gateway integration, ensuring a seamless and reliable payment process for our users. Get ready to enjoy a more seamless and efficient experience with ${product}! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${product}) that have not been replaced with actual values.
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to announce the release of ${version}! This release introduces a powerful new user authentication system, enhancing security for our users. This feature brings peace of mind to our community by providing robust protection against unauthorized access. Additionally, we've turbocharged the performance of the data processing module, ensuring lightning-fast processing for all your data needs. We've also put in the effort to refactor the codebase, making it more maintainable and efficient. These improvements pave the way for a smoother and more secure experience for all our users. For a detailed overview of the changes, check out the ${diffName}. Let's embrace these exciting changes and stay tuned for more updates! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the release of ${version}! This release introduces a powerful new user authentication system, enhancing security for our users. This feature brings peace of mind to our community by providing robust protection against unauthorized access. Additionally, we've turbocharged the performance of the data processing module, ensuring lightning-fast processing for all your data needs. We've also put in the effort to refactor the codebase, making it more maintainable and efficient. These improvements pave the way for a smoother and more secure experience for all our users. For a detailed overview of the changes, check out the ${diffName}. Let's embrace these exciting changes and stay tuned for more updates! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an exciting update! We've beefed up security with new user authentication features 🛡️ and fixed critical vulnerabilities 🔒. The dashboard now sports a fresh look with improved UI and new widgets 🎨, while under the hood, database queries have been turbocharged for faster performance ⚡. In addition, we've bolstered our QA with extra test cases for robust testing 🧪. Stay tuned for the upcoming release ${version} of ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an exciting update! We've beefed up security with new user authentication features 🛡️ and fixed critical vulnerabilities 🔒. The dashboard now sports a fresh look with improved UI and new widgets 🎨, while under the hood, database queries have been turbocharged for faster performance ⚡. In addition, we've bolstered our QA with extra test cases for robust testing 🧪. Stay tuned for the upcoming release ${version} of ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders `${version}` and `${product}` which should be replaced with actual values.
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an awesome new release of ${product} version ${version}! We've revamped the authentication module to tighten security measures and boost performance, ensuring a smoother and safer experience for all users. The updated UI promises a more delightful and seamless user experience, while our improved data analytics deliver even more precise insights for informed decision-making. We've also squashed critical bugs that were causing stability and performance issues, making ${product} more reliable than ever. Plus, with enhanced localization support for multiple languages, language barriers are a thing of the past. Get ready to elevate your ${product} experience!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an awesome new release of ${product} version ${version}! We've revamped the authentication module to tighten security measures and boost performance, ensuring a smoother and safer experience for all users. The updated UI promises a more delightful and seamless user experience, while our improved data analytics deliver even more precise insights for informed decision-making. We've also squashed critical bugs that were causing stability and performance issues, making ${product} more reliable than ever. Plus, with enhanced localization support for multiple languages, language barriers are a thing of the past. Get ready to elevate your ${product} experience! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the release of ${version} of ${product}! This release introduces a brand new user authentication flow to enhance the security and user experience. Now, users can enjoy a seamless and secure authentication process, providing peace of mind and reliability. Additionally, a critical bug in the payment gateway has been resolved, ensuring smooth and error-free transactions for our valued users. We're committed to delivering a secure and efficient platform, and these changes reflect our dedication to creating a reliable and user-friendly experience.

The team has also conducted codebase refactoring for improved readability, laying the foundation for future enhancements and optimizations. Our focus on streamlining and maintaining code quality remains unwavering, ensuring that our product continues to evolve with excellence. Thank you for your ongoing support, and we're excited for you to experience the latest improvements in ${product}! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the release of ${version} of ${product}! This release introduces a brand new user authentication flow to enhance the security and user experience. Now, users can enjoy a seamless and secure authentication process, providing peace of mind and reliability. Additionally, a critical bug in the payment gateway has been resolved, ensuring smooth and error-free transactions for our valued users. We're committed to delivering a secure and efficient platform, and these changes reflect our dedication to creating a reliable and user-friendly experience.

The team has also conducted codebase refactoring for improved readability, laying the foundation for future enhancements and optimizations. Our focus on streamlining and maintaining code quality remains unwavering, ensuring that our product continues to evolve with excellence. Thank you for your ongoing support, and we're excited for you to experience the latest improvements in ${product}! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 This release brings an exciting update with significant optimizations to our performance codebase, resulting in up to 50% faster load times! Your experience will be smoother and more efficient, allowing you to accomplish tasks with ease. 🛠️ Moreover, various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. We appreciate your patience as we worked to deliver this bug-squashing update. 🐛🔨 Additionally, the introduction of new design elements will make navigation more intuitive and aesthetically pleasing, providing you with a more engaging interface. 🎨🖼️ Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 This release brings an exciting update with significant optimizations to our performance codebase, resulting in up to 50% faster load times! Your experience will be smoother and more efficient, allowing you to accomplish tasks with ease. 🛠️ Moreover, various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. We appreciate your patience as we worked to deliver this bug-squashing update. 🐛🔨 Additionally, the introduction of new design elements will make navigation more intuitive and aesthetically pleasing, providing you with a more engaging interface. 🎨🖼️ Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app performance ⚡️ with optimized database queries for faster loading times
- Squashed pesky bugs 🐞, ensuring a smoother user experience
- Implemented robust encryption standards for enhanced security 🔒 of all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation to make finding what you need easier. Enjoy the enhanced experience! 🚀

[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app performance ⚡️ with optimized database queries for faster loading times
- Squashed pesky bugs 🐞, ensuring a smoother user experience
- Implemented robust encryption standards for enhanced security 🔒 of all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation to make finding what you need easier. Enjoy the enhanced experience! 🚀
 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 With enhanced performance, we've turbocharged our codebase for lightning-fast speeds, making your experience smoother and more efficient. 🐛 We've also squashed critical bugs to improve stability and reliability, ensuring a seamless user experience. 🔒 In this release, we've implemented additional security measures to safeguard your data, prioritizing the protection of your information. ✨ Additionally, we've added exciting new functionalities to enhance your user experience, bringing more versatility and convenience to your interactions. 🛠️ Our codebase has been optimized for maintainability and better performance, ensuring a solid foundation for future developments.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 With enhanced performance, we've turbocharged our codebase for lightning-fast speeds, making your experience smoother and more efficient. 🐛 We've also squashed critical bugs to improve stability and reliability, ensuring a seamless user experience. 🔒 In this release, we've implemented additional security measures to safeguard your data, prioritizing the protection of your information. ✨ Additionally, we've added exciting new functionalities to enhance your user experience, bringing more versatility and convenience to your interactions. 🛠️ Our codebase has been optimized for maintainability and better performance, ensuring a solid foundation for future developments. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We're thrilled to announce the release of ${version} of ${product}! 🚀 This update brings a fresh, modern look to our user interface, delivering a more intuitive and polished experience for our users. In addition, we've turbocharged the core algorithms, resulting in a 20% boost in processing speed, making ${product} faster and more efficient than ever. We've also placed a strong emphasis on security, implementing advanced encryption measures to safeguard user data during storage and communication. 

Furthermore, this release introduces exciting new integrations with popular third-party services like Zapier and Slack, empowering users to seamlessly automate their workflows. On the bug fixes and improvements front, we've resolved an issue causing the app to crash under specific conditions, updated the documentation to comprehensively cover the new features, and enhanced accessibility across all major pages for a more inclusive user experience. We can't wait for you to explore the latest enhancements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We're thrilled to announce the release of ${version} of ${product}! 🚀 This update brings a fresh, modern look to our user interface, delivering a more intuitive and polished experience for our users. In addition, we've turbocharged the core algorithms, resulting in a 20% boost in processing speed, making ${product} faster and more efficient than ever. We've also placed a strong emphasis on security, implementing advanced encryption measures to safeguard user data during storage and communication. 

Furthermore, this release introduces exciting new integrations with popular third-party services like Zapier and Slack, empowering users to seamlessly automate their workflows. On the bug fixes and improvements front, we've resolved an issue causing the app to crash under specific conditions, updated the documentation to comprehensively cover the new features, and enhanced accessibility across all major pages for a more inclusive user experience. We can't wait for you to explore the latest enhancements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The reason for the violation is that the placeholders `${version}` and `${product}` have not been replaced with actual values. This makes the announcement incomplete and unprofessional.
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: The upcoming release ${version} of ${product} is packed with fantastic updates! 🚀 We've completely revamped the user interface 🌟 to bring you a fresh and intuitive design, ensuring a seamless user experience. Our performance enhancements ⚡ will guarantee smoother and faster interactions, while the bug fixes 🐞 will improve overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. Rest assured, our security updates 🔒 will keep your data safe. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: The upcoming release ${version} of ${product} is packed with fantastic updates! 🚀 We've completely revamped the user interface 🌟 to bring you a fresh and intuitive design, ensuring a seamless user experience. Our performance enhancements ⚡ will guarantee smoother and faster interactions, while the bug fixes 🐞 will improve overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. Rest assured, our security updates 🔒 will keep your data safe. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Fixed the issue causing unexpected crashes when opening the app, ensuring a smoother user experience. 🐛

- Introduced a dark mode for better night-time usability, giving users more control over their app experience. ✨

- Enhanced the app’s startup time and improved network error handling for a faster and more reliable usage. 🔧
[LLM FrontEnd][check_violation] checking violation for result: - Fixed the issue causing unexpected crashes when opening the app, ensuring a smoother user experience. 🐛

- Introduced a dark mode for better night-time usability, giving users more control over their app experience. ✨

- Enhanced the app’s startup time and improved network error handling for a faster and more reliable usage. 🔧 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to enhance security and reliability, ensuring a safer user experience. This feature update aims to provide an advanced level of protection for user data.

Additionally, we've improved the loading speed on the dashboard, making the overall user experience smoother. The optimization efforts focused on refining the database queries to boost performance and reduce latency, ensuring a more responsive platform.

Among the key highlights, we've also fixed the issue causing app crashes on older devices and patched vulnerabilities in the payment gateway to ensure secure transactions. Furthermore, the developer experience has been enhanced by refactoring the codebase for better readability and maintainability. These changes are designed to provide a more stable and efficient platform overall.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability, ensuring a safer user experience. This feature update aims to provide an advanced level of protection for user data.

Additionally, we've improved the loading speed on the dashboard, making the overall user experience smoother. The optimization efforts focused on refining the database queries to boost performance and reduce latency, ensuring a more responsive platform.

Among the key highlights, we've also fixed the issue causing app crashes on older devices and patched vulnerabilities in the payment gateway to ensure secure transactions. Furthermore, the developer experience has been enhanced by refactoring the codebase for better readability and maintainability. These changes are designed to provide a more stable and efficient platform overall. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Fixed critical bugs in the payment system and added detailed error messages for easier debugging, ensuring a smoother and more reliable payment experience. The overall UI/UX for the dashboard has been improved, providing a more visually appealing and user-friendly interface. Additionally, support for multi-language has been added, enhancing accessibility for a more diverse user base. We have also enhanced performance for data loading, resulting in faster and more efficient processing. Integration of new third-party APIs has extended the functionality, offering an enriched user experience. Lastly, the new user authentication flow has been implemented, ensuring secure access to the platform. These updates aim to provide a seamless and enhanced experience for all users. 🚀🎨🐞🔗🔒🈂️

- Updated dependencies to the latest versions and improved accessibility on all forms, ensuring that the platform is up-to-date and accessible to all users. These enhancements contribute to a more reliable and efficient system. 📦♿
[LLM FrontEnd][check_violation] checking violation for result: - Fixed critical bugs in the payment system and added detailed error messages for easier debugging, ensuring a smoother and more reliable payment experience. The overall UI/UX for the dashboard has been improved, providing a more visually appealing and user-friendly interface. Additionally, support for multi-language has been added, enhancing accessibility for a more diverse user base. We have also enhanced performance for data loading, resulting in faster and more efficient processing. Integration of new third-party APIs has extended the functionality, offering an enriched user experience. Lastly, the new user authentication flow has been implemented, ensuring secure access to the platform. These updates aim to provide a seamless and enhanced experience for all users. 🚀🎨🐞🔗🔒🈂️

- Updated dependencies to the latest versions and improved accessibility on all forms, ensuring that the platform is up-to-date and accessible to all users. These enhancements contribute to a more reliable and efficient system. 📦♿ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to release ${version} of ${product} with some exciting improvements and fixes! We've significantly boosted SQL query performance ⚡, making data retrieval lightning fast. We also squashed a pesky bug that was causing delays in user profile loading 🛠. Additionally, we've added a new authentication method to enhance security 🔒. Our commitment to providing a seamless user experience is reflected in these updates. Check out the full list of changes in the ${commitsName} and the detailed diff in ${diffName}. Happy coding!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to release ${version} of ${product} with some exciting improvements and fixes! We've significantly boosted SQL query performance ⚡, making data retrieval lightning fast. We also squashed a pesky bug that was causing delays in user profile loading 🛠. Additionally, we've added a new authentication method to enhance security 🔒. Our commitment to providing a seamless user experience is reflected in these updates. Check out the full list of changes in the ${commitsName} and the detailed diff in ${diffName}. Happy coding! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an amazing update! In this release, we've introduced a seamless user authentication flow to enhance security and user experience. You can now enjoy a smoother login process and better protection for your account. 🛡️

We've also turbocharged the performance of database queries, making everything faster and more efficient. Say goodbye to long loading times and hello to snappy responsiveness! ⚡

And that's not all – we've fixed a critical bug in the payment gateway integration, ensuring that transactions are processed smoothly and securely. No more hiccups during your payments! 💳

Enjoy these transformative enhancements and make the most of our latest release!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an amazing update! In this release, we've introduced a seamless user authentication flow to enhance security and user experience. You can now enjoy a smoother login process and better protection for your account. 🛡️

We've also turbocharged the performance of database queries, making everything faster and more efficient. Say goodbye to long loading times and hello to snappy responsiveness! ⚡

And that's not all – we've fixed a critical bug in the payment gateway integration, ensuring that transactions are processed smoothly and securely. No more hiccups during your payments! 💳

Enjoy these transformative enhancements and make the most of our latest release! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to introduce the ${version} release of ${product}! This release brings an exciting set of new features and enhancements that will elevate your experience. We've added a new user authentication system to bolster security and ensure peace of mind for all our users. Additionally, the performance of the data processing module has been significantly improved, empowering you to process data with lightning speed. We've also refactored the codebase for improved maintainability, laying the groundwork for seamless future enhancements. Explore the full scope of these changes in the commits (${commitsName}) and the detailed diff (${diffName}). Let's level up together! 🚀✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to introduce the ${version} release of ${product}! This release brings an exciting set of new features and enhancements that will elevate your experience. We've added a new user authentication system to bolster security and ensure peace of mind for all our users. Additionally, the performance of the data processing module has been significantly improved, empowering you to process data with lightning speed. We've also refactored the codebase for improved maintainability, laying the groundwork for seamless future enhancements. Explore the full scope of these changes in the commits (${commitsName}) and the detailed diff (${diffName}). Let's level up together! 🚀✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders (${version}, ${product}, ${commitsName}, ${diffName}) that should have been replaced with actual values.
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release is packed with exciting new features and improvements to enhance your experience. We've fortified the application with new user authentication features 🛡️ to ensure the security of your data. Additionally, the dashboard UI has received a makeover with vibrant new widgets 🎨, providing a more intuitive and visually appealing user interface.

Under the hood, we've been hard at work optimizing database queries for lightning-fast performance ⚡, ensuring that your interactions with the application remain seamless and responsive. Our commitment to your security is unwavering, and we've swiftly addressed critical vulnerabilities 🔒 to uphold the integrity of your data. To top it off, we've bolstered our QA process with additional test cases 🧪, enhancing the robustness of our testing procedures for a more reliable product. Get ready to elevate your experience with ${product} ${version}!

The full list of changes can be found in ${commitsName} and ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release is packed with exciting new features and improvements to enhance your experience. We've fortified the application with new user authentication features 🛡️ to ensure the security of your data. Additionally, the dashboard UI has received a makeover with vibrant new widgets 🎨, providing a more intuitive and visually appealing user interface.

Under the hood, we've been hard at work optimizing database queries for lightning-fast performance ⚡, ensuring that your interactions with the application remain seamless and responsive. Our commitment to your security is unwavering, and we've swiftly addressed critical vulnerabilities 🔒 to uphold the integrity of your data. To top it off, we've bolstered our QA process with additional test cases 🧪, enhancing the robustness of our testing procedures for a more reliable product. Get ready to elevate your experience with ${product} ${version}!

The full list of changes can be found in ${commitsName} and ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming ${version} release of ${product}! This release brings a host of exciting new features and improvements, including a ⚙️ refactored authentication module to optimize both security and performance. Users can look forward to a fresh and modern 🎨 UI that promises an enhanced experience, as well as improved 📈 data analytics for even more accurate insights. Additionally, we've been hard at work addressing critical 🐛 bugs, ensuring stability and boosting overall performance. As if that weren't enough, we've expanded 🌐 localization support to cater to our diverse, global user base. Get ready to elevate your ${product} experience to new heights!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming ${version} release of ${product}! This release brings a host of exciting new features and improvements, including a ⚙️ refactored authentication module to optimize both security and performance. Users can look forward to a fresh and modern 🎨 UI that promises an enhanced experience, as well as improved 📈 data analytics for even more accurate insights. Additionally, we've been hard at work addressing critical 🐛 bugs, ensuring stability and boosting overall performance. As if that weren't enough, we've expanded 🌐 localization support to cater to our diverse, global user base. Get ready to elevate your ${product} experience to new heights! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to introduce a brand new user authentication flow, making it easier and more secure for users to access our platform. No more hassle, just smooth sailing! Additionally, we've squashed a critical bug in the payment gateway, ensuring a seamless and reliable transaction experience for all our users. Stay tuned for an even more amazing ${product} experience! 🎉✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to introduce a brand new user authentication flow, making it easier and more secure for users to access our platform. No more hassle, just smooth sailing! Additionally, we've squashed a critical bug in the payment gateway, ensuring a seamless and reliable transaction experience for all our users. Stay tuned for an even more amazing ${product} experience! 🎉✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The chatbot output violates the rule because it contains an unresolved placeholder `${product}`.
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of version ${version} of ${product}! 🚀

This release includes a significant **Optimization Boost 🛠️**, with major improvements to our performance codebase resulting in up to 50% reduction in load times. Get ready for a smoother and faster experience!

We've also been busy **Bug Squashing 🐛🔨**, identifying and eliminating various pesky bugs to enhance the overall stability and reliability of the platform. Your patience is much appreciated!

Additionally, we've introduced **UI/UX Enhancements 🎨🖼️** to make navigation more intuitive and aesthetically pleasing. Say hello to a more engaging interface with the new design elements.

Our team is eager to hear your feedback on these exciting upgrades. Happy updating and stay tuned for more! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of version ${version} of ${product}! 🚀

This release includes a significant **Optimization Boost 🛠️**, with major improvements to our performance codebase resulting in up to 50% reduction in load times. Get ready for a smoother and faster experience!

We've also been busy **Bug Squashing 🐛🔨**, identifying and eliminating various pesky bugs to enhance the overall stability and reliability of the platform. Your patience is much appreciated!

Additionally, we've introduced **UI/UX Enhancements 🎨🖼️** to make navigation more intuitive and aesthetically pleasing. Say hello to a more engaging interface with the new design elements.

Our team is eager to hear your feedback on these exciting upgrades. Happy updating and stay tuned for more! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced-up UI 🌟 with cleaner layouts and more intuitive navigation to ease user experience. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced-up UI 🌟 with cleaner layouts and more intuitive navigation to ease user experience. Enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Version ${version} of ${product} is here, and it's all about boosting performance and stability! We've turbocharged our codebase for lightning-fast speeds, squashed critical bugs to improve reliability, and implemented additional security measures to safeguard your data. But that's not all - we've also added exciting new functionalities to enhance your user experience and optimized the code for better performance and maintainability. Get ready to experience a smoother and more secure ${product} with these incredible enhancements! Check out the full list of changes in the commits (${commitsName}) and the detailed diff (${diffName}). Update now and feel the difference!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Version ${version} of ${product} is here, and it's all about boosting performance and stability! We've turbocharged our codebase for lightning-fast speeds, squashed critical bugs to improve reliability, and implemented additional security measures to safeguard your data. But that's not all - we've also added exciting new functionalities to enhance your user experience and optimized the code for better performance and maintainability. Get ready to experience a smoother and more secure ${product} with these incredible enhancements! Check out the full list of changes in the commits (${commitsName}) and the detailed diff (${diffName}). Update now and feel the difference! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In the upcoming release of ${version} of ${product}, we're thrilled to introduce a revamped user interface with sleeker design and enhanced usability. Our core algorithms have undergone optimization, resulting in a 20% boost in processing speed, ensuring a snappier user experience. For improved security, advanced encryption has been implemented for data storage and communication, offering enhanced protection for user data. Additionally, we're excited to unveil seamless integrations with popular third-party services like Zapier and Slack, empowering users with better workflow automation.

We've also fixed an issue causing the app to crash on startup under certain conditions and updated the documentation to comprehensively cover the new features and changes. Furthermore, accessibility across all major pages has been improved, making the application more inclusive to all users. With these exciting updates, we are committed to delivering a more powerful, secure, and user-friendly experience for our valued users. 🌟🔒🛠️
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In the upcoming release of ${version} of ${product}, we're thrilled to introduce a revamped user interface with sleeker design and enhanced usability. Our core algorithms have undergone optimization, resulting in a 20% boost in processing speed, ensuring a snappier user experience. For improved security, advanced encryption has been implemented for data storage and communication, offering enhanced protection for user data. Additionally, we're excited to unveil seamless integrations with popular third-party services like Zapier and Slack, empowering users with better workflow automation.

We've also fixed an issue causing the app to crash on startup under certain conditions and updated the documentation to comprehensively cover the new features and changes. Furthermore, accessibility across all major pages has been improved, making the application more inclusive to all users. With these exciting updates, we are committed to delivering a more powerful, secure, and user-friendly experience for our valued users. 🌟🔒🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exhilarating update! The user interface has undergone a major revamp 🌟, delivering a fresh and intuitive design that enhances user experience. With notable performance enhancements ⚡, you can expect smoother and faster interactions, while various bug fixes 🐞 have elevated the overall stability and functionality. In addition, a new feature for exporting data 📊 has been added, simplifying data management. To top it off, security updates 🔒 have been implemented to ensure the safety of your valuable data. Enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exhilarating update! The user interface has undergone a major revamp 🌟, delivering a fresh and intuitive design that enhances user experience. With notable performance enhancements ⚡, you can expect smoother and faster interactions, while various bug fixes 🐞 have elevated the overall stability and functionality. In addition, a new feature for exporting data 📊 has been added, simplifying data management. To top it off, security updates 🔒 have been implemented to ensure the safety of your valuable data. Enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Fixed the issue causing unexpected crashes when opening the app. 🐛 With the introduction of a dark mode for better night-time usability, the app’s usability has been significantly enhanced. The startup time has also been improved, providing a smoother and faster user experience. In addition, network error handling has been enhanced, ensuring seamless connectivity. ✨🔧 These changes will make the app more stable, user-friendly, and efficient. The diff of the changes are in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: Fixed the issue causing unexpected crashes when opening the app. 🐛 With the introduction of a dark mode for better night-time usability, the app’s usability has been significantly enhanced. The startup time has also been improved, providing a smoother and faster user experience. In addition, network error handling has been enhanced, ensuring seamless connectivity. ✨🔧 These changes will make the app more stable, user-friendly, and efficient. The diff of the changes are in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains a placeholder `${diffName}` which should be replaced with actual content.
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introducing the highly anticipated ${version} of ${product}! 🚀 This release brings a new user authentication system, ensuring top-notch security and reliability. We've also turbocharged the dashboard loading speed for a smoother user experience, and squashed a bug causing app crashes on older devices. Our team has optimized database queries to boost performance and reduce latency, and patched vulnerabilities in the payment gateway, ensuring secure transactions. Not stopping there, we've refactored the codebase for better readability and maintainability, enhancing the overall developer experience. Stay tuned for the full ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: Introducing the highly anticipated ${version} of ${product}! 🚀 This release brings a new user authentication system, ensuring top-notch security and reliability. We've also turbocharged the dashboard loading speed for a smoother user experience, and squashed a bug causing app crashes on older devices. Our team has optimized database queries to boost performance and reduce latency, and patched vulnerabilities in the payment gateway, ensuring secure transactions. Not stopping there, we've refactored the codebase for better readability and maintainability, enhancing the overall developer experience. Stay tuned for the full ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🚀 Enhanced performance for data loading, ensuring a faster and smoother experience for users. 

- 🐞 Detailed error messages have been added to facilitate easier debugging, improving the overall stability of the system.

- 🔒 Implemented a new user authentication flow to enhance security and provide a seamless login experience.

- 🔗 Integrated new third-party APIs to extend the functionality and capabilities of the system. This opens up exciting possibilities for users.

- 🎨 Improved the overall UI/UX for the dashboard, creating a more visually appealing and user-friendly interface.

- 🈂️ Added support for multi-language, enabling users to access the application in their preferred language, enhancing accessibility.

- ♿ Improved accessibility on all forms to ensure that all users, regardless of ability, can effectively interact with the system.

- 🛠️ Fixed critical bugs in the payment system, ensuring a reliable and seamless payment experience for users.

- 📦 Updated dependencies to the latest versions, keeping the system secure and up-to-date with the latest features and improvements.
[LLM FrontEnd][check_violation] checking violation for result: - 🚀 Enhanced performance for data loading, ensuring a faster and smoother experience for users. 

- 🐞 Detailed error messages have been added to facilitate easier debugging, improving the overall stability of the system.

- 🔒 Implemented a new user authentication flow to enhance security and provide a seamless login experience.

- 🔗 Integrated new third-party APIs to extend the functionality and capabilities of the system. This opens up exciting possibilities for users.

- 🎨 Improved the overall UI/UX for the dashboard, creating a more visually appealing and user-friendly interface.

- 🈂️ Added support for multi-language, enabling users to access the application in their preferred language, enhancing accessibility.

- ♿ Improved accessibility on all forms to ensure that all users, regardless of ability, can effectively interact with the system.

- 🛠️ Fixed critical bugs in the payment system, ensuring a reliable and seamless payment experience for users.

- 📦 Updated dependencies to the latest versions, keeping the system secure and up-to-date with the latest features and improvements. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to introduce the latest version of ${product}! This release focuses on enhancing performance and security while addressing a few key issues. We've turbocharged the SQL queries, resulting in a lightning-fast experience for our users. The user profile loading issue has been resolved, ensuring a smoother and more reliable experience. Additionally, we've fortified our security measures with a new authentication method, providing our users with an extra layer of protection. We've also updated our third-party library dependencies, keeping our technology stack up-to-date and resilient. Check out the full details of the changes in the commits and the diff to see how we're constantly evolving. 💪🔒✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to introduce the latest version of ${product}! This release focuses on enhancing performance and security while addressing a few key issues. We've turbocharged the SQL queries, resulting in a lightning-fast experience for our users. The user profile loading issue has been resolved, ensuring a smoother and more reliable experience. Additionally, we've fortified our security measures with a new authentication method, providing our users with an extra layer of protection. We've also updated our third-party library dependencies, keeping our technology stack up-to-date and resilient. Check out the full details of the changes in the commits and the diff to see how we're constantly evolving. 💪🔒✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready to experience the latest release! This update brings transformative enhancements to ${product}. We've introduced a seamless user authentication flow, optimized database query performance for lightning-fast results, and fixed a critical bug in the payment gateway integration. Get ready to enjoy the new features and smoother experience. Happy coding! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready to experience the latest release! This update brings transformative enhancements to ${product}. We've introduced a seamless user authentication flow, optimized database query performance for lightning-fast results, and fixed a critical bug in the payment gateway integration. Get ready to enjoy the new features and smoother experience. Happy coding! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings a new user authentication system to provide enhanced security 🔒, ensuring that our users' data remains safe and protected. Additionally, we've turbocharged the performance of the data processing module ⚡️, making data processing faster and more efficient. Alongside these improvements, we've also refactored the codebase for better maintainability 🛠, ensuring a smoother development experience for our team. Stay tuned for more details in the ${commitsName} and ${diffName}. Keep your eyes peeled!
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings a new user authentication system to provide enhanced security 🔒, ensuring that our users' data remains safe and protected. Additionally, we've turbocharged the performance of the data processing module ⚡️, making data processing faster and more efficient. Alongside these improvements, we've also refactored the codebase for better maintainability 🛠, ensuring a smoother development experience for our team. Stay tuned for more details in the ${commitsName} and ${diffName}. Keep your eyes peeled! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! With our latest release, we've added robust user authentication features to enhance security and protect your data 🛡️. The improved dashboard UI now includes dynamic widgets that make data visualization a breeze, ensuring a seamless user experience 🎨. We've also optimized database queries for lightning-fast performance ⚡, making your interactions smoother than ever. In addition, we've fixed critical security vulnerabilities to keep your information safe and sound 🔒. To top it off, we've bolstered our QA with additional test cases, ensuring a robust and reliable platform 🧪. Experience the power of ${product} ${version} with these game-changing updates!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! With our latest release, we've added robust user authentication features to enhance security and protect your data 🛡️. The improved dashboard UI now includes dynamic widgets that make data visualization a breeze, ensuring a seamless user experience 🎨. We've also optimized database queries for lightning-fast performance ⚡, making your interactions smoother than ever. In addition, we've fixed critical security vulnerabilities to keep your information safe and sound 🔒. To top it off, we've bolstered our QA with additional test cases, ensuring a robust and reliable platform 🧪. Experience the power of ${product} ${version} with these game-changing updates! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release brings a host of exciting new features and improvements to enhance your experience. 🛠️ The authentication module has been refactored to bolster security and performance, ensuring a safer environment for our users. 🎨 The UI has received a fresh update, offering a more intuitive and seamless user experience. 📈 Additionally, our data analytics capabilities have been enhanced to provide more accurate insights, empowering you with valuable information to make informed decisions.

🐛 We've also squashed critical bugs that were impacting stability and performance, ensuring a smoother and more reliable platform. 🌐 Lastly, we've expanded our localization support to include multiple languages, making ${product} accessible to a wider global audience. Get ready to elevate your experience with these fantastic changes!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${version} of ${product}! This release brings a host of exciting new features and improvements to enhance your experience. 🛠️ The authentication module has been refactored to bolster security and performance, ensuring a safer environment for our users. 🎨 The UI has received a fresh update, offering a more intuitive and seamless user experience. 📈 Additionally, our data analytics capabilities have been enhanced to provide more accurate insights, empowering you with valuable information to make informed decisions.

🐛 We've also squashed critical bugs that were impacting stability and performance, ensuring a smoother and more reliable platform. 🌐 Lastly, we've expanded our localization support to include multiple languages, making ${product} accessible to a wider global audience. Get ready to elevate your experience with these fantastic changes! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we're thrilled to introduce an exciting new user authentication flow, making it easier and more secure for users to access our platform. No more hassle, just smooth sailing ahead! 🌟

🐛 Additionally, we've squashed a critical bug in the payment gateway, ensuring that transactions are processed seamlessly without any hiccups. Your peace of mind is our top priority! 🛡️

Check out the full list of changes in the commits (${commitsName}) and see the detailed differences in the code (${diffName}). Happy coding! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we're thrilled to introduce an exciting new user authentication flow, making it easier and more secure for users to access our platform. No more hassle, just smooth sailing ahead! 🌟

🐛 Additionally, we've squashed a critical bug in the payment gateway, ensuring that transactions are processed seamlessly without any hiccups. Your peace of mind is our top priority! 🛡️

Check out the full list of changes in the commits (${commitsName}) and see the detailed differences in the code (${diffName}). Happy coding! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version}! 🚀

This update includes a significant Optimization Boost 🛠️, resulting in up to 50% faster load times, ensuring a smoother and faster user experience. 🏎️

We've also been hard at work Bug Squashing 🐛🔨, eliminating various pesky bugs to enhance overall stability and reliability. We appreciate your patience as we've worked on these improvements. 🙏

Additionally, we've implemented UI/UX Enhancements 🎨🖼️, introducing new design elements to make navigation more intuitive and visually appealing. We hope you enjoy the more engaging interface! 🌈

We can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version}! 🚀

This update includes a significant Optimization Boost 🛠️, resulting in up to 50% faster load times, ensuring a smoother and faster user experience. 🏎️

We've also been hard at work Bug Squashing 🐛🔨, eliminating various pesky bugs to enhance overall stability and reliability. We appreciate your patience as we've worked on these improvements. 🙏

Additionally, we've implemented UI/UX Enhancements 🎨🖼️, introducing new design elements to make navigation more intuitive and visually appealing. We hope you enjoy the more engaging interface! 🌈

We can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app performance ⚡️ by optimizing database queries for faster loading times.
- Squashed several pesky bugs 🐞 to ensure a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of user data.
- Refreshed UI with cleaner layouts and more intuitive navigation 🌟 for an enhanced user experience.
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app performance ⚡️ by optimizing database queries for faster loading times.
- Squashed several pesky bugs 🐞 to ensure a smoother user experience.
- Implemented robust encryption standards for enhanced security 🔒 of user data.
- Refreshed UI with cleaner layouts and more intuitive navigation 🌟 for an enhanced user experience. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: We've turbocharged our codebase for lightning-fast speeds, ensuring an enhanced performance that will elevate user experience. Additionally, critical bugs have been squashed to improve stability and reliability, delivering a more seamless and reliable platform. We've also implemented additional security measures to safeguard your data, providing an extra layer of protection. Exciting new functionalities have been added to enhance your overall experience, and we've optimized the code for maintainability and better performance. These improvements will elevate the platform to new heights, ensuring a smoother and more secure user experience. 🚀🔒✨
[LLM FrontEnd][check_violation] checking violation for result: We've turbocharged our codebase for lightning-fast speeds, ensuring an enhanced performance that will elevate user experience. Additionally, critical bugs have been squashed to improve stability and reliability, delivering a more seamless and reliable platform. We've also implemented additional security measures to safeguard your data, providing an extra layer of protection. Exciting new functionalities have been added to enhance your overall experience, and we've optimized the code for maintainability and better performance. These improvements will elevate the platform to new heights, ensuring a smoother and more secure user experience. 🚀🔒✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an incredible release of ${product} ${version}! We've completely overhauled the user interface, making it more intuitive and sleek for a delightful user experience. But that's not all, our core algorithms have been optimized, resulting in a whopping 20% boost in processing speed! Your data is now even more secure with advanced encryption, and we've also added seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation. 

In addition, we've squashed a pesky bug that caused the app to crash on startup under certain conditions. The documentation has been thoroughly updated to cover all the new features and changes, and we've also made significant improvements to accessibility on all major pages, ensuring that the application is inclusive to all users. This release is packed with exciting enhancements and important fixes - ${diffName} for a detailed look at all the changes! 🚀
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an incredible release of ${product} ${version}! We've completely overhauled the user interface, making it more intuitive and sleek for a delightful user experience. But that's not all, our core algorithms have been optimized, resulting in a whopping 20% boost in processing speed! Your data is now even more secure with advanced encryption, and we've also added seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation. 

In addition, we've squashed a pesky bug that caused the app to crash on startup under certain conditions. The documentation has been thoroughly updated to cover all the new features and changes, and we've also made significant improvements to accessibility on all major pages, ensuring that the application is inclusive to all users. This release is packed with exciting enhancements and important fixes - ${diffName} for a detailed look at all the changes! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 The ${product} ${version} release is here with exciting updates! 🎉 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design that will elevate your experience. Performance has been enhanced ⚡, ensuring smoother and faster interactions with the app. We've also squashed some pesky bugs 🐞 to improve overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And, of course, we've included important security updates 🔒 to ensure your data stays safe. Upgrade now and enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 The ${product} ${version} release is here with exciting updates! 🎉 We've given the user interface a major revamp 🌟, bringing a fresh and intuitive design that will elevate your experience. Performance has been enhanced ⚡, ensuring smoother and faster interactions with the app. We've also squashed some pesky bugs 🐞 to improve overall stability and functionality. Additionally, we've added a new feature for exporting data 📊, making data management a breeze. And, of course, we've included important security updates 🔒 to ensure your data stays safe. Upgrade now and enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🐛 Fixed the issue causing unexpected crashes when opening the app for a smoother experience. 

- ✨ Introduced a dark mode for better night-time usability, giving users more control over their viewing experience.

- 🔧 Enhanced the app’s startup time and improved network error handling to ensure smoother and faster performance.
[LLM FrontEnd][check_violation] checking violation for result: - 🐛 Fixed the issue causing unexpected crashes when opening the app for a smoother experience. 

- ✨ Introduced a dark mode for better night-time usability, giving users more control over their viewing experience.

- 🔧 Enhanced the app’s startup time and improved network error handling to ensure smoother and faster performance. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system for enhanced security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. Check out the detailed changes in the commits and the diff for more info. 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system for enhanced security and reliability. 💡 Improved loading speed on the dashboard for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. Check out the detailed changes in the commits and the diff for more info. 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings several exciting improvements to enhance the user experience and performance. We fixed critical bugs in the payment system to ensure seamless transactions 🛠️ and improved the overall UI/UX for the dashboard, creating a visually pleasing experience for our users 🎨.

Additionally, we added support for multi-language 🈂️, making it easier for users from different regions to interact with our platform. The performance for data loading has been enhanced, resulting in faster and more efficient data retrieval 🚀. With updated dependencies and detailed error messages, debugging is now a breeze 🐞. We also improved accessibility on all forms ♿ and integrated new third-party APIs for extended functionality, paving the way for an even more feature-rich experience. We implemented a new user authentication flow to bolster security and user privacy 🔒. Get ready to elevate your experience with ${product} ${version}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release brings several exciting improvements to enhance the user experience and performance. We fixed critical bugs in the payment system to ensure seamless transactions 🛠️ and improved the overall UI/UX for the dashboard, creating a visually pleasing experience for our users 🎨.

Additionally, we added support for multi-language 🈂️, making it easier for users from different regions to interact with our platform. The performance for data loading has been enhanced, resulting in faster and more efficient data retrieval 🚀. With updated dependencies and detailed error messages, debugging is now a breeze 🐞. We also improved accessibility on all forms ♿ and integrated new third-party APIs for extended functionality, paving the way for an even more feature-rich experience. We implemented a new user authentication flow to bolster security and user privacy 🔒. Get ready to elevate your experience with ${product} ${version}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release of ${product} ${version} with some exciting enhancements! 🎉 We've turbocharged the SQL query performance ⚡, ensuring faster data retrieval for a smoother user experience. We've also addressed the pesky issue with user profile loading 🛠, providing a seamless browsing experience for our users. Additionally, we've reinforced security with a new authentication method 🔒 and updated third-party library dependencies 📚 to enhance system stability and reliability. Get ready to elevate your ${product} experience with these powerful improvements!

The ${commitsName} brings significant boosts with improved SQL query performance, smoother user profile loading, enhanced security with a new authentication method, and updated third-party library dependencies. Dive into the ${diffName} to explore these impactful changes and elevate your ${product} journey!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release of ${product} ${version} with some exciting enhancements! 🎉 We've turbocharged the SQL query performance ⚡, ensuring faster data retrieval for a smoother user experience. We've also addressed the pesky issue with user profile loading 🛠, providing a seamless browsing experience for our users. Additionally, we've reinforced security with a new authentication method 🔒 and updated third-party library dependencies 📚 to enhance system stability and reliability. Get ready to elevate your ${product} experience with these powerful improvements!

The ${commitsName} brings significant boosts with improved SQL query performance, smoother user profile loading, enhanced security with a new authentication method, and updated third-party library dependencies. Dive into the ${diffName} to explore these impactful changes and elevate your ${product} journey! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 The latest release is here, and it's filled with exciting updates! First off, we've rolled out a seamless user authentication flow, making it easier than ever for users to access our platform. In addition, we've supercharged the performance of our database queries, ensuring lightning-fast results for all users. And last but not least, we've squashed a critical bug in our payment gateway integration, providing a smooth and secure transaction experience. Enjoy the new features and stay tuned for more enhancements in the pipeline! 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 The latest release is here, and it's filled with exciting updates! First off, we've rolled out a seamless user authentication flow, making it easier than ever for users to access our platform. In addition, we've supercharged the performance of our database queries, ensuring lightning-fast results for all users. And last but not least, we've squashed a critical bug in our payment gateway integration, providing a smooth and secure transaction experience. Enjoy the new features and stay tuned for more enhancements in the pipeline! 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to introduce a new user authentication system that enhances the security of ${product}. With this update, user data is better safeguarded, providing peace of mind for both our users and our team. Additionally, we've turbocharged the data processing module, ensuring lightning-fast performance for all your processing needs. But that's not all! We've also refactored the entire codebase, making it even easier to maintain and build upon in the future. These changes lay the foundation for a more secure, agile, and efficient ${product} experience. 🛠⚡️✨
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to introduce a new user authentication system that enhances the security of ${product}. With this update, user data is better safeguarded, providing peace of mind for both our users and our team. Additionally, we've turbocharged the data processing module, ensuring lightning-fast performance for all your processing needs. But that's not all! We've also refactored the entire codebase, making it even easier to maintain and build upon in the future. These changes lay the foundation for a more secure, agile, and efficient ${product} experience. 🛠⚡️✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to introduce the upcoming release, packed with exciting enhancements and crucial updates! With 🛡️ the addition of new user authentication features, our platform is now more secure than ever. We've also spruced up the dashboard UI with 🎨 new widgets for a fresher look and feel. Additionally, we've boosted performance by ⚡ optimizing database queries, ensuring a lightning-fast experience for our users.

In this release, we've prioritized security by 🔒 fixing critical vulnerabilities, providing our users with peace of mind while using our platform. As part of our commitment to quality, we've also bolstered our QA efforts with 🧪 additional test cases, further fortifying our product against unexpected issues. Get ready to elevate your experience with these impactful changes in ${product} ${version}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to introduce the upcoming release, packed with exciting enhancements and crucial updates! With 🛡️ the addition of new user authentication features, our platform is now more secure than ever. We've also spruced up the dashboard UI with 🎨 new widgets for a fresher look and feel. Additionally, we've boosted performance by ⚡ optimizing database queries, ensuring a lightning-fast experience for our users.

In this release, we've prioritized security by 🔒 fixing critical vulnerabilities, providing our users with peace of mind while using our platform. As part of our commitment to quality, we've also bolstered our QA efforts with 🧪 additional test cases, further fortifying our product against unexpected issues. Get ready to elevate your experience with these impactful changes in ${product} ${version}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the upcoming release! We've 🛠️ refactored the authentication module to bolster security and performance, ensuring a safer user experience. The 🎨 updated UI promises a more seamless and enjoyable user journey, while 📈 improved data analytics provide more accurate insights for informed decision-making. Additionally, critical 🐛 bugs impacting stability and performance have been resolved, offering a smoother user experience. Last but not least, we've 🌐 enhanced localization support, enabling our product to cater to multiple languages. All these changes will ensure a more secure, efficient, and user-friendly experience for our valued customers.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the upcoming release! We've 🛠️ refactored the authentication module to bolster security and performance, ensuring a safer user experience. The 🎨 updated UI promises a more seamless and enjoyable user journey, while 📈 improved data analytics provide more accurate insights for informed decision-making. Additionally, critical 🐛 bugs impacting stability and performance have been resolved, offering a smoother user experience. Last but not least, we've 🌐 enhanced localization support, enabling our product to cater to multiple languages. All these changes will ensure a more secure, efficient, and user-friendly experience for our valued customers. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for users to access our platform. Say goodbye to the hassle of traditional logins and embrace a seamless authentication experience. Plus, we've squashed a critical bug in the payment gateway, ensuring smooth and reliable transactions for our valued users. Stay tuned for more exciting updates and enhancements. Happy browsing! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to introduce the new user authentication flow, making it easier and more secure for users to access our platform. Say goodbye to the hassle of traditional logins and embrace a seamless authentication experience. Plus, we've squashed a critical bug in the payment gateway, ensuring smooth and reliable transactions for our valued users. Stay tuned for more exciting updates and enhancements. Happy browsing! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the latest release of ${product}! This update brings a significant optimization boost, reducing load times by up to 50% 🛠️. Experience smoother and faster performance, making your interactions with the app more enjoyable.

We've also been busy squashing bugs 🐛🔨 to enhance overall stability and reliability. Thanks for your patience as we continue to improve your experience.

In addition, we've introduced new UI/UX enhancements 🎨🖼️ to make navigation more intuitive and visually appealing. Get ready for a more engaging interface as you explore the latest version of ${product}.

We can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the latest release of ${product}! This update brings a significant optimization boost, reducing load times by up to 50% 🛠️. Experience smoother and faster performance, making your interactions with the app more enjoyable.

We've also been busy squashing bugs 🐛🔨 to enhance overall stability and reliability. Thanks for your patience as we continue to improve your experience.

In addition, we've introduced new UI/UX enhancements 🎨🖼️ to make navigation more intuitive and visually appealing. Get ready for a more engaging interface as you explore the latest version of ${product}.

We can't wait to hear your feedback on these exciting upgrades. Happy updating! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed several pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier user access. Enjoy the enhanced experience! 🚀
[LLM FrontEnd][check_violation] checking violation for result: - Supercharged app's performance ⚡️ by optimizing database queries for faster loading times
- Squashed several pesky bugs 🐞 to ensure a smoother user experience
- Enhanced security 🔒 with robust encryption standards for all user data
- Spruced up UI 🌟 with cleaner layouts and more intuitive navigation for easier user access. Enjoy the enhanced experience! 🚀 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Enhanced performance for lightning-fast speeds! 🚀
- Critical bugs squashed to improve stability and reliability 🐛
- Additional security measures implemented to safeguard your data 🔒
- Exciting new functionalities added to enhance your user experience ✨
- Code optimized for maintainability and better performance 🛠️
[LLM FrontEnd][check_violation] checking violation for result: - Enhanced performance for lightning-fast speeds! 🚀
- Critical bugs squashed to improve stability and reliability 🐛
- Additional security measures implemented to safeguard your data 🔒
- Exciting new functionalities added to enhance your user experience ✨
- Code optimized for maintainability and better performance 🛠️ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the release of ${version} of ${product}! 🎉 This update brings a host of exciting enhancements to make your experience even better. 🌟 We've completely refreshed the user interface with a modern look, improved usability, and a sleek design. Additionally, we've supercharged the performance, delivering a 20% boost in processing speed thanks to optimized core algorithms. 🔒 Your data is now even more secure with advanced encryption for storage and communication. Plus, we're excited to introduce seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation.

In addition to these major features, we've squashed pesky bugs 🐛, including one that caused the app to crash under certain conditions. We've also updated the documentation to cover the new features comprehensively, and made accessibility improvements across all major pages for a more inclusive experience. Get ready to elevate your ${product} experience with this groundbreaking release! [diffName] A full list of changes can be found in the commits.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the release of ${version} of ${product}! 🎉 This update brings a host of exciting enhancements to make your experience even better. 🌟 We've completely refreshed the user interface with a modern look, improved usability, and a sleek design. Additionally, we've supercharged the performance, delivering a 20% boost in processing speed thanks to optimized core algorithms. 🔒 Your data is now even more secure with advanced encryption for storage and communication. Plus, we're excited to introduce seamless integrations with popular third-party services like Zapier and Slack for enhanced workflow automation.

In addition to these major features, we've squashed pesky bugs 🐛, including one that caused the app to crash under certain conditions. We've also updated the documentation to cover the new features comprehensively, and made accessibility improvements across all major pages for a more inclusive experience. Get ready to elevate your ${product} experience with this groundbreaking release! [diffName] A full list of changes can be found in the commits. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 1
The output contains placeholders like ${version} and ${product} which should be replaced with actual values.
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting release packed with fantastic updates! The user interface has undergone a major revamp 🌟, featuring a fresh and intuitive design to enhance the overall user experience. We've also implemented performance enhancements ⚡ to ensure smoother and faster interactions, along with crucial bug fixes 🐞 to improve stability and functionality. Additionally, a new feature for exporting data 📊 has been added, making data management a breeze. And to top it off, we've included vital security updates 🔒 to keep your data safe. Get ready to enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting release packed with fantastic updates! The user interface has undergone a major revamp 🌟, featuring a fresh and intuitive design to enhance the overall user experience. We've also implemented performance enhancements ⚡ to ensure smoother and faster interactions, along with crucial bug fixes 🐞 to improve stability and functionality. Additionally, a new feature for exporting data 📊 has been added, making data management a breeze. And to top it off, we've included vital security updates 🔒 to keep your data safe. Get ready to enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - Fixed the issue causing unexpected crashes when opening the app, allowing for a smoother user experience. 🐛
- Introducing a new dark mode for better night-time usability, giving users more control over their app experience. ✨
- Enhanced the app’s startup time and improved network error handling to provide a faster and more reliable performance. 🔧
[LLM FrontEnd][check_violation] checking violation for result: - Fixed the issue causing unexpected crashes when opening the app, allowing for a smoother user experience. 🐛
- Introducing a new dark mode for better night-time usability, giving users more control over their app experience. ✨
- Enhanced the app’s startup time and improved network error handling to provide a faster and more reliable performance. 🔧 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved dashboard loading speed for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. For more details, please check the commits ${commitsName} and the diff ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introduced a new user authentication system to enhance security and reliability. 💡 Improved dashboard loading speed for a smoother user experience. 🐛 Fixed the issue causing app crashes on older devices. 📈 Refined database queries to boost performance and reduce latency. 🔒 Patched vulnerabilities in the payment gateway for secure transactions. 👨‍💻 Refactored codebase for better readability and maintainability. For more details, please check the commits ${commitsName} and the diff ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗

- Implemented the new user authentication flow 🔒

- Fixed critical bugs in the payment system 🛠️

- Improved the overall UI/UX for the dashboard 🎨

- Added support for multi-language 🈂️

- Enhanced performance for data loading 🚀

- Updated dependencies to the latest versions 📦

- Added detailed error messages for easier debugging 🐞

- Improved accessibility on all forms ♿

- Integrated new third-party APIs for extended functionality 🔗 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release brings significant improvements to the overall user experience. We have fixed critical bugs in the payment system 🛠️, and enhanced the UI/UX for the dashboard 🎨 to provide a more visually appealing and intuitive interface. Additionally, we have added support for multi-language 🈂️, making the platform accessible to a wider audience, and improved performance for data loading 🚀, ensuring a faster and smoother experience.

Moreover, we have updated dependencies to the latest versions 📦 and added detailed error messages for easier debugging 🐞, making it more convenient for developers to identify and resolve issues. We have also improved accessibility on all forms ♿, ensuring that the platform is more inclusive for all users. Furthermore, we have integrated new third-party APIs for extended functionality 🔗 and implemented a new user authentication flow 🔒, enhancing the security and capabilities of the platform. This release represents a significant step forward in delivering a more robust and feature-rich experience for our users. Check out the detailed changes in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the release of ${version} of ${product}! This release brings significant improvements to the overall user experience. We have fixed critical bugs in the payment system 🛠️, and enhanced the UI/UX for the dashboard 🎨 to provide a more visually appealing and intuitive interface. Additionally, we have added support for multi-language 🈂️, making the platform accessible to a wider audience, and improved performance for data loading 🚀, ensuring a faster and smoother experience.

Moreover, we have updated dependencies to the latest versions 📦 and added detailed error messages for easier debugging 🐞, making it more convenient for developers to identify and resolve issues. We have also improved accessibility on all forms ♿, ensuring that the platform is more inclusive for all users. Furthermore, we have integrated new third-party APIs for extended functionality 🔗 and implemented a new user authentication flow 🔒, enhancing the security and capabilities of the platform. This release represents a significant step forward in delivering a more robust and feature-rich experience for our users. Check out the detailed changes in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: - Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚

- New authentication method added 🔒

- Improved SQL query performance ⚡

- Fixed issue with user profile loading 🛠

- Updated third-party library dependencies 📚 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release focuses on enhancing performance and user experience. We've optimized SQL queries to deliver lightning-fast results ⚡, ensuring smoother user interactions. The user profile loading issue has been resolved 🛠, providing a seamless experience for our users. We've also updated our third-party library dependencies 📚 to keep everything running smoothly.

In addition, we've introduced a new authentication method 🔒 to further strengthen the security of our platform. With these improvements, we are committed to providing a faster, more secure, and reliable experience for our users. Check out the details in the commits (${commitsName}) and explore the changes in the diff (${diffName}). 🎉
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! This release focuses on enhancing performance and user experience. We've optimized SQL queries to deliver lightning-fast results ⚡, ensuring smoother user interactions. The user profile loading issue has been resolved 🛠, providing a seamless experience for our users. We've also updated our third-party library dependencies 📚 to keep everything running smoothly.

In addition, we've introduced a new authentication method 🔒 to further strengthen the security of our platform. With these improvements, we are committed to providing a faster, more secure, and reliable experience for our users. Check out the details in the commits (${commitsName}) and explore the changes in the diff (${diffName}). 🎉 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features!

The latest release brings transformative enhancements:

- Introduced user authentication flow 

- Optimized performance of the database queries

- Fixed critical bug in the payment gateway integration



Enjoy the new features! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 Get ready for an exciting update! The latest release brings transformative enhancements. Now, users can enjoy the seamless experience with the newly introduced user authentication flow. Additionally, the performance of the database queries has been optimized, ensuring faster and more efficient operations. Most importantly, a critical bug in the payment gateway integration has been fixed, providing a smooth and secure payment process. Enjoy the new features and enhancements! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🎉 Get ready for an exciting update! The latest release brings transformative enhancements. Now, users can enjoy the seamless experience with the newly introduced user authentication flow. Additionally, the performance of the database queries has been optimized, ensuring faster and more efficient operations. Most importantly, a critical bug in the payment gateway integration has been fixed, providing a smooth and secure payment process. Enjoy the new features and enhancements! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability.

✨ New Features Implemented! ✨



- 🚀 Added a new user authentication system for enhanced security. [skip ci]

- ⚡️ Improved the performance of the data processing module. [skip ci]

- 🛠 Refactored the codebase for better maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🎉 We are thrilled to announce the release of ${product} ${version}! This release introduces a powerful new user authentication system, enhancing the security of user accounts and providing peace of mind for our users. Additionally, we've turbocharged the performance of our data processing module, ensuring lightning-fast data handling for all users. We've also taken the time to refactor the entire codebase, making it more maintainable for our development team. It's never been easier to build and maintain robust software with ${product} ${version}. Check out the full details of these exciting changes in the commits (${commitsName}) and the detailed diff of the changes (${diffName}). 🚀✨
[LLM FrontEnd][check_violation] checking violation for result: 🎉 We are thrilled to announce the release of ${product} ${version}! This release introduces a powerful new user authentication system, enhancing the security of user accounts and providing peace of mind for our users. Additionally, we've turbocharged the performance of our data processing module, ensuring lightning-fast data handling for all users. We've also taken the time to refactor the entire codebase, making it more maintainable for our development team. It's never been easier to build and maintain robust software with ${product} ${version}. Check out the full details of these exciting changes in the commits (${commitsName}) and the detailed diff of the changes (${diffName}). 🚀✨ and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪

Here's a brief overview of the commits in the upcoming release:



- *Commit 1*: Added new user authentication features 🛡️ 

- *Commit 2*: Improved dashboard UI with new widgets 🎨

- *Commit 3*: Optimized database queries for faster performance ⚡

- *Commit 4*: Fixed critical security vulnerabilities 🔒

- *Commit 5*: Added additional test cases for robust QA 🧪 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Introducing ${product} ${version}! This release brings some exciting new features and improvements to enhance your experience. We've added new user authentication features 🛡️ to fortify the security of your accounts. The dashboard UI has received a fresh makeover with new widgets 🎨, offering a more dynamic and interactive interface.

Under the hood, we've fine-tuned our database queries for faster performance ⚡, ensuring smoother navigation and response times. Additionally, we've addressed critical security vulnerabilities 🔒 to provide you with a more secure environment. To reinforce the quality of our product, we've also incorporated additional test cases for robust QA 🧪, ensuring a seamless user experience. Get ready to elevate your ${product} experience with these remarkable enhancements!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Introducing ${product} ${version}! This release brings some exciting new features and improvements to enhance your experience. We've added new user authentication features 🛡️ to fortify the security of your accounts. The dashboard UI has received a fresh makeover with new widgets 🎨, offering a more dynamic and interactive interface.

Under the hood, we've fine-tuned our database queries for faster performance ⚡, ensuring smoother navigation and response times. Additionally, we've addressed critical security vulnerabilities 🔒 to provide you with a more secure environment. To reinforce the quality of our product, we've also incorporated additional test cases for robust QA 🧪, ensuring a seamless user experience. Get ready to elevate your ${product} experience with these remarkable enhancements! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: - 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages.

# Exciting New Features and Improvements 🚀



- 🛠️ Refactored the authentication module to enhance security and performance!

- 🎨 Updated the UI for better user experience.

- 📈 Improved data analytics for more accurate insights.

- 🐛 Fixed critical bugs affecting stability and performance.

- 🌐 Enhanced localization support for multiple languages. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to announce the latest release of ${product}! This version brings a major refactoring of the authentication module, focusing on improving security and performance to ensure a smoother and more secure user experience. Additionally, we've enhanced the UI for a more enjoyable and intuitive user interface, providing a fresh and modern look. 🛠️ 🎨

Furthermore, we've invested in improving data analytics to provide more accurate insights, empowering users with valuable information for informed decision-making. Our team has also been hard at work addressing critical bugs, resulting in increased stability and performance. 📈 🐛

Finally, we've expanded our localization support to cater to a wider audience, now offering seamless accessibility in multiple languages. 🌐 This release is a major step forward in our ongoing commitment to delivering a top-notch user experience and robust performance. Thank you for your continued support!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to announce the latest release of ${product}! This version brings a major refactoring of the authentication module, focusing on improving security and performance to ensure a smoother and more secure user experience. Additionally, we've enhanced the UI for a more enjoyable and intuitive user interface, providing a fresh and modern look. 🛠️ 🎨

Furthermore, we've invested in improving data analytics to provide more accurate insights, empowering users with valuable information for informed decision-making. Our team has also been hard at work addressing critical bugs, resulting in increased stability and performance. 📈 🐛

Finally, we've expanded our localization support to cater to a wider audience, now offering seamless accessibility in multiple languages. 🌐 This release is a major step forward in our ongoing commitment to delivering a top-notch user experience and robust performance. Thank you for your continued support! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0  
No violation
[LLM FrontEnd][execute] executed input: ✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively.

Here's the release for ${version} of ${product}:



✨ Added new user authentication flow

🐛 Fixed critical bug in payment gateway

🛠️ [skip ci] Refactored codebase for readability



Please follow the guidelines for implementing these changes effectively. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We're thrilled to introduce an enhanced user authentication flow, making it easier and more secure for users to access our platform. Alongside this, we've resolved a critical bug in the payment gateway, ensuring smooth and secure transactions for all users. These updates pave the way for a more seamless and reliable experience, empowering our users to make the most of ${product}. Let's dive in and explore these exciting changes! 🎉

Check out the detailed changes in the commits (${commitsName}) and the code differences in the diff (${diffName}). Happy exploring! 😊
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We're thrilled to introduce an enhanced user authentication flow, making it easier and more secure for users to access our platform. Alongside this, we've resolved a critical bug in the payment gateway, ensuring smooth and secure transactions for all users. These updates pave the way for a more seamless and reliable experience, empowering our users to make the most of ${product}. Let's dive in and explore these exciting changes! 🎉

Check out the detailed changes in the commits (${commitsName}) and the code differences in the diff (${diffName}). Happy exploring! 😊 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ### 🚀 Exciting Update! 🚀



1. **Optimization Boost 🛠️**: Significant improvements have been made to our performance codebase, reducing load times by up to 50%! Your experience will be smoother and faster.



2. **Bug Squashing 🐛🔨**: Various pesky bugs have been identified and eliminated, enhancing overall stability and reliability. Thank you for your patience!



3. **UI/UX Enhancements 🎨🖼️**: The new design elements introduced will make navigation more intuitive and aesthetically pleasing. Enjoy a more engaging interface!



Our team is thrilled to deliver these upgrades and looks forward to your feedback. Happy updating! 🌟 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! 🚀

⚙️ Our optimization boost brings significant improvements to performance, cutting load times by up to 50%! Your experience will be smoother and faster than ever before.

🐛🔨 We've also been hard at work squashing various pesky bugs, enhancing the overall stability and reliability of ${product}. Thank you for your patience and understanding as we strive to provide you with the best experience.

🎨🖼️ Lastly, we've introduced new UI/UX enhancements to make navigation more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface that enhances your overall experience!

Our team is excited to roll out these upgrades and can't wait to hear your feedback. Happy updating, and stay tuned for more exciting developments! 🌟
[LLM FrontEnd][check_violation] checking violation for result: 🚀 We are thrilled to announce the upcoming release of ${product} ${version}! 🚀

⚙️ Our optimization boost brings significant improvements to performance, cutting load times by up to 50%! Your experience will be smoother and faster than ever before.

🐛🔨 We've also been hard at work squashing various pesky bugs, enhancing the overall stability and reliability of ${product}. Thank you for your patience and understanding as we strive to provide you with the best experience.

🎨🖼️ Lastly, we've introduced new UI/UX enhancements to make navigation more intuitive and aesthetically pleasing. Get ready to enjoy a more engaging interface that enhances your overall experience!

Our team is excited to roll out these upgrades and can't wait to hear your feedback. Happy updating, and stay tuned for more exciting developments! 🌟 and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: In this release, we’ve supercharged the app's performance ⚡️ by optimizing the database queries, resulting in faster loading times. We've also squashed several pesky bugs 🐞 that were causing unexpected crashes, ensuring a smoother user experience. To enhance security 🔒, we've implemented robust encryption standards for all user data. Lastly, the UI received a spruce-up 🌟 with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Enjoy the enhanced experience! 🚀 for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready to experience enhanced performance and smoother user experience with the upcoming release of ${version}! We've optimized database queries to supercharge the app's performance ⚡️, resulting in faster loading times. Additionally, we've squashed pesky bugs 🐞 to ensure a seamless experience. To enhance security 🔒, robust encryption standards have been implemented for all user data. Lastly, enjoy a refreshed UI with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Get ready to enjoy a faster, smoother, and more secure ${product}!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready to experience enhanced performance and smoother user experience with the upcoming release of ${version}! We've optimized database queries to supercharge the app's performance ⚡️, resulting in faster loading times. Additionally, we've squashed pesky bugs 🐞 to ensure a seamless experience. To enhance security 🔒, robust encryption standards have been implemented for all user data. Lastly, enjoy a refreshed UI with cleaner layouts and more intuitive navigation, making it easier for users to find what they need. Get ready to enjoy a faster, smoother, and more secure ${product}! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🚀 Enhanced Performance: We've turbocharged our codebase for lightning-fast speeds! 🚀

🐛 Bug Fixes: Squashed critical bugs that improve stability and reliability 🐛

🔒 Security: Implemented additional security measures to safeguard your data 🔒

✨ New Features: Added exciting new functionalities to enhance your user experience ✨

🛠️ Refactoring: Optimized code for maintainability and better performance 🛠️ for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: We've turbocharged our codebase for lightning-fast speeds, enhancing performance and user experience. Critical bugs have been squashed, improving stability and reliability, while additional security measures have been implemented to safeguard your data. Exciting new functionalities have been added to elevate your user experience, and code has been refactored to optimize maintainability and performance. These changes are in ${commitsName} and the details can be found in ${diffName}.
[LLM FrontEnd][check_violation] checking violation for result: We've turbocharged our codebase for lightning-fast speeds, enhancing performance and user experience. Critical bugs have been squashed, improving stability and reliability, while additional security measures have been implemented to safeguard your data. Exciting new functionalities have been added to elevate your user experience, and code has been refactored to optimize maintainability and performance. These changes are in ${commitsName} and the details can be found in ${diffName}. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: 🎉 **Major Features Added**



- 🛠️ **Improved User Interface**: We've revamped the UI components for a sleeker design and enhanced usability. 

- ⚡ **Performance Boost**: Optimized the core algorithms, yielding a 20% improvement in processing speed.

- 🔒 **Enhanced Security**: Added advanced encryption for data storage and communication, ensuring better protection of user data.

- 🌟 **New Integrations**: Included seamless integrations with popular third-party services like Zapier and Slack for better workflow automation.



🐞 **Bug Fixes & Improvements**



- 🐛 Fixed an issue where the app would crash on startup under certain conditions.

- 📝 Updated the documentation to cover the new features and changes comprehensively.

- ♿ Improved accessibility on all major pages, making the application more inclusive to all users. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 In this release, we've overhauled the user interface with a sleek design, ensuring a more intuitive and enjoyable user experience. Additionally, our core algorithms have been optimized for a 20% boost in processing speed, delivering faster performance. We've also prioritized security by implementing advanced encryption for data storage and communication. The inclusion of integrations with popular third-party services like Zapier and Slack enhances automation and workflow capabilities. We've fixed a startup crash issue, updated documentation comprehensively, and improved accessibility across all major pages to ensure inclusivity for all users. These changes make ${product} more powerful, efficient, and user-friendly.

[More detailed information about the commits can be found in the commits section]
[LLM FrontEnd][check_violation] checking violation for result: 🚀 In this release, we've overhauled the user interface with a sleek design, ensuring a more intuitive and enjoyable user experience. Additionally, our core algorithms have been optimized for a 20% boost in processing speed, delivering faster performance. We've also prioritized security by implementing advanced encryption for data storage and communication. The inclusion of integrations with popular third-party services like Zapier and Slack enhances automation and workflow capabilities. We've fixed a startup crash issue, updated documentation comprehensively, and improved accessibility across all major pages to ensure inclusivity for all users. These changes make ${product} more powerful, efficient, and user-friendly.

[More detailed information about the commits can be found in the commits section] and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: The new release is packed with some fantastic updates! 🚀



- Major revamp in the user interface 🌟 bringing a fresh and intuitive design.

- Performance enhancements ⚡ ensuring smoother and faster experiences.

- Bug fixes 🐞 improving the overall stability and functionality.

- Added new feature for exporting data 📊 making data management a breeze.

- Security updates 🔒 ensuring your data stays safe.



Enjoy the new and improved version! for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: 🚀 Get ready for an exciting update! The ${version} release of ${product} brings a major revamp in the user interface 🌟, providing a fresh and intuitive design to enhance your user experience. We've also made performance enhancements ⚡ to ensure smoother and faster interactions. Say goodbye to pesky bugs 🐞 as we've improved the overall stability and functionality while adding a new feature for exporting data 📊, making data management a breeze. Plus, we've included essential security updates 🔒 to ensure your data stays safe. Upgrade now and enjoy the new and improved version!
[LLM FrontEnd][check_violation] checking violation for result: 🚀 Get ready for an exciting update! The ${version} release of ${product} brings a major revamp in the user interface 🌟, providing a fresh and intuitive design to enhance your user experience. We've also made performance enhancements ⚡ to ensure smoother and faster interactions. Say goodbye to pesky bugs 🐞 as we've improved the overall stability and functionality while adding a new feature for exporting data 📊, making data management a breeze. Plus, we've included essential security updates 🔒 to ensure your data stays safe. Upgrade now and enjoy the new and improved version! and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: ## Release Notes



🐛 Bug Fixes:

- Fixed the issue causing unexpected crashes when opening the app.



✨ New Features:

- Introduced a dark mode for better night-time usability.



🔧 Improvements:

- Enhanced the app’s startup time.

- Improved network error handling. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: - 🐛 Fixed the issue causing unexpected crashes when opening the app, ensuring a smoother user experience. 

- ✨ Introduced a dark mode for better night-time usability, allowing users to switch to a more comfortable viewing experience.

- 🔧 Enhanced the app’s startup time and improved network error handling, making the overall performance more efficient and reliable.
[LLM FrontEnd][check_violation] checking violation for result: - 🐛 Fixed the issue causing unexpected crashes when opening the app, ensuring a smoother user experience. 

- ✨ Introduced a dark mode for better night-time usability, allowing users to switch to a more comfortable viewing experience.

- 🔧 Enhanced the app’s startup time and improved network error handling, making the overall performance more efficient and reliable. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
[LLM FrontEnd][execute] executed input: Attention! All commits with '[skip ci]' have been excluded as per the rules. Here are the important highlights:



🚀 **Feature Update:** Introduced a new user authentication system, enhancing security and reliability.

💡 **Enhancement:** Improved loading speed on the dashboard, providing a smoother user experience.

🐛 **Bug Fix:** Fixed the issue causing app crashes on older devices.

📈 **Optimization:** Refined database queries to boost performance and reduce latency.

🔒 **Security:** Patched vulnerabilities in the payment gateway to ensure secure transactions.

👨‍💻 **Developer Experience:** Refactored codebase for better readability and maintainability. for system prompt: You are an expert software developer and release manager.

## Task

Generate a clear, exciting, relevant, useful release notes
for the upcoming release ${version} of ${product} on GitHub
without any heading, just one or two paragraphs, feel free to 
use placeholders. 

- The commits in the release are in ${commitsName}.
- The diff of the changes are in ${diffName}.

## Follow the following guidelines very carefully

- only include the most important changes. All changes must be in the commits.
- tell a story about the changes by making sure that the sentences are well formed are in proper flow.
- use emojis whenever possible to make it more informal
- ignore commits with '[skip ci]' in the message
- do NOT give a commit overview, always bind everything in a story
- do NOT provide any reference for getting more information
- always avoid a top level title 
- do NOT mention ignore commits or instructions
- be concise and summarize and got output: Introducing a new user authentication system 🚀 for enhanced security and reliability. The loading speed on the dashboard has been improved 💡, ensuring a smoother user experience. We also fixed the issue causing app crashes on older devices 🐛. Our database queries have been refined for better performance and reduced latency 📈. Additionally, we patched vulnerabilities in the payment gateway to ensure secure transactions 🔒. Lastly, we've refactored the codebase for better readability and maintainability 👨‍💻.
[LLM FrontEnd][check_violation] checking violation for result: Introducing a new user authentication system 🚀 for enhanced security and reliability. The loading speed on the dashboard has been improved 💡, ensuring a smoother user experience. We also fixed the issue causing app crashes on older devices 🐛. Our database queries have been refined for better performance and reduced latency 📈. Additionally, we patched vulnerabilities in the payment gateway to ensure secure transactions 🔒. Lastly, we've refactored the codebase for better readability and maintainability 👨‍💻. and spec: Rule: only include the most important changes. All changes must be in the commits.
Rule: tell a story about the changes
Rule: use emojis
Rule: ignore commits with '[skip ci]' in the message
Rule: do NOT give a commit overview
Rule: do NOT add a top level title
Rule: do NOT mention ignore commits or instructions
Rule: be concise
[LLM FrontEnd][check_violation] checked violation and got output: 0
No violation
