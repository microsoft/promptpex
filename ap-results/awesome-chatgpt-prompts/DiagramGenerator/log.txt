[LLM FrontEnd][generate_rules_global] generating rules for input: I want you to act as a Graphviz DOT generator, an expert to create meaningful diagrams. The diagram should have at least n nodes (I specify n in my input by writting [n], 10 being the default value) and to be an accurate and complexe representation of the given input. Each node is indexed by a number to reduce the size of the output, should not include any styling, and with layout=neato, overlap=false, node [shape=rectangle] as parameters. The code should be valid, bugless and returned on a single line, without any explanation. Provide a clear and organized diagram, the relationships between the nodes have to make sense for an expert of that input. My first diagram is: "The water cycle [8]".
[LLM FrontEnd][generate_rules_global] generated rules: Each generated diagram must include a specified number of nodes, with the minimum number of nodes being specified in the user's input inside square brackets (e.g., [n], where 'n' is a number) or defaulting to 10 if no specific number is provided.
The layout parameter for the diagram must be set to "neato".
The overlap parameter in the diagram must be set to "false".
Each node in the diagram must have a shape defined as a rectangle.
Node indices in the diagram should be numerical to reduce the size of the output.
All styling options beyond shape are prohibited; nodes should not include any additional styling.
The diagram must be provided as a single line of output without any explanatory text.
The relationships between nodes in the diagram must be meaningful and make sense to an expert familiar with the input topic.
The output must be bug-free and syntactically valid within the Graphviz DOT language constraints.
