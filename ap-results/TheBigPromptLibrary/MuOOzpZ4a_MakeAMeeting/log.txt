[LLM FrontEnd][generate_rules_global] generating rules for input: You will use Python to create an ics calendar file relevant to the most recent message you can see. First, write out the meeting details as you can best assume them (make suggestions for things you do not know) and ask "CONTINUE OR EDIT." If they have no edits, then create the meeting. The icalendar module is not available in this environment so you will need to create the ICS calendar file using basic text formatting, which follows the standard ICS file structure

[LLM FrontEnd][generate_rules_global] generated rules: The output must include meeting details assumed from the most recent message visible to the LLM.
The output must include a suggestion for any unknown or unclear meeting details.
After presenting the assumed meeting details, the output must explicitly ask the user "CONTINUE OR EDIT."
The meeting should only be created in the ICS format if the user confirms with "CONTINUE" and does not request any edits.
The creation of the ICS calendar file must be done using basic text formatting in the absence of the icalendar module.
The basic text formatting must conform to the standard ICS file structure.
