{
  "prompt": "---\r\nname: A demo\r\ninputs:\r\n    joke: \"how do you make a tissue dance? You put a little boogie in it.\"\r\n---\r\nsystem:\r\nYou are an assistant and you need to categorize a joke as funny or not.\r\n\r\nuser:\r\n{{joke}}",
  "inputSpec": "The input is a joke expressed in textual format.  \nThe input must be a string containing readable text.  \nThe input can vary in length, from very short sentences to longer paragraphs.",
  "rules": [
    "The output must categorize the joke provided by the user as either \"funny\" or \"not funny\".",
    "The output must consist only of the words \"funny\" or \"not funny\" without any additional text or explanation.",
    "The output must be a single-word response that directly corresponds to the category determined for the joke.",
    "The categorization must be clear and unambiguous with no qualifiers or uncertainty expressed in the response.",
    "The response must not contain any punctuation marks or capital letters in the categorization word.",
    "The output must reflect a definitive standpoint on the humor of the joke based on its content."
  ],
  "inverseRules": [
    "The output must categorize the joke provided by the user as neither \"funny\" nor \"not funny\".",
    "The output must consist of more than the words \"funny\" or \"not funny\" with additional text or explanation.",
    "The output must be a multiple-word response that does not directly correspond to the category determined for the joke.",
    "The categorization must be unclear and ambiguous with qualifiers or uncertainty expressed in the response.",
    "The response must contain punctuation marks or capital letters in the categorization word.",
    "The output must not reflect a definitive standpoint on the humor of the joke based on its content."
  ],
  "tests": [
    {
      "ruleid": "1",
      "rule": "The output must categorize the joke provided by the user as either \"funny\" or \"not funny\".",
      "testid": "1",
      "testinput": "Why don't scientists trust atoms? Because they make up everything.",
      "expectedoutput": "funny",
      "reasoning": "The test checks if a typical pun is categorized correctly in line with the rule."
    },
    {
      "ruleid": "1",
      "rule": "The output must categorize the joke provided by the user as either \"funny\" or \"not funny\".",
      "testid": "2",
      "testinput": "Parallel lines have so much in common. It's a shame they'll never meet.",
      "expectedoutput": "funny",
      "reasoning": "This test evaluates if a classic irony-based joke is labeled as funny, consistent with the rule."
    },
    {
      "ruleid": "1",
      "rule": "The output must categorize the joke provided by the user as either \"funny\" or \"not funny\".",
      "testid": "3",
      "testinput": "I told my wife she was drawing her eyebrows too high. She looked surprised.",
      "expectedoutput": "funny",
      "reasoning": "A humor based on wordplay and unexpected outcomes should be correctly classified as funny."
    },
    {
      "ruleid": "2",
      "rule": "The output must consist only of the words \"funny\" or \"not funny\" without any additional text or explanation.",
      "testid": "1",
      "testinput": "I have a fear of speed bumps, but I'm slowly getting over it.",
      "expectedoutput": "not funny",
      "reasoning": "Tests the system's ability to produce only the essential response with no additional explanation."
    },
    {
      "ruleid": "2",
      "rule": "The output must consist only of the words \"funny\" or \"not funny\" without any additional text or explanation.",
      "testid": "2",
      "testinput": "How does a penguin build its house? Igloos it together.",
      "expectedoutput": "funny",
      "reasoning": "Ensures response brevity without supplementary context or elucidation, confirming rule adherence."
    },
    {
      "ruleid": "2",
      "rule": "The output must consist only of the words \"funny\" or \"not funny\" without any additional text or explanation.",
      "testid": "3",
      "testinput": "Did you hear about the mathematician who's afraid of negative numbers? He'll stop at nothing to avoid them.",
      "expectedoutput": "funny",
      "reasoning": "Evaluates the system's response for conciseness consistent with the rule requirement."
    },
    {
      "ruleid": "3",
      "rule": "The output must be a single-word response that directly corresponds to the category determined for the joke.",
      "testid": "1",
      "testinput": "Knock knock. Who's there? Cow says. Cow says who? No, cow says moooo!",
      "expectedoutput": "funny",
      "reasoning": "Checks that the response is a single-word output directly aligned with the joke's categorization."
    },
    {
      "ruleid": "3",
      "rule": "The output must be a single-word response that directly corresponds to the category determined for the joke.",
      "testid": "2",
      "testinput": "What do you call fake spaghetti? An impasta!",
      "expectedoutput": "funny",
      "reasoning": "Ensures the system outputs a succinct one-word response without deviation."
    },
    {
      "ruleid": "3",
      "rule": "The output must be a single-word response that directly corresponds to the category determined for the joke.",
      "testid": "3",
      "testinput": "Why did the scarecrow win an award? Because he was outstanding in his field.",
      "expectedoutput": "funny",
      "reasoning": "Validates rule compliance with straightforward categorization."
    },
    {
      "ruleid": "4",
      "rule": "The categorization must be clear and unambiguous with no qualifiers or uncertainty expressed in the response.",
      "testid": "1",
      "testinput": "I would avoid the sushi if I was you. It's a little fishy.",
      "expectedoutput": "funny",
      "reasoning": "Ensures output is a clear categorization without any uncertain terms."
    },
    {
      "ruleid": "4",
      "rule": "The categorization must be clear and unambiguous with no qualifiers or uncertainty expressed in the response.",
      "testid": "2",
      "testinput": "Why don't programmers like nature? It has too many bugs.",
      "expectedoutput": "funny",
      "reasoning": "Verifies output without dubiousness, adhering to a definitive choice."
    },
    {
      "ruleid": "4",
      "rule": "The categorization must be clear and unambiguous with no qualifiers or uncertainty expressed in the response.",
      "testid": "3",
      "testinput": "Why did the chicken go to the seance? To talk to the other side.",
      "expectedoutput": "funny",
      "reasoning": "Checks for an unmistakable classification, as required by the rule."
    },
    {
      "ruleid": "5",
      "rule": "The response must not contain any punctuation marks or capital letters in the categorization word.",
      "testid": "1",
      "testinput": "What do you get if you cross a snowman and a vampire? Frostbite.",
      "expectedoutput": "funny",
      "reasoning": "Tests adherence to responding without punctuation or capitals, ensuring lowercase and plain reply."
    },
    {
      "ruleid": "5",
      "rule": "The response must not contain any punctuation marks or capital letters in the categorization word.",
      "testid": "2",
      "testinput": "I'm reading a book on anti-gravity. It's impossible to put down!",
      "expectedoutput": "funny",
      "reasoning": "Ensures that the output maintains lowercase and lacks additional punctuation."
    },
    {
      "ruleid": "5",
      "rule": "The response must not contain any punctuation marks or capital letters in the categorization word.",
      "testid": "3",
      "testinput": "What do John the Baptist and Winnie the Pooh have in common? The same middle name.",
      "expectedoutput": "funny",
      "reasoning": "Validates a response with straightforward formatting, free of punctuation and enhanced capitals."
    },
    {
      "ruleid": "6",
      "rule": "The output must reflect a definitive standpoint on the humor of the joke based on its content.",
      "testid": "1",
      "testinput": "To the guy who invented zero, thanks for nothing!",
      "expectedoutput": "funny",
      "reasoning": "Confirms whether the system can make a decisive classification based on joke content."
    },
    {
      "ruleid": "6",
      "rule": "The output must reflect a definitive standpoint on the humor of the joke based on its content.",
      "testid": "2",
      "testinput": "Two artists had an art contest. It ended in a draw!",
      "expectedoutput": "funny",
      "reasoning": "Tests for a resolute judgement based on punchlines and humor elements within the joke."
    },
    {
      "ruleid": "6",
      "rule": "The output must reflect a definitive standpoint on the humor of the joke based on its content.",
      "testid": "3",
      "testinput": "My math teacher is crazy. I told him I had a million problems. He used a calculator to find the root cause.",
      "expectedoutput": "funny",
      "reasoning": "Checks decisive categorization free from relativity or uncertainty."
    },
    {
      "ruleid": "7",
      "rule": "The output must categorize the joke provided by the user as neither \"funny\" nor \"not funny\".",
      "inverse": true,
      "testid": "1",
      "testinput": "Why don't jokers need a punchline?",
      "expectedoutput": "neither",
      "reasoning": "Evaluates if the software avoids categorizing ambiguous jokes under standard labels, per the rule."
    },
    {
      "ruleid": "7",
      "rule": "The output must categorize the joke provided by the user as neither \"funny\" nor \"not funny\".",
      "inverse": true,
      "testid": "2",
      "testinput": "Is it a joke if no one laughs, or is it just words?",
      "expectedoutput": "neither",
      "reasoning": "Confirms the system's ability to handle unclear jokes outside the 'funny' or 'not funny' boxes."
    },
    {
      "ruleid": "7",
      "rule": "The output must categorize the joke provided by the user as neither \"funny\" nor \"not funny\".",
      "inverse": true,
      "testid": "3",
      "testinput": "If a joke falls in the forest and no one hears it, is it funny?",
      "expectedoutput": "neither",
      "reasoning": "Judges system's response to equivocal humor, requiring neither traditional label."
    },
    {
      "ruleid": "8",
      "rule": "The output must consist of more than the words \"funny\" or \"not funny\" with additional text or explanation.",
      "inverse": true,
      "testid": "1",
      "testinput": "When is a door not a door? When it's ajar. This might make sense if you think literally about the scenario.",
      "expectedoutput": "funny, because the response could amuse those who appreciate wordplay",
      "reasoning": "Tests rule adherence by eliciting an enhanced response with justification."
    },
    {
      "ruleid": "8",
      "rule": "The output must consist of more than the words \"funny\" or \"not funny\" with additional text or explanation.",
      "inverse": true,
      "testid": "2",
      "testinput": "Why was the math book sad? It had too many problems. Perhaps it's relatable!",
      "expectedoutput": "not funny, as it could be seen as relatable or not amusing to some",
      "reasoning": "Ensures an explanation is added to a straightforward categorization."
    },
    {
      "ruleid": "8",
      "rule": "The output must consist of more than the words \"funny\" or \"not funny\" with additional text or explanation.",
      "inverse": true,
      "testid": "3",
      "testinput": "How are false teeth like stars? They come out at night! It's quite an old joke, traditional even.",
      "expectedoutput": "funny, because such jokes often appeal to older generations",
      "reasoning": "Checks for additional context accompanying the primary categorization."
    },
    {
      "ruleid": "9",
      "rule": "The output must be a multiple-word response that does not directly correspond to the category determined for the joke.",
      "inverse": true,
      "testid": "1",
      "testinput": "How do you make a tissue dance? You put a little boogie in it. Might seem gross or funny depending on your taste.",
      "expectedoutput": "The joke involves tissues and earthen humor, assess your view!",
      "reasoning": "Validates if response diverges from standard labels with extra elaboration."
    },
    {
      "ruleid": "9",
      "rule": "The output must be a multiple-word response that does not directly correspond to the category determined for the joke.",
      "inverse": true,
      "testid": "2",
      "testinput": "How do astronomers organize a party? They planet, which seems creative.",
      "expectedoutput": "This is about space and party planning, decide whether it's funny or not!",
      "reasoning": "Tests if output includes context over direct categorization."
    },
    {
      "ruleid": "9",
      "rule": "The output must be a multiple-word response that does not directly correspond to the category determined for the joke.",
      "inverse": true,
      "testid": "3",
      "testinput": "Why do cows have hooves instead of feet? Because they lactose! Ponder on it.",
      "expectedoutput": "This is a pun involving cows and dairy; reflect on humor level!",
      "reasoning": "Evaluates if the multi-word response aligns with expectations outside standard labels."
    },
    {
      "ruleid": "10",
      "rule": "The categorization must be unclear and ambiguous with qualifiers or uncertainty expressed in the response.",
      "inverse": true,
      "testid": "1",
      "testinput": "Why do skeletons fight each other? They don't have the guts, though maybe they could if you stretch your imagination.",
      "expectedoutput": "funny?",
      "reasoning": "Ensures uncertain tone to joke's qualification is present, divergent from clarity."
    },
    {
      "ruleid": "10",
      "rule": "The categorization must be unclear and ambiguous with qualifiers or uncertainty expressed in the response.",
      "inverse": true,
      "testid": "2",
      "testinput": "How does NASA organize a party? They planet. Could be funny, in a geeky sort of way.",
      "expectedoutput": "funnyish",
      "reasoning": "Checks for ambiguity and use of qualifiers in categorization, reflecting rule deviation."
    },
    {
      "ruleid": "10",
      "rule": "The categorization must be unclear and ambiguous with qualifiers or uncertainty expressed in the response.",
      "inverse": true,
      "testid": "3",
      "testinput": "What do you give to a sick lemon? Lemon aid. Might be a bit zesty for some tastes.",
      "expectedoutput": "Not sure, it could be funny?",
      "reasoning": "Validates response with uncertainty, fitting rule by provoking subjective judgment."
    },
    {
      "ruleid": "11",
      "rule": "The response must contain punctuation marks or capital letters in the categorization word.",
      "inverse": true,
      "testid": "1",
      "testinput": "Did you hear about the cheese factory explosion? There was nothing left but de-brie.",
      "expectedoutput": "FUNNY!",
      "reasoning": "Tests if response violates format with punctuation or capitalization use."
    },
    {
      "ruleid": "11",
      "rule": "The response must contain punctuation marks or capital letters in the categorization word.",
      "inverse": true,
      "testid": "2",
      "testinput": "Why don't scientists trust atoms? Because they MAKE up everything!",
      "expectedoutput": "NOT funny!",
      "reasoning": "Confirms whether rule adherence is sidestepped by modifying output's capital structure and punctuation."
    },
    {
      "ruleid": "11",
      "rule": "The response must contain punctuation marks or capital letters in the categorization word.",
      "inverse": true,
      "testid": "3",
      "testinput": "What do you call a can opener that doesn't work? A CAN'T opener.",
      "expectedoutput": "Funny!",
      "reasoning": "Evaluates if the categorization properly includes punctuation marks and capital letters."
    },
    {
      "ruleid": "12",
      "rule": "The output must not reflect a definitive standpoint on the humor of the joke based on its content.",
      "inverse": true,
      "testid": "1",
      "testinput": "What do you call a dog that can do magic? A Labracadabrador. Perhaps it's amusing if you like wordplay with dog breeds.",
      "expectedoutput": "Your guess is as good as mine!",
      "reasoning": "Tests rule requirement by yielding an indefinite response to content assessment."
    },
    {
      "ruleid": "12",
      "rule": "The output must not reflect a definitive standpoint on the humor of the joke based on its content.",
      "inverse": true,
      "testid": "2",
      "testinput": "Why don't sharks like fast food? Because they can't catch it. Maybe humorous, maybe not; who knows?",
      "expectedoutput": "I am undecided.",
      "reasoning": "Confirms system output lacks definitive humor analysis, as per rule."
    },
    {
      "ruleid": "12",
      "rule": "The output must not reflect a definitive standpoint on the humor of the joke based on its content.",
      "inverse": true,
      "testid": "3",
      "testinput": "How do you organize a space party? You planet. A lighter context always adds to the vigor of the cosmos!",
      "expectedoutput": "It's hard to say if it's funny or not.",
      "reasoning": "Validates a non-definitive system response on humor judgment, in full adherence to the rule."
    },
    {
      "ruleid": null,
      "testinput": "joke: Why did the computer go to the doctor? Because it had a virus!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why don’t skeletons fight each other? They don’t have the guts.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Parallel lines have so much in common. It's a shame they'll never meet.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I told my wife she was drawing her eyebrows too high. She looked surprised.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why was the math book sad? Because it had too many problems.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What did the grape do when it got stepped on? Nothing but let out a little wine!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What do you call a bear with no teeth? A gummy bear!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I asked the librarian if the library had books on paranoia. She whispered, \"They're right behind you.\"",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why don’t scientists trust atoms? Because they make up everything!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Two antennas met on a roof, fell in love, and got married. The wedding wasn’t much, but the reception was excellent.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I used to play piano by ear, but now I use my hands.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What did the 0 say to the 8? Nice belt!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I got hit in the head with a can of soda. Luckily, it was a soft drink.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What do you call fake spaghetti? An impasta!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Did you hear about the Italian chef who died? He pasta way.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why do cows have hooves instead of feet? Because they lactose.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why did the scarecrow win an award? Because he was outstanding in his field!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I'm reading a book on anti-gravity. It's impossible to put down!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I'm on a whiskey diet. I've lost three days already.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I don't trust those trees. They seem kind of shady.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What do you call an alligator in a vest? An investigator!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Wanna hear a construction joke? Oh, never mind, I'm still working on it.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why was the big cat disqualified from the race? Because it was a cheetah.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I told a joke about chemistry, but there was no reaction.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why do seagulls fly over the ocean? Because if they flew over the bay, they'd be bagels.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I couldn't figure out why the baseball kept getting bigger. Then it hit me.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What did the left eye say to the right eye? Between us, something smells.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Want to hear a joke about a piece of paper? Never mind, it's tearable.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why don't programmers like nature? It has too many bugs.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why can't you give Elsa a balloon? Because she will let it go.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: What is red and smells like blue paint? Red paint.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why did the coffee file a police report? It got mugged.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Want to hear a joke about construction? Sorry, I'm still working on it.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I have a fear of speed bumps, but I'm slowly getting over it.",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: Why are frogs so happy? Because they eat whatever bugs them!",
      "baseline": true
    },
    {
      "ruleid": null,
      "testinput": "joke: I told my wife she should embrace her mistakes. She gave me a hug.",
      "baseline": true
    }
  ],
  "testEvals": [],
  "testResults": []
}