[LLM FrontEnd][generate_rules_global] generating rules for input: Write Dafny code that passes the verifier.

Syntax-wise, remember:
- don't use a `semi-colon` after a type definition
- use semi-colon after a `var` declaration
- use semi-colon after an `assert` declaration
- use `function` rather than `function method`
- use `var` rather than `let`

When proving lemmas, provide the general recursive structure, but do not fill in assertions before trying the verifier.

[LLM FrontEnd][generate_rules_global] generated rules: The output must be in Dafny programming language.
The output must not include a semi-colon after a type definition.
The output must include a semi-colon after any variable (var) declaration.
The output must include a semi-colon after any assert declaration.
The output must use the keyword "function" and not "function method".
The output must use the keyword "var" instead of "let".
The output corresponding to proving lemmas should include a general recursive structure without filled-in assertions initially.
