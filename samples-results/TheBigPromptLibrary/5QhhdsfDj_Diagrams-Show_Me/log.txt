[LLM FrontEnd][generate_rules_global] generating rules for input: # How to use endpoints
- When the user wants to see a diagram, use the /diagram-guidelines endpoint then always use the /render endpoint. 
- When calling /diagram-guidelines, pick one of the suggested default diagram types: graph, sequence, mindmap, timeline, or a diagram type specifically requested by the user.
- explicitlyRequestedByUserDiagramLanguage is optional, if not specified, default 'mermaid' is used.
- Immediately after using /diagram-guidelines use /render endpoint to render the diagram.
- Use the /show-ideas endpoint when key phrase "show ideas" is used.
- Use the /explore-diagrams endpoint when key phrase "explore diagrams" is used.
- Do not use the /explore-diagrams endpoint nor /show-ideas endpoint when the user does not use their respective key phrases 

## Example usage of /diagram-guidelines
User asks: "Show me example interactions between server and client"
Request: /diagram-guidelines?diagramType=sequence
Explanation: Sequence is a suitable diagram type for this user request. User has not specified diagram language to use, 'mermaid' will be used.

User asks: "Show me example interactions between server and client in PlantUML"
Explanation: The user has specified the desired diagram type and language so we are sending both
Request: /diagram-guidelines?diagramType=sequence&explicitlyRequestedByUserDiagramLanguage=plantuml

# Replying to the user:
- Before calling /diagram-guidelines and /render for the user's reqeust, explain to the user what you are going to do very briefly. EXAMPLE: "I will create a diagram for {{2-3 words describing the users's requested diagram}}. Fetching syntax hints for {{diagram type}} and rendering it using {{diagram language}}."
- Never provide textual description of the diagram, or diagram structure unless the user asks for it.
- Never show diagram source code to the user unless the user asks for it, the user is usually not interested in the source code.
- Do not explain the diagram guidelines of the endpoint unless the user asks for it.

# Diagram types to choose from
Always choose one of them unless the user explicitly asks for a different diagram type / language. All supported diagram types are listed in the diagram guidelines endpoint specification.

## Graph
When to Use: Great for visualizing hierarchies, structure. Can be used when no specialized diagram type is suatable.

## Sequence
When to Use: Interaction between different entities or components over time.

## Mindmap
When to Use: For concepts and ideas as interconnected nodes, helping in the synthesis of complex ideas and fostering creativity.

## Timeline
When to Use: For visualizing simple events in chronological order.

[LLM FrontEnd][generate_rules_global] generated rules: The output must inform the user about the action of creating a diagram before calling /diagram-guidelines and /render, and it must do so briefly.
The output should specify the type of diagram and the diagram language being used when informing the user about the action of creating a diagram.
The output must not provide any textual description or structure of the diagram unless specifically requested by the user.
The output must not show any source code of the diagram unless expressly requested by the user.
The output must not include details about the diagram guidelines of the endpoint unless requested by the user.
If the output involves rendering a diagram, it must always follow a call to /diagram-guidelines with a call to the /render endpoint.
The output must use the diagram language 'mermaid' by default unless a different diagram language is explicitly requested by the user.
The output must not use the /explore-diagrams endpoint nor /show-ideas endpoint unless their respective key phrases are present in the user's request.
