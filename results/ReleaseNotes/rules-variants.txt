1 f45c914eec282b8852cf93eabba45c1a - Only include the most important changes. All changes must be in the commits.
2 d289647b4dfe787a17bfc2a3b306fc16 - Tell a story about the changes.
3 c3a5b8f4ef743586f4c4342b0bcd9e74 - Use emojis.
4 562be226247933bed9e2db4f55a287d8 - Ignore commits with '[skip ci]' in the message.
5 d65d1b8a5477a9fa8a3697aac2257a61 - Do NOT give a commit overview.
6 4c06a7bbc9cbdeca4e04818d991bcd30 - Do NOT add a top level title.
7 a4ffa39ab4d32fd19175b2b7e27a4418 - Do NOT mention ignore commits or instructions.
8 e509044f609847e097c2eae1205b2544 - Be concise.
9 16bd04dd923319e61791c8c0e9590765 - Use simple language for better understanding.
10 cd3bc06a8124eaae47dfad0f171d6029 - Ensure the release notes are easy to scan through.
11 c9e600568ea5b9b78194cb4a98df378d - Group similar changes together for better organization.
12 192fa8fc749d669ecd166e0cbef38c11 - Highlight critical bug fixes to alert users about resolved issues.
13 b504bc7572d434a3e473fca9033d6fa0 - Mention new features or functionalities explicitly to draw attention.
14 49e62befbaa1faa6c929fa306c51b458 - Include performance improvements to showcase enhanced user experience.
15 f8f342b8a0cf7da02f2d2da5a1da9991 - Indicate deprecated features to inform users of features that will be unsupported in the future.
16 c71f40fca3c4dd89a3851dba3fb06af3 - Emphasize security updates to underline improvements in safety and data protection.
17 9357502731f0bb22d7c950a7eccf0ed1 - Provide links to documentation for major updates to facilitate deeper user understanding.
18 737ea9c38dd42f8308a090497ae59ca4 - List any updates to third-party dependencies to keep users informed of important integrations.
19 de66e015157ba9461aae0daf18d0035e - Make sure to include any visual or UI enhancements to highlight changes in user interaction.
20 f9a93de1151d1715c47cb8e20f46b29a - Outline any breaking changes so users can prepare for necessary adjustments in their implementations.
